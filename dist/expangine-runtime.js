!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports["expangine-runtime"]=t():e["expangine-runtime"]=t()}(window,function(){return function(e){var t={};function s(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,s),r.l=!0,r.exports}return s.m=e,s.c=t,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)s.d(n,r,function(t){return e[t]}.bind(null,r));return n},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=0)}([function(e,t,s){"use strict";function n(e){return"number"==typeof e&&isFinite(e)}function r(e){return"string"==typeof e}function i(e){return Array.isArray(e)}function a(e){return e instanceof Date}function o(e){return e instanceof Map}function u(e){return e instanceof Set}function p(e){return"boolean"==typeof e}function l(e){return"function"==typeof e}function c(e){return"object"==typeof e&&null!==e&&!Array.isArray(e)}function h(e){return void 0===e}function d(e,t){return e.constructor===t.constructor}function m(e,t=1e-6){return Math.abs(e-Math.round(e))<=t}function y(e){if(i(e))return 0===e.length;if(c(e)){for(const t in e)return!1;return!0}return null==e}function g(e,t,s){return e<t?t:e>s?s:e}function f(e){return i(e)?new Map(e):o(e)?e:c(e)?new Map(M(e,(e,t)=>[t,e])):new Map}function v(e){return new Map(Array.from(e.entries()).map(([e,t])=>[t,e]))}function T(e,t,s,n,r,i){const a=t.map(()=>!1);for(let n=e.length-1;n>=0;n--){const o=e[n],u=t.findIndex(e=>s(o,e));-1!==u?(i(e,n,o,t[u]),a[u]=!0):r(e,n,o)}for(let s=0;s<t.length;s++)a[s]||n(e,t[s]);return e}function b(e,t,s,n,r){for(const s in e)s in t||n(e,s,e[s]);for(const n in t)n in e?r(e,n,e[n],t[n]):s(e,n,t[n]);return e}function x(e,t,s=(e=>e)){return S(e,(e,n,r)=>(r[s(n,e)]=t(e,n),r),Object.create(null))}function E(e,t){return S(e,(s,n)=>t(s,n,e),void 0)}function O(e,t=(e=>e)){return S(e,(e,s,n)=>(n.push(t(e,s)),n),[])}function S(e,t,s){for(const n in e)s=t(e[n],n,s);return s}function w(e,t){const s=Object.create(null);for(let n=0;n<e.length;n++){const r=e[n];s[r]=t(r,n)}return s}function M(e,t){const s=[];for(const n in e)s.push(t(e[n],n));return s}function I(e,t){return void 0===e?t:e}function P(e,t,s=t){return C(e+"",t,"0",!0).substring(0,s)}function C(e,t,s,n){for(;e.length<t;)n?e=s+e:e+=s;return e}function D(e){return i(e)||c(e)?JSON.stringify(e):e+""}s.r(t);const k=()=>{},N=()=>{};class L{constructor(e,t){this.remove=k,this.replace=N,this.callback=e,this.stack=[],this.path=[],this.stopped=!1,this.result=t}static isTraversable(e){return e&&l(e.traverse)}enter(e,t){return this.stopped?this.result:(this.callback(e,this.stack,this.path,this),this.remove=k,this.replace=N,t&&!this.stopped&&(this.stack.push(e),t(),this.stack.pop()),this.result)}step(e,t,s=N,n=k){return this.stopped?this:(this.path.push(e),this.remove=n,this.replace=s,L.isTraversable(t)?t.traverse(this):t(),this.path.pop(),this)}modify(e){const t=e(this.result);return void 0!==t&&(this.result=t),this}stop(e){return this.result=e,this}getResult(){return this.result}removeOrReplace(e){const t=this.canRemove(),s=this.canReplace();return!(!t&&!s)&&(t?this.remove():this.replace(l(e)?e():e),!0)}canRemove(){return this.remove!==k}canReplace(){return this.replace!==N}filterClass(e,t=this.result){return this.filter(t=>t.constructor===e,t)}filter(e,t=this.result){return new L((t,s,n,r)=>{e(t,s,n)&&this.callback(t,s,n,r)},t)}static list(){const e=[];return new L((t,s,n)=>{e.push({value:t,stack:s.slice(),path:n.slice()})},e)}static count(){return new L((e,t,s,n)=>n.result++,0)}}class R{constructor(e){this.parent=null,this.options=e}getRequired(){return this}isWrapper(){return!1}isCompatible(e,t={}){return e===this||(!(t.exact||!e.isWrapper()||!this.isCompatible(e.getSimplifiedType(),t))||!(t.strict&&!d(this,e)&&!this.acceptsOtherTypes())&&this.isDeepCompatible(e,t))}acceptsOtherTypes(){return!1}acceptsType(e){return this.isCompatible(e,{strict:!0})}acceptsData(e){return this.isCompatible(e,{strict:!0,value:!0})}exactType(e){return this.isCompatible(e,{exact:!0,strict:!0})}exactData(e){return this.isCompatible(e,{exact:!0,strict:!0,value:!0})}getValueChangeExpression(e,t,s){return e}getValueChangeAt(e){let t=this.parent;const s=this.getPath();for(;t;){const n=s.pop();e=t.getValueChangeExpression(e,n,n),t=t.parent}return e}getPath(){return this.getRootType().traverse(new L((e,t,s,n)=>{e===this&&n.stop(s.slice())}))}getTypeFromPath(e){if(0===e.length)return this;const t=this.getTypeFromStep(e[0]);return t?t.getTypeFromPath(e.slice(1)):null}getTypeFromStep(e){return null}getRootType(){let e=this;for(;e.parent;)e=e.parent;return e}}var A,j;!function(e){e[e.LOW=1]="LOW",e[e.MEDIUM=2]="MEDIUM",e[e.HIGH=3]="HIGH"}(A||(A={})),function(e){e[e.UNSAFE_OPERATION=1]="UNSAFE_OPERATION",e[e.POSSIBLY_NULL=2]="POSSIBLY_NULL",e[e.INCOMPATIBLE_TYPES=3]="INCOMPATIBLE_TYPES",e[e.INVALID_EXPRESSION=4]="INVALID_EXPRESSION",e[e.MISSING_FUNCTION=5]="MISSING_FUNCTION",e[e.MISSING_EXPRESSION=6]="MISSING_EXPRESSION",e[e.MISSING_OPERATION=7]="MISSING_OPERATION",e[e.MISSING_TYPE_NAME=8]="MISSING_TYPE_NAME",e[e.MISSING_TYPE=9]="MISSING_TYPE",e[e.MISSING_RELATION_NAME=10]="MISSING_RELATION_NAME",e[e.MISSING_RELATION=11]="MISSING_RELATION",e[e.MISSING_DATA_NAME=12]="MISSING_DATA_NAME",e[e.MISSING_DATA=13]="MISSING_DATA"}(j||(j={}));class q{constructor(){this.parent=null}getPath(){return this.getRootExpression().traverse(new L((e,t,s,n)=>{e===this&&n.stop(s.slice())}))}getExpressionFromPath(e){if(0===e.length)return this;const t=this.getExpressionFromStep(e);if(!t||!t[1])return null;const[s,n]=t;return n.getExpressionFromPath(e.slice(s))}getExpressionFromStep(e){return null}getRootExpression(){let e=this;for(;e.parent;)e=e.parent;return e}validations(e,t){const s=[];return this.validate(e,t,e=>s.push(e)),s}validateType(e,t,s,n,r,i=this){const a=s?s.getSimplifiedType():null,o=n?n.getType(e,t):null,u=o?o.getSimplifiedType():null;let p=u;u?(u.isOptional()&&!a.isOptional()&&(p=p.getRequired()),a.acceptsType(p)?p!==u&&r({type:j.POSSIBLY_NULL,severity:A.MEDIUM,context:t,subject:n,parent:i,expected:a,actual:u}):r({type:j.INCOMPATIBLE_TYPES,severity:a.isCompatible(u)?A.MEDIUM:A.HIGH,context:t,subject:n,parent:i,expected:a,actual:u})):a&&!a.isOptional()&&r({type:j.INCOMPATIBLE_TYPES,severity:A.HIGH,context:t,subject:n,parent:i,expected:a}),n&&n.validate(e,t,r)}validatePath(e,t,s,n,r,i=this){let a=s;n.forEach(s=>{a&&(a=a.getSubType(s,e,t)),a||r({type:j.INVALID_EXPRESSION,severity:A.HIGH,subject:s,context:t,parent:i}),s.validate(e,t,r)})}}function _(e){return!("baseType"in e)&&l(e)}class V{constructor(e){this.prefix=e,this.map=Object.create(null),this.types=Object.create(null)}get(e){return this.map[e]||this.map[this.prefix+e]}getTypes(e){return this.types[e]||this.types[this.prefix+e]}set(e,t={},s=[],n=[],r=[],i=[],a=[]){const o=this.prefix+e,u=t.mutates||[],p=t.complexity||0,l=Object.create(null);r.forEach(e=>l[e]=e);const c={id:o,mutates:u,complexity:p,params:s,optional:n,scope:r,scopeDefaults:l,hasScope:i,resultDependency:a};return this.map[o]=c,c}setTypes(e,t,s=Object.create(null),n=Object.create(null),r=Object.create(null)){const i={returnType:t,params:s,optional:n,scope:r};return this.types[e.id]=i,i}}class F{constructor(e){this.prefix=e,this.map=Object.create(null),this.list=[]}set(e,t,s,n){const r=this.prefix+e,i={id:r,op:t.id,value:s||t.params[0],params:n||{}};return this.map[r]=i,this.list.push(i),i}get(e){return this.map[e]||this.map[this.prefix+e]}}const Y={Entity:"@",Any:"any",Boolean:"bool",Color:"color",Date:"date",Enum:"enum",Function:"func",List:"list",Many:"many",Not:"not",Map:"map",Null:"null",Number:"num",Object:"obj",Optional:"?",Reference:"ref",Relation:"rel",Set:"set",Text:"text",Tuple:"tuple",Delimiter:":"},G=new V(Y.Boolean+Y.Delimiter),B=new F(Y.Boolean+Y.Delimiter),U=G,W={create:U.set("create"),maybe:U.set("maybe",{},["value"]),and:U.set("&",{},["a","b"]),or:U.set("|",{},["a","b"]),xor:U.set("^",{},["a","b"]),not:U.set("!",{},["a"]),cmp:U.set("cmp",{},["value","test"]),isValid:U.set("?",{},["value"]),isTrue:U.set("t?",{},["value"]),isFalse:U.set("f?",{},["value"]),isEqual:U.set("=",{},["value","test"]),isNotEqual:U.set("!=",{},["value","test"]),asAny:U.set("~"+Y.Any,{},["value"]),asBoolean:U.set("~"+Y.Boolean,{},["value"]),asColor:U.set("~"+Y.Color,{},["value"]),asDate:U.set("~"+Y.Date,{},["value"]),asList:U.set("~"+Y.List,{},["value"]),asMap:U.set("~"+Y.Map,{},["value"]),asNumber:U.set("~"+Y.Number,{},["value"]),asObject:U.set("~"+Y.Object,{},["value"]),asText:U.set("~"+Y.Text,{},["value"]),asTuple:U.set("~"+Y.Tuple,{},["value"]),asSet:U.set("~"+Y.Set,{},["value"])};class H{constructor(){this.compareTypes=this.createTypeMap((e,t)=>t),this.compareMap=this.createTypeMap(()=>[]),this.equalsMap=this.createTypeMap(()=>[]),this.copyList=[],this.jsonList=[]}compare(e,t){const s=(e,t)=>{const n=typeof e,r=typeof t;if(n!==r)return this.compareTypes[n]-this.compareTypes[r];const i=this.compareMap[n];for(const n of i){const r=n.compare(e,t,s);if(void 0!==r)return r}return e===t?0:e<t?-1:1};return s(e,t)}getCompare(e,t){return 0===e&&0===t?0:e<t?1:-1}addCompare(e){return this.addToPriorityList(this.compareMap[e.type],e)}equals(e,t){const s=(e,t)=>{if(e===t)return!0;const n=typeof e;if(n!==typeof t)return!1;const r=this.equalsMap[n];for(const n of r){const r=n.equals(e,t,s);if(void 0!==r)return r}return!1};return s(e,t)}addEquals(e){return this.addToPriorityList(this.equalsMap[e.type],e)}copy(e,t=!1){if(!e)return e;if("object"==typeof e){const s=this.copyList;if(t){const t=new Map,n=(e,s)=>{t.set(e,s)},r=e=>{if(!e)return e;if("object"==typeof e){const i=t.get(e);if(void 0!==i)return i;for(const t of s){const s=t.copy(e,r,n);if(void 0!==s)return s}}return e};return r(e)}{const t=(e,t)=>{},n=e=>{if(!e)return e;if("object"==typeof e)for(const r of s){const s=r.copy(e,n,t);if(void 0!==s)return s}return e};return n(e)}}return e}addCopier(e){return this.addToPriorityList(this.copyList,e)}toJson(e){if(!e)return e;if("object"==typeof e){const t=this.jsonList,s=e=>{if(!e)return e;if("object"==typeof e)for(const n of t){const t=n.toJson(e,s);if(void 0!==t)return t}return e};return s(e)}return e}fromJson(e){if(!e)return e;if("object"==typeof e){const t=this.jsonList,s=e=>{if(!e)return e;if("object"==typeof e)for(const n of t){const t=n.fromJson(e,s);if(void 0!==t)return t}return e};return s(e)}return e}addJson(e){return this.addToPriorityList(this.jsonList,e)}createTypeMap(e){const t=Object.create(null);return H.TYPES.forEach((s,n)=>{t[s]=e(s,n)}),t}addToPriorityList(e,t){return e.push(t),e.sort((e,t)=>t.priority-e.priority),this}}H.TYPES=["boolean","number","bigint","string","symbol","object","undefined","function"];const J=new H,K=1,z=.5;class X extends R{static decode(e,t){return new X(e[K]||{})}static encode(e){return y(e.options)?this.id:[this.id,e.options]}static describe(e,t){return p(e)?this.baseType:null}static register(){J.addCompare({priority:0,type:"boolean",compare:(e,t)=>(e?1:0)-(t?1:0)}),J.addEquals({priority:0,type:"boolean",equals:(e,t)=>e===t})}getId(){return X.id}getOperations(){return X.operations.map}merge(e){}getSubType(e,t,s){return null}getSubTypes(e){return[]}getExactType(e){return this}getSimplifiedType(){return this}isDeepCompatible(e,t){return!t.exact&&!t.strict||e instanceof X}isOptional(){return!1}isSimple(){return!0}traverse(e){return e.enter(this)}setParent(e=null){this.parent=e}removeDescribedRestrictions(){}getCreateExpression(){return Ds.op(W.create,{})}getValidateExpression(){return Ds.op(W.isValid,{value:Ds.get("value")})}getCompareExpression(){return Ds.op(W.cmp,{value:Ds.get("value"),test:Ds.get("test")})}isValid(e){if(p(e))return!0;const t=e+"";return!(!this.options.true||!this.options.true[t])||!(!this.options.false||!this.options.false[t])}normalize(e){if(!p(e)){const t=e+"";if(this.options.true&&this.options.true[t])return!0;if(this.options.false&&this.options.false[t])return!1}return e}newInstance(){return new X({})}clone(){return new X(J.copy(this.options))}encode(){return X.encode(this)}create(){return!1}random(e){return e(0,1,!1)<z}fromJson(e){return e}toJson(e){return e}}X.id=Y.Boolean,X.operations=G,X.computeds=B,X.baseType=new X({}),X.describePriority=4,X.registered=!1;const $=1;class Q extends q{constructor(e){super(),this.expression=e}static decode(e,t){const s=t.getExpression(e[$]);return new Q(s)}static encode(e){const t=e.expression.encode();return[this.id,t]}getId(){return Q.id}getComplexity(e){return this.expression.getComplexity(e)}getScope(){return null}encode(){return Q.encode(this)}clone(){return new Q(this.expression.clone())}getType(e,t){return X.baseType}traverse(e){return e.enter(this,()=>e.step(Q.STEP_NOT,this.expression,e=>this.expression=e))}getExpressionFromStep(e){return e[0]===Q.STEP_NOT?[1,this.expression]:null}setParent(e=null){this.parent=e,this.expression.setParent(this)}validate(e,t,s){this.validateType(e,t,X.baseType,this.expression,s)}}Q.STEP_NOT="not",Q.id="not";const Z=1;class ee extends q{constructor(e){super(),this.expressions=e}static decode(e,t){const s=e[Z].map(e=>t.getExpression(e));return new ee(s)}static encode(e){const t=e.expressions.map(e=>e.encode());return[this.id,t]}getId(){return ee.id}getComplexity(e){return this.expressions.reduce((t,s)=>Math.max(t,s.getComplexity(e)),0)}getScope(){return null}encode(){return ee.encode(this)}clone(){return new ee(this.expressions.map(e=>e.clone()))}getType(e,t){return X.baseType}traverse(e){return e.enter(this,()=>this.expressions.forEach((t,s)=>e.step(s,t,e=>this.expressions.splice(s,1,e),()=>this.expressions.splice(s,1))))}getExpressionFromStep(e){return n(e[0])&&e[0]<this.expressions.length?[1,this.expressions[e[0]]]:null}setParent(e=null){this.parent=e,this.expressions.forEach(e=>e.setParent(this))}validate(e,t,s){const n=X.baseType;this.expressions.forEach(r=>{this.validateType(e,t,n,r,s)})}}ee.id="and";const te=new V(Y.Any+Y.Delimiter),se=new F(Y.Any+Y.Delimiter),ne=te,re={complexity:2},ie={cmp:ne.set("cmp",re,["value","test"]),copy:ne.set("copy",re,["value"]),isDefined:ne.set("isDefined",{},["value"]),getDefined:ne.set("getDefined",{},["value","defined"],[],["defined"],["defined"],["value"]),coalesce:ne.set("coalesce",{},["a","b"],["c","d","e"],[],[],["a","b","c","d","e"]),require:ne.set("require",{},["value"],[],[],[],["value"]),ternary:ne.set("ternary",{},["condition","truthy","falsy"],[],[],[],["truthy","falsy"]),isValid:ne.set("?",{},["value"]),isEqual:ne.set("=",re,["value","test"]),isNotEqual:ne.set("!=",re,["value","test"]),isLess:ne.set("<",re,["value","test"]),isLessOrEqual:ne.set("<=",re,["value","test"]),isGreater:ne.set(">",re,["value","test"]),isGreaterOrEqual:ne.set(">=",re,["value","test"]),asAny:ne.set("~"+Y.Any,{},["value"]),asBoolean:ne.set("~"+Y.Boolean,{},["value"]),asColor:ne.set("~"+Y.Color,{},["value"]),asDate:ne.set("~"+Y.Date,{},["value"]),asList:ne.set("~"+Y.List,{},["value"]),asMap:ne.set("~"+Y.Map,{},["value"]),asNumber:ne.set("~"+Y.Number,{},["value"]),asObject:ne.set("~"+Y.Object,{},["value"]),asText:ne.set("~"+Y.Text,{},["value"]),asTuple:ne.set("~"+Y.Tuple,{},["value"]),asSet:ne.set("~"+Y.Set,{},["value"])};class ae extends R{static decode(e){return ae.baseType}static encode(e){return this.id}static describe(e){return null===e?this.baseType:null}static register(){}getId(){return ae.id}getOperations(){return ae.operations.map}merge(e){}getSubType(e,t,s){return null}getSubTypes(e){return[]}getExactType(e){return this}getSimplifiedType(){return this}isDeepCompatible(e,t){return e instanceof ae}isOptional(){return!0}isSimple(){return!0}traverse(e){return e.enter(this)}setParent(e=null){}removeDescribedRestrictions(){}getCreateExpression(){return Ds.null()}getValidateExpression(){return Ds.op(ie.isEqual,{value:Ds.get("value"),test:Ds.null()})}getCompareExpression(){return Ds.op(ie.cmp,{value:Ds.get("value"),test:Ds.get("test")})}isValid(e){return null==e}normalize(e){return e}newInstance(){return this}clone(){return this}encode(){return ae.encode(this)}create(){return null}random(e){return null}fromJson(e){return null}toJson(e){return null}}ae.id=Y.Null,ae.operations=new V(Y.Null+Y.Delimiter),ae.computeds=new F(Y.Null+Y.Delimiter),ae.baseType=new ae(null),ae.describePriority=6,ae.registered=!1;class oe extends q{static decode(e,t){return this.instance}static encode(e){return[this.id]}getId(){return oe.id}getComplexity(e){return 0}getScope(){return null}encode(){return oe.encode(this)}clone(){return this}getType(e,t){return ae.baseType}traverse(e){return e.enter(this)}setParent(e=null){}validate(e,t,s){}}oe.id="noop",oe.instance=new oe;class ue extends R{static decode(e,t){return this.baseType}static encode(e){return this.id}static describe(e,t){return c(e)&&r(e.$any)?new ue({}):null}static register(){}getId(){return ue.id}getOperations(){return ue.operations.map}merge(e){}getSubType(e,t,s){return null}getSubTypes(e){return[]}getExactType(e){return this}getSimplifiedType(){return this}isCompatible(e){return!0}isDeepCompatible(e,t){return!0}isOptional(){return!0}isSimple(){return!1}traverse(e){return e.enter(this)}setParent(e=null){this.parent=e}removeDescribedRestrictions(){}getCreateExpression(){return Ds.string()}getValidateExpression(){return Ds.true()}getCompareExpression(){return Ds.op(ie.cmp,{value:Ds.get("value"),test:Ds.get("test")})}isValid(e){return!0}normalize(e){return e}newInstance(){return new ue({})}clone(){return new ue({})}encode(){return ue.encode(this)}create(){return""}random(e){return null}fromJson(e){return J.fromJson(e)}toJson(e){return J.toJson(e)}}ue.id=Y.Any,ue.operations=te,ue.computeds=se,ue.baseType=new ue({}),ue.describePriority=8,ue.registered=!1;const pe=1,le=2;class ce extends q{constructor(e,t){super(),this.define=e,this.body=t}static decode(e,t){const s=e[pe].map(([e,s])=>[e,t.getExpression(s)]),n=t.getExpression(e[le]);return new ce(s,n)}static encode(e){const t=e.define.map(([e,t])=>[e,t.encode()]);return[this.id,t,e.body.encode()]}getId(){return ce.id}getComplexity(e){return this.define.reduce((t,[s,n])=>Math.max(t,n.getComplexity(e)),this.body.getComplexity(e))}getScope(){const e={};return this.define.forEach(([t,s])=>e[t]=ue.baseType),e}encode(){return ce.encode(this)}clone(){return new ce(this.define.map(([e,t])=>[e,t.clone()]),this.body.clone())}getType(e,t){const{scope:s,context:n}=e.getContextWithScope(t);return this.define.forEach(([t,r])=>s[t]=r.getType(e,n)),this.body.getType(e,n)}traverse(e){return e.enter(this,()=>{e.step(ce.STEP_DEFINE,()=>this.define.forEach(([t,s],n)=>e.step(t,s,e=>this.define[n].splice(1,1,e),()=>this.define.splice(n,1)))),e.step(ce.STEP_BODY,this.body,e=>this.body=e)})}getExpressionFromStep(e){return e[0]===ce.STEP_BODY?[1,this.body]:e[0]===ce.STEP_DEFINE?[2,this.define.filter(([t])=>t===e[1]).map(([e,t])=>t)[0]]:null}setParent(e=null){this.parent=e,this.define.forEach(([e,t])=>t.setParent(this)),this.body.setParent(this)}validate(e,t,s){const n=e.getContextWithScope(t);this.define.forEach(([t,r])=>{r.validate(e,n.context,s),n.scope[t]=r.getType(e,n.context)}),this.body.validate(e,n.context,s)}with(e,t){const s=r(e)?{[e]:t}:e;for(const e in s){const t=Ds.parse(s[e]),n=this.define.find(([t])=>t===e);n?n[1]=t:this.define.push([e,t]),t.setParent(this)}return this}run(e){return this.body=e,this.body.setParent(this),this}}ce.STEP_DEFINE="define",ce.STEP_BODY="body",ce.id="def";const he=1e5,de="break",me=1,ye=2,ge=3,fe=4;class ve extends q{constructor(e,t,s=de,n=he){super(),this.condition=e,this.body=t,this.breakVariable=s,this.maxIterations=n}static decode(e,t){const s=t.getExpression(e[me]),n=t.getExpression(e[ye]),r=e[ge]||de,i=parseInt(e[fe])||this.MAX_ITERATIONS;return new ve(s,n,r,i)}static encode(e){const t=[this.id,e.condition.encode(),e.body.encode()],s=e.maxIterations!==this.MAX_ITERATIONS;return(e.breakVariable!==de||s)&&t.push(e.breakVariable),s&&t.push(e.maxIterations),t}getId(){return ve.id}getComplexity(e){return Math.max(this.condition.getComplexity(e),this.body.getComplexity(e))+1}getScope(){return{[this.breakVariable]:X.baseType}}encode(){return ve.encode(this)}clone(){return new ve(this.condition.clone(),this.body.clone(),this.breakVariable,this.maxIterations)}getType(e,t){const{context:s}=e.getContextWithScope(t,this.getScope()),n=this.body.getType(e,s);return n?hi.optional(n):null}traverse(e){return e.enter(this,()=>{e.step(ve.STEP_CONDITION,this.condition,e=>this.condition=e),e.step(ve.STEP_BODY,this.body,e=>this.body=e)})}getExpressionFromStep(e){return e[0]===ve.STEP_CONDITION?[1,this.condition]:e[0]===ve.STEP_BODY?[1,this.body]:null}setParent(e=null){this.parent=e,this.condition.setParent(this),this.body.setParent(this)}validate(e,t,s){this.validateType(e,t,X.baseType,this.condition,s);const n=e.getContext(t,this.getScope());this.body.validate(e,n,s)}do(e,t){return this.body=e,this.body.setParent(this),t&&(this.condition=t,this.condition.setParent(this)),this}while(e){return this.condition=e,this.condition.setParent(this),this}withBreak(e){return this.breakVariable=e,this}withMax(e){return this.maxIterations=e,this}}ve.STEP_CONDITION="condition",ve.STEP_BODY="body",ve.MAX_ITERATIONS=he,ve.id="do";const Te=1;class be extends q{constructor(e){super(),this.chain=e}static decode(e,t){const s=e[Te].map(e=>t.getExpression(e));return new be(s)}static encode(e){const t=e.chain.map(e=>e.encode());return[this.id,t]}getId(){return be.id}getComplexity(e){return this.chain.reduce((t,s)=>Math.max(t,s.getComplexity(e)),0)}getScope(){return null}encode(){return be.encode(this)}clone(){return new be(this.chain.map(e=>e.clone()))}getType(e,t){return this.chain[this.chain.length-1].getType(e,t)}traverse(e){return e.enter(this,()=>this.chain.forEach((t,s)=>e.step(s,t,e=>this.chain.splice(s,1,e),()=>this.chain.splice(s,1))))}getExpressionFromStep(e){return n(e[0])&&e[0]<this.chain.length?[1,this.chain[e[0]]]:null}setParent(e=null){this.parent=e,this.chain.forEach(e=>e.setParent(this))}validate(e,t,s){this.chain.forEach(n=>{n.validate(e,t,s)})}add(e){const t=i(e)?e:[e];for(const e of t)this.chain.push(e),e.setParent(this);return this}}be.id="chain";const xe=1;class Ee extends q{constructor(e){super(),this.comment=e}static decode(e,t){const s=e[xe];return new Ee(s)}static encode(e){return[this.id,e.comment]}getId(){return Ee.id}getComplexity(e){return 0}getScope(){return null}encode(){return Ee.encode(this)}clone(){return new Ee(this.comment)}getType(e,t){return ae.baseType}traverse(e){return e.enter(this)}setParent(e=null){this.parent=e}validate(e,t,s){}}Ee.id="comment",Ee.instance=new Ee("");const Oe=1,Se=2;class we extends q{constructor(e,t){super(),this.expression=e,this.name=t}static decode(e,t){const s=e[Oe],n=t.getExpression(e[Se]);return new we(n,s)}static encode(e){return[this.id,e.name,e.expression.encode()]}getId(){return we.id}getComplexity(e){const t=e.getComputed(this.name);if(!t)return 0;const s=e.getOperation(t.op);return Math.max(s?s.complexity:0,this.expression.getComplexity(e))}getScope(){return null}encode(){return we.encode(this)}clone(){return new we(this.expression.encode(),this.name)}getType(e,t){return e.getComputedReturnType(this.name,this.expression.getType(e,t))}traverse(e){return e.enter(this,()=>e.step(we.STEP_EXPRESSION,this.expression,e=>this.expression=e))}getExpressionFromStep(e){return e[0]===we.STEP_EXPRESSION?[1,this.expression]:null}setParent(e=null){this.parent=e,this.expression.setParent(this)}validate(e,t,s){const n=this.expression.getType(e,t);n&&e.hasComputed(n,this.name)||s({type:j.INVALID_EXPRESSION,severity:A.HIGH,context:t,subject:this.expression,parent:this}),this.expression.validate(e,t,s)}}we.STEP_EXPRESSION="expression",we.id="comp";const Me=new V(Y.Text+Y.Delimiter),Ie=new F(Y.Text+Y.Delimiter),Pe=Me,Ce={create:Pe.set("create"),uuid:Pe.set("uuid"),maybe:Pe.set("maybe",{},["value"]),append:Pe.set("+",{},["value","append"]),prepend:Pe.set("pre",{},["value","prepend"]),lower:Pe.set("lo",{},["value"]),upper:Pe.set("up",{},["value"]),char:Pe.set("@",{},["value","index"],["outside"]),replace:Pe.set("replace",{},["value","find","replace"]),repeat:Pe.set("repeat",{},["value","times"]),split:Pe.set("split",{},["value","by"],["limit"]),chars:Pe.set("chars",{},["value"]),sub:Pe.set("sub",{},["value"],["start","end"]),indexOf:Pe.set("i?",{},["value","search"],["start"]),lastIndexOf:Pe.set("li?",{},["value","search"],["start"]),trim:Pe.set("trim",{},["value"],["start","end"]),startsWith:Pe.set("starts",{},["value","test"]),endsWith:Pe.set("ends",{},["value","test"]),soundex:Pe.set("soundex",{complexity:1},["value"],["max","min"]),metaphone:Pe.set("metaphone",{complexity:1},["value"]),distance:Pe.set("dist",{complexity:1},["value","test"]),length:Pe.set("len",{},["value"]),compare:Pe.set("cmp",{},["value","test"],["ignoreCase"]),like:Pe.set("like",{},["value","pattern"],["ignoreCase"]),pad:Pe.set("pad",{},["value","padding","min"],["max","append"]),regexTest:Pe.set("regexTest",{},["value","regex"],["ignoreCase","multiline"]),regexSplit:Pe.set("regexSplit",{},["value","regex"],["limit","ignoreCase","multiline"]),regexMatch:Pe.set("regexMatch",{},["value","regex"],["ignoreCase","multiline"]),regexMatchAll:Pe.set("regexMatchAll",{},["value","regex"],["ignoreCase","multiline"]),regexReplace:Pe.set("regexReplace",{},["value","regex","replacement"],["all","ignoreCase","multiline"]),regexReplaceDynamic:Pe.set("regexReplaceDynamic",{},["value","regex","replace"],["all","ignoreCase","multiline"],["match"],["replace"]),regexIndexOf:Pe.set("regexIndexOf",{},["value","regex"],["ignoreCase","multiline"]),base64:Pe.set("base64",{},["value"]),unbase64:Pe.set("unbase64",{},["value"]),encodeURI:Pe.set("encodeURI",{},["value"]),decodeURI:Pe.set("decodeURI",{},["value"]),encodeURIComponent:Pe.set("encodeURIComponent",{},["value"]),decodeURIComponent:Pe.set("decodeURIComponent",{},["value"]),md5:Pe.set("md5",{},["value"]),encrypt:Pe.set("encrypt",{},["value","secret"]),decrypt:Pe.set("decrypt",{},["value","secret"]),toNumber:Pe.set("toNumber",{},["value"],["invalidValue"]),isValid:Pe.set("?",{},["value"]),isEmpty:Pe.set("0?",{},["value"]),isNotEmpty:Pe.set("n?",{},["value"]),isEqual:Pe.set("=",{},["a","b"],["ignoreCase"]),isNotEqual:Pe.set("!=",{},["a","b"],["ignoreCase"]),isLess:Pe.set("<",{},["value","test"],["ignoreCase"]),isLessOrEqual:Pe.set("<=",{},["value","test"],["ignoreCase"]),isGreater:Pe.set(">",{},["value","test"],["ignoreCase"]),isGreaterOrEqual:Pe.set(">=",{},["value","test"],["ignoreCase"]),isLower:Pe.set("lo?",{},["value"]),isUpper:Pe.set("up?",{},["value"]),isUuid:Pe.set("uuid?",{},["value"]),asAny:Pe.set("~"+Y.Any,{},["value"]),asBoolean:Pe.set("~"+Y.Boolean,{},["value"]),asColor:Pe.set("~"+Y.Color,{},["value"]),asDate:Pe.set("~"+Y.Date,{},["value"]),asList:Pe.set("~"+Y.List,{},["value"]),asMap:Pe.set("~"+Y.Map,{},["value"]),asNumber:Pe.set("~"+Y.Number,{},["value"]),asObject:Pe.set("~"+Y.Object,{},["value"]),asText:Pe.set("~"+Y.Text,{},["value"]),asTuple:Pe.set("~"+Y.Tuple,{},["value"]),asSet:Pe.set("~"+Y.Set,{},["value"])};Ie.set("toUpper",Ce.upper),Ie.set("toLower",Ce.lower),Ie.set("chars",Ce.chars),Ie.set("trim",Ce.trim),Ie.set("soundex",Ce.soundex),Ie.set("metaphone",Ce.metaphone),Ie.set("base64",Ce.base64),Ie.set("unbase64",Ce.unbase64),Ie.set("encodeURI",Ce.encodeURI),Ie.set("decodeURI",Ce.decodeURI),Ie.set("encodeURIComponent",Ce.encodeURIComponent),Ie.set("decodeURIComponent",Ce.decodeURIComponent),Ie.set("md5",Ce.md5),Ie.set("toNumber",Ce.toNumber),Ie.set("isEmpty",Ce.isEmpty),Ie.set("isNotEmpty",Ce.isNotEmpty),Ie.set("isLower",Ce.isLower),Ie.set("isUpper",Ce.isUpper);const De=1,ke=1,Ne=16,Le="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_-+=:.";class Re extends R{static decode(e){return new Re(this.decodeOptions(e[De]||{}))}static encode(e){return y(e.options)?this.id:[this.id,this.encodeOptions(e.options)]}static decodeOptions(e){const t=e.matches;return t&&(e.matches=new RegExp(t[0],t[1])),e}static encodeOptions(e){const t=Object.assign({},e),s=t.matches;return s&&(t.matches=[s.source,s.flags]),t}static describe(e){return r(e)?new Re({min:e.length,max:e.length,requireLower:e.toLowerCase()===e,requireUpper:e.toUpperCase()===e}):null}static register(){J.addCompare({priority:4,type:"string",compare:(e,t)=>e.localeCompare(t)}),J.addEquals({priority:4,type:"string",equals:(e,t)=>e===t})}getId(){return Re.id}getOperations(){return Re.operations.map}merge(e){const t=this.options,s=e.options;t.max=Math.max(t.max,s.max),t.min=Math.min(t.min,s.min),t.requireLower=t.requireLower&&s.requireLower,t.requireUpper=t.requireUpper&&s.requireUpper}getSubType(e,t,s){if(Ue.is(e)){if("length"===e.value)return hi.LENGTH;if(n(e.value))return hi.CHAR}let r=e.getType(t,s);if(r){if((r=r.getRequired())instanceof Rs)return hi.CHAR;if(r instanceof Ge){if(r.options.value instanceof Rs)return hi.CHAR;if(r.options.value instanceof Re){const e=Array.from(r.options.constants.values());if(1===e.length&&"length"===e[0])return hi.LENGTH}}}}getSubTypes(e){return[{key:"length",value:hi.LENGTH},{key:hi.INDEX,value:hi.optional(hi.CHAR)}]}getExactType(e){return this}getSimplifiedType(){return this}isDeepCompatible(e,t){if(!(e instanceof Re))return!1;if(t.value){const t=this.options.min,s=e.options.min;if(t&&(!s||s<t))return!1;const n=this.options.max,r=e.options.max;if(n&&(!r||r>n))return!1;const i=this.options.forceLower||this.options.requireUpper,a=e.options.forceLower||e.options.requireLower;if(i&&!a)return!1;const o=this.options.forceUpper||this.options.requireUpper,u=e.options.forceUpper||e.options.requireUpper;if(o&&!u)return!1;const p=this.options.matches,l=e.options.matches;if(p&&(!l||l.source!==p.source))return!1}return!0}isOptional(){return!1}isSimple(){return!0}traverse(e){return e.enter(this)}setParent(e=null){this.parent=e}removeDescribedRestrictions(){this.options={}}getCreateExpression(){return Ds.op(Ce.create,{})}getValidateExpression(){return Ds.op(Ce.isValid,{value:Ds.get("value")})}getCompareExpression(){return Ds.op(Ce.compare,{value:Ds.get("value"),test:Ds.get("test"),ignoreCase:Ds.true()})}isValid(e){if(!r(e))return!1;const{min:t,max:s,requireLower:i,requireUpper:a,matches:o,forceLower:u,forceUpper:p}=this.options;return!(n(t)&&e.length<t)&&(!(n(s)&&e.length>s)&&(!(i&&e!==e.toLowerCase()&&!u)&&(!(a&&e!==e.toUpperCase()&&!p)&&!(o&&o instanceof RegExp&&!o.test(e)))))}normalize(e){return r(e)&&(this.options.forceLower&&(e=e.toLowerCase()),this.options.forceUpper&&(e=e.toUpperCase())),e}newInstance(){return new Re({})}clone(){return new Re(J.copy(this.options))}encode(){return Re.encode(this)}create(){return""}random(e){const{min:t,max:s,requireLower:n,forceLower:r,requireUpper:i,forceUpper:a}=this.options,o=n||r,u=i||a,p=e(I(t,ke),I(s,Ne)+1,!0);let l="";for(let t=0;t<p;t++)l+=Le.charAt(e(0,Le.length,!0));return o&&(l=l.toLowerCase()),u&&(l=l.toUpperCase()),l}fromJson(e){return e}toJson(e){return e}}Re.id=Y.Text,Re.operations=Me,Re.computeds=Ie,Re.baseType=new Re({}),Re.describePriority=3,Re.registered=!1;const Ae=new V(Y.Map+Y.Delimiter),je=new F(Y.Map+Y.Delimiter),qe=Ae,_e={create:qe.set("create"),createLike:qe.set("createLike",{},["map"],[],[],[],["map"]),createFor:qe.set("createFor",{},["value"],["key"],[],[],["value","key"]),maybe:qe.set("maybe",{},["value"]),get:qe.set("get",{},["map","key"],[],[],[],["map"]),set:qe.set("set",{mutates:["map"]},["map","key","value"],[],["existingValue"],["value"],["map"]),has:qe.set("has",{},["map","key"]),delete:qe.set("delete",{mutates:["map"]},["map","key"]),keys:qe.set("keys",{complexity:1},["map"],[],[],[],["map"]),values:qe.set("values",{complexity:1},["map"],[],[],[],["map"]),entries:qe.set("entries",{complexity:1},["map"],[],[],[],["map"]),pairs:qe.set("pairs",{complexity:1},["map"],[],[],[],["map"]),clear:qe.set("clear",{mutates:["map"]},["map"],[],[],[],["map"]),count:qe.set("count",{},["map"]),cmp:qe.set("cmp",{complexity:1},["value","test","compare"],[],["key","value","test"],["compare"]),copy:qe.set("copy",{complexity:1},["map"],["deepCopy","deepCopyKey"],["map","key","value"],["deepCopy","deepCopyKey"],["map"]),map:qe.set("map",{complexity:1},["map"],["transform","transformKey"],["map","key","value"],["transform","transformKey"],["map"]),toPlainObject:qe.set("plain",{complexity:1},["map"]),fromPlainObject:qe.set("fromPlain",{complexity:1},["object"],[],[],[],["object"]),isValid:qe.set("?",{},["value"]),isEqual:qe.set("=",{complexity:1},["value","test","isEqual"],[],["key","value","test"],["isEqual"]),isNotEqual:qe.set("!=",{complexity:1},["value","test","isEqual"],[],["key","value","test"],["isEqual"]),isLess:qe.set("<",{complexity:1},["value","test","compare"],[],["key","value","test"],["compare"]),isLessOrEqual:qe.set("<=",{complexity:1},["value","test","compare"],[],["key","value","test"],["compare"]),isGreater:qe.set(">",{complexity:1},["value","test","compare"],[],["key","value","test"],["compare"]),isGreaterOrEqual:qe.set(">=",{complexity:1},["value","test","compare"],[],["key","value","test"],["compare"]),asAny:qe.set("~"+Y.Any,{},["value"]),asBoolean:qe.set("~"+Y.Boolean,{},["value"]),asColor:qe.set("~"+Y.Color,{},["value"]),asDate:qe.set("~"+Y.Date,{},["value"]),asList:qe.set("~"+Y.List,{},["value"]),asMap:qe.set("~"+Y.Map,{},["value"]),asNumber:qe.set("~"+Y.Number,{},["value"]),asObject:qe.set("~"+Y.Object,{},["value"]),asText:qe.set("~"+Y.Text,{},["value"]),asTuple:qe.set("~"+Y.Tuple,{},["value"]),asSet:qe.set("~"+Y.Set,{},["value"])};je.set("copy",_e.copy),je.set("keys",_e.keys),je.set("values",_e.values),je.set("entries",_e.entries),je.set("pairs",_e.pairs),je.set("count",_e.count);const Ve=1,Fe=2,Ye=3;class Ge extends R{static decode(e,t){const s=t.getType(e[Ve]),n=t.getType(e[Fe]),r=new Map(e[Ye].map(([e,t])=>[s.fromJson(e),n.fromJson(t)]));return new Ge({key:s,value:n,constants:r})}static encode(e){const{key:t,value:s,constants:n}=e.options;return[this.id,t.encode(),s.encode(),Array.from(n.entries()).map(([e,n])=>[t.toJson(e),s.toJson(n)])]}static describe(){return null}static register(){}getId(){return Ge.id}getOperations(){return this.options.value.getOperations()}merge(e){const t=this.options.constants,s=e.options.constants;this.options.key=hi.merge(this.options.key,e.options.key),this.options.value=hi.merge(this.options.value,e.options.value);for(const[e,n]of s.entries())t.set(e,n)}getSubType(e,t,s){return this.options.value.getSubType(e,t,s)}getSubTypes(e){return this.options.value.getSubTypes(e)}getExactType(e){return this}getSimplifiedType(){return this.options.value}isWrapper(){return!0}isDeepCompatible(e,t={}){if(!(e instanceof Ge))return!1;const{key:s,value:n}=this.options;return!(t.exact&&!s.isCompatible(e.options.key,t))&&n.isCompatible(e.options.value)}isOptional(){return this.options.value.isOptional()}isSimple(){return this.options.value.isSimple()}traverse(e){return e.enter(this,()=>{e.step(Ge.STEP_KEY,this.options.key,e=>this.options.key=e),e.step(Ge.STEP_VALUE,this.options.value,e=>this.options.value=e)})}getTypeFromStep(e){return e===Ge.STEP_KEY?this.options.key:e===Ge.STEP_VALUE?this.options.value:null}setParent(e=null){this.parent=e,this.options.key.setParent(this),this.options.value.setParent(this)}removeDescribedRestrictions(){}getCreateExpression(){return this.options.value.getCreateExpression()}getValidateExpression(){return this.options.value.getValidateExpression()}getCompareExpression(){return this.options.value.getCompareExpression()}getValueChangeExpression(e,t,s){return t===Ge.STEP_KEY?Ds.op(_e.map,{map:Ds.get("value"),transformKey:e},{key:"value",value:"actualValue"}):Ds.op(_e.map,{map:Ds.get("value"),transform:e})}isValid(e){const{constants:t,value:s}=this.options;if(!s.isValid(e))return!1;for(const s of t.values())if(0===J.compare(s,e))return!0;return!1}normalize(e){return this.options.value.normalize(e)}newInstance(){const{key:e,value:t}=this.options;return new Ge({key:e.newInstance(),value:t.newInstance(),constants:new Map})}clone(){const{key:e,value:t,constants:s}=this.options;return new Ge({key:e.clone(),value:t.clone(),constants:new Map(s.entries())})}encode(){return Ge.encode(this)}create(){const{value:e,constants:t}=this.options,s=t.keys().next();return s?t.get(s):e.create()}random(e){const t=Array.from(this.options.constants.values());return t[e(0,t.length,!0)]}fromJson(e){return this.options.value.fromJson(e)}toJson(e){return this.options.value.toJson(e)}}Ge.STEP_KEY="key",Ge.STEP_VALUE="value",Ge.id=Y.Enum,Ge.operations=new V(Y.Enum+Y.Delimiter),Ge.computeds=new F(Y.Enum+Y.Delimiter),Ge.baseType=new Ge({key:Re.baseType,value:Re.baseType,constants:new Map}),Ge.describePriority=-1,Ge.registered=!1;const Be=1;class Ue extends q{constructor(e){super(),this.value=e}static has(e,t){return e instanceof Ue&&e.value===t}static is(e){return e instanceof Ue}static decode(e,t){const s=ue.baseType.fromJson(e[Be]);return new Ue(s)}static encode(e){const t=ue.baseType.toJson(e.value);return i(t)?[this.id,t]:t}getId(){return Ue.id}getComplexity(){return 0}getScope(){return null}encode(){return Ue.encode(this)}clone(){return new Ue(J.copy(this.value))}getType(e,t){const s=this.value;if(r(s))return new Ge({key:Re.baseType.newInstance(),value:Re.baseType.newInstance(),constants:new Map([[s,s]])});if(n(s))return new Ge({key:Rs.baseType.newInstance(),value:Rs.baseType.newInstance(),constants:new Map([[s,s]])});const i=e.describe(this.value);return i&&i.removeDescribedRestrictions(),i}traverse(e){return e.enter(this)}setParent(e=null){this.parent=e}validate(e,t,s){}}Ue.id="constant";const We=1e5,He="break",Je=1,Ke=2,ze=3,Xe=4,$e=5,Qe=6;class Ze extends q{constructor(e,t,s,n,r=He,i=We){super(),this.variable=e,this.start=t,this.end=s,this.body=n,this.breakVariable=r,this.maxIterations=i}static decode(e,t){const s=e[Je],n=t.getExpression(e[Ke]),r=t.getExpression(e[ze]),i=t.getExpression(e[Xe]),a=e[$e]||He,o=parseInt(e[Qe])||this.MAX_ITERATIONS;return new Ze(s,n,r,i,a,o)}static encode(e){const t=[this.id,e.variable,e.start.encode(),e.end.encode(),e.body.encode()],s=e.maxIterations!==this.MAX_ITERATIONS;return(e.breakVariable!==He||s)&&t.push(e.breakVariable),s&&t.push(e.maxIterations),t}getId(){return Ze.id}getComplexity(e){return Math.max(this.start.getComplexity(e),this.end.getComplexity(e),this.body.getComplexity(e))+1}getScope(){return{[this.variable]:Rs.baseType.newInstance(),[this.breakVariable]:X.baseType}}encode(){return Ze.encode(this)}clone(){return new Ze(this.variable,this.start.clone(),this.end.clone(),this.body.clone(),this.breakVariable,this.maxIterations)}getType(e,t){const{context:s}=e.getContextWithScope(t,this.getScope()),n=this.body.getType(e,s);return n?hi.optional(n):null}traverse(e){return e.enter(this,()=>{e.step(Ze.STEP_START,this.start,e=>this.start=e),e.step(Ze.STEP_END,this.end,e=>this.end=e),e.step(Ze.STEP_BODY,this.body,e=>this.body=e)})}getExpressionFromStep(e){return e[0]===Ze.STEP_START?[1,this.start]:e[0]===Ze.STEP_END?[1,this.end]:e[0]===Ze.STEP_BODY?[1,this.body]:null}setParent(e=null){this.parent=e,this.start.setParent(this),this.end.setParent(this),this.body.setParent(this)}validate(e,t,s){this.validateType(e,t,Rs.baseType,this.start,s),this.validateType(e,t,Rs.baseType,this.end,s);const n=e.getContext(t,this.getScope());this.body.validate(e,n,s)}loop(e,t,s,r,i,a){return this.variable=e,this.start=Ds.parse(t),this.start.setParent(this),this.end=Ds.parse(s),this.end.setParent(this),r&&(this.body=r,this.body.setParent(this)),i&&(this.breakVariable=i),n(a)&&(this.maxIterations=a),this}startAt(e){return this.start=Ds.parse(e),this.start.setParent(this),this}endAt(e){return this.end=Ds.parse(e),this.end.setParent(this),this}run(e){return this.body=e,this.body.setParent(this),this}withVariable(e){return this.variable=e,this}withBreak(e){return this.breakVariable=e,this}withMax(e){return this.maxIterations=e,this}}Ze.STEP_START="start",Ze.STEP_END="end",Ze.STEP_BODY="body",Ze.MAX_ITERATIONS=We,Ze.id="for";const et=1;class tt extends q{constructor(e){super(),this.path=e}static decode(e,t){const s=e[et].map(e=>t.getExpression(e));return new tt(s)}static encode(e){const t=e.path.map(e=>e.encode());return[this.id,t]}static create(e){return new tt(Ds.parse(e))}getId(){return tt.id}getComplexity(e){return this.path.reduce((t,s)=>Math.max(t,s.getComplexity(e)),0)}getScope(){return null}encode(){return tt.encode(this)}clone(){return new tt(this.path.map(e=>e.clone()))}getType(e,t){return e.getPathType(this.path,t)}traverse(e){return e.enter(this,()=>this.path.forEach((t,s)=>e.step(s,t,e=>this.path.splice(s,1,e),()=>this.path.splice(s,1))))}getExpressionFromStep(e){return n(e[0])&&e[0]<this.path.length?[1,this.path[e[0]]]:null}setParent(e=null){this.parent=e,this.path.forEach(e=>e.setParent(this))}validate(e,t,s){this.validatePath(e,t,t,this.path,s)}add(e){const t=i(e)?e:[e];for(const e of t){const t=Ds.parse(e);this.path.push(t),t.setParent(this)}return this}}tt.id="get";const st=1;class nt extends q{constructor(e){super(),this.name=e}static decode(e,t){const s=e[st];return new nt(s)}static encode(e){return[this.id,e.name]}getId(){return nt.id}getComplexity(e){return 0}getScope(){return null}encode(){return nt.encode(this)}clone(){return new nt(this.name)}getType(e,t){const s=e.getData(this.name);return s?s.dataType:ae.baseType}traverse(e){return e.enter(this)}setParent(e=null){this.parent=e}validate(e,t,s){this.name?e.getData(this.name)||s({type:j.MISSING_DATA,severity:A.HIGH,context:t,parent:this}):s({type:j.MISSING_DATA_NAME,severity:A.HIGH,context:t,parent:this})}}nt.id="data",nt.instance=new nt("");const rt=new V(Y.Entity+Y.Delimiter),it=new F(Y.Entity+Y.Delimiter),at=rt,ot={newInstance:at.set("newInstance",{},["name"],[],[],[],["name"]),get:at.set("get",{},["name"],["where"],["instance"],["where"],["name"]),getKey:at.set("getKey",{},["name","instance"],[],[],[],["name"]),save:at.set("save",{mutates:["instance"]},["name","instance"],[],[],[],["name"]),remove:at.set("remove",{mutates:["instance"]},["name","instance"],[],[],[],["name"]),setRelated:at.set("setRelated",{complexity:1,mutates:["instance","related"]},["name","instance","relation","related"],[],[],[],["name","relation"]),addRelated:at.set("addRelated",{mutates:["instance","related"]},["name","instance","relation","related"],[],[],[],["name","relation"]),removeRelated:at.set("removeRelated",{mutates:["instance","related"]},["name","instance","relation","related"],[],[],[],["name","relation"]),clearRelated:at.set("clearRelated",{complexity:1,mutates:["instance"]},["name","instance","relation"],[],[],[],["name","relation"]),getRelated:at.set("getRelated",{complexity:1},["name","instance","relation"],[],[],[],["name","relation"]),isRelated:at.set("isRelated",{},["name","instance","relation","related"],[],[],[],["name","relation"])},ut=new V(Y.Object+Y.Delimiter),pt=new F(Y.Object+Y.Delimiter),lt=ut,ct={create:lt.set("create"),maybe:lt.set("maybe",{},["value"]),has:lt.set("has",{},["object","key"]),get:lt.set("get",{},["object","key"]),set:lt.set("set",{mutates:["object"]},["object","key","value"],[],["existingValue"],[],["object"]),delete:lt.set("del",{mutates:["object"]},["object","key"]),cmp:lt.set("cmp",{},["value","test"]),copy:lt.set("copy",{},["object"],[],[],[],["object"]),merge:lt.set("merge",{},["a","b"],["c","d","e"],[],[],["a","b","c","d","e"]),isValid:lt.set("?",{},["value"]),isEqual:lt.set("=",{},["value","test"]),isNotEqual:lt.set("!=",{},["value","test"]),isLess:lt.set("<",{},["value","test"]),isLessOrEqual:lt.set("<=",{},["value","test"]),isGreater:lt.set(">",{},["value","test"]),isGreaterOrEqual:lt.set(">=",{},["value","test"]),asAny:lt.set("~"+Y.Any,{},["value"]),asBoolean:lt.set("~"+Y.Boolean,{},["value"]),asColor:lt.set("~"+Y.Color,{},["value"]),asDate:lt.set("~"+Y.Date,{},["value"]),asList:lt.set("~"+Y.List,{},["value"]),asMap:lt.set("~"+Y.Map,{},["value"]),asNumber:lt.set("~"+Y.Number,{},["value"]),asObject:lt.set("~"+Y.Object,{},["value"]),asText:lt.set("~"+Y.Text,{},["value"]),asTuple:lt.set("~"+Y.Tuple,{},["value"]),asSet:lt.set("~"+Y.Set,{},["value"])};pt.set("copy",ct.copy);const ht=1;class dt extends R{static decode(e,t){const s=x(e[ht],e=>t.getType(e));return new dt({props:s})}static encode(e){const t=x(e.options.props,e=>e.encode());return[this.id,t]}static describe(e,t){return c(e)&&null!==e?new dt({props:x(e,e=>t.describe(e))}):null}static register(){J.addJson({priority:7,fromJson:(e,t)=>{if(c(e))return x(e,t)},toJson:(e,t)=>{if(c(e))return x(e,t)}}),J.addCopier({priority:7,copy:(e,t,s)=>{if(c(e)){const n={};s(e,n);for(const s in e)n[t(s)]=t(e[s]);return n}}}),J.addCompare({priority:7,type:"object",compare:(e,t,s)=>{if(null===e)return 1;if(null===t)return-1;let n=0,r=0;for(const s in e)s in t||n++;for(const s in t)s in e||r++;for(const i in e)if(i in t){const a=s(e[i],t[i]);a<0&&n++,a>0&&r++}return J.getCompare(n,r)}}),J.addEquals({priority:7,type:"object",equals:(e,t,s)=>{if(null===e!=(null===t))return!1;for(const s in e)if(!(s in t))return!1;for(const n in t){if(!(n in e))return!1;if(!s(e[n],t[n]))return!1}return!0}})}getId(){return dt.id}getOperations(){return dt.operations.map}merge(e){const t=this.options.props,s=e.options.props;for(const e in t)e in s&&s[e]?t[e]=hi.merge(t[e],s[e]):t[e]&&(t[e]=hi.optional(t[e]));for(const e in s)e in t||!s[e]||(t[e]=hi.optional(s[e]))}getSubType(e,t,s){if(Ue.is(e)&&r(e.value))return this.options.props[e.value];let n=e.getType(t,s);if(n){if((n=n.getRequired())instanceof Re){const e=O(this.options.props);return hi.mergeMany(e,ae.baseType)}if(n instanceof Ge){const e=Array.from(n.options.constants.values()).map(e=>this.options.props[e]).filter(e=>!!e);return hi.mergeMany(e,ae.baseType)}}return this.getWildcardType()}getSubTypes(e){const t=O(this.options.props);return[...O(this.options.props,(e,t)=>({key:t,value:e})),{key:new Ge({key:Re.baseType,value:Re.baseType,constants:new Map(O(this.options.props,(e,t)=>[t,t]))}),value:hi.mergeMany(t,ae.baseType)},{key:Re.baseType,value:hi.optional(hi.mergeMany(t,ae.baseType))}]}getExactType(e){return this}getSimplifiedType(){return this}traverse(e){return e.enter(this,()=>E(this.options.props,(t,s)=>e.step(s,t,e=>this.options.props[s]=e,()=>delete this.options.props[s])))}getTypeFromStep(e){return this.options.props[e]||null}setParent(e=null){this.parent=e,E(this.options.props,e=>e?e.setParent(this):0)}removeDescribedRestrictions(){E(this.options.props,e=>e?e.removeDescribedRestrictions():0)}isDeepCompatible(e,t){if(!(e instanceof dt))return!1;const s=this.options.props;for(const n in s)if(n!==dt.wilcardProperty&&s[n]){if(!e.options.props[n])return!1;if(!s[n].isCompatible(e.options.props[n],t))return!1}const n=this.getWildcardType();if(t.exact){for(const t in e.options.props)if(!s[t]&&e.options.props[t])return!1}else if(n)for(const r in e.options.props)if(!s[r]&&e.options.props[r]&&!n.isCompatible(e.options.props[r],t))return!1;return!0}isOptional(){return!1}isSimple(){return!1}getCreateExpression(){return Ds.object(x(this.options.props,e=>e?e.getCreateExpression():Ds.noop()))}getValidateExpression(){return Ds.and(Ds.op(ct.isValid,{value:Ds.get("value")}),...O(this.options.props,(e,t)=>Ds.define({value:Ds.get("value",t)}).run(e?e.getValidateExpression():Ds.true())))}getCompareExpression(){return Ds.or(...O(this.options.props,(e,t)=>Ds.define({value:Ds.get("value",t),test:Ds.get("test",t)}).run(e?e.getCompareExpression():Ds.true())))}getValueChangeExpression(e,t,s){const n=null!=t,r=null!=s;return!n&&r?Ds.define({parent:Ds.get("value")},Ds.op(ct.set,{object:Ds.get("value"),key:s,value:e})):n&&!r?Ds.body(Ds.op(ct.delete,{object:Ds.get("value"),key:t}),Ds.get("value")):t!==s?Ds.body(Ds.op(ct.set,{object:Ds.get("value"),key:s,value:Ds.get("value",t)}),Ds.op(ct.delete,{object:Ds.get("value"),key:t}),Ds.get("value")):t===s&&n?Ds.body(Ds.update("value",t).to(e,"value"),Ds.get("value")):e}isValid(e){if(!c(e))return!1;const t=this.options.props;for(const s in t)if(s!==dt.wilcardProperty&&t[s]&&!t[s].isValid(e[s]))return!1;const s=this.getWildcardType();if(s)for(const n in e)if(!t[n]&&!s.isValid(e[n]))return!1;return!0}normalize(e){return e}newInstance(){return new dt({props:{}})}clone(){return new dt({props:x(this.options.props,e=>e?e.clone():e)})}encode(){return dt.encode(this)}create(){return Object.create(null)}random(e){const{props:t}=this.options,s=Object.create(null);for(const n in t)t[n]&&(s[n]=t[n].random(e));return s}fromJson(e){return x(e,(e,t)=>{const s=this.options.props[t];return s?s.fromJson(e):e})}toJson(e){return x(e,(e,t)=>{const s=this.options.props[t];return s?s.toJson(e):e})}getWildcardType(){return this.options.props[dt.wilcardProperty]||null}}dt.wilcardProperty="*",dt.id=Y.Object,dt.operations=ut,dt.computeds=pt,dt.baseType=new dt({props:{}}),dt.describePriority=5,dt.registered=!1;const mt=1;class yt extends R{constructor(e,t){super(e),this.provider=t}static decode(e,t){const s=e[mt];return new yt(s,t)}static encode(e){return[this.id,e.options]}static describe(e,t){return null}static register(){}static for(e,t){return new yt(e,t)}getType(){return this.provider?this.provider.getType(this.options,ae.baseType):dt.baseType}getOperations(){return this.getType().getOperations()}getId(){return yt.id}merge(e){}getSubType(e,t,s){return this.getType().getSubType(e,t,s)}getSubTypes(e){return this.getType().getSubTypes(e)}getExactType(e){return this.getType().getExactType(e)}getSimplifiedType(){return this.getType().getSimplifiedType()}isDeepCompatible(e,t){return e instanceof yt?this.getType().isCompatible(e.getType(),t):this.getType().isCompatible(e,t)}isOptional(){return this.getType().isOptional()}isSimple(){return this.getType().isSimple()}acceptsOtherTypes(){return!0}traverse(e){return e.enter(this,()=>e.step(yt.STEP_ENTITY,this.getType(),e=>e instanceof yt?this.options=e.options:0))}getTypeFromStep(e){return e===yt.STEP_ENTITY?this.getType():null}setParent(e=null){this.parent=e}removeDescribedRestrictions(){}getCreateExpression(){return this.getType().getCreateExpression()}getValidateExpression(){return this.getType().getValidateExpression()}getCompareExpression(){return this.getType().getCompareExpression()}getValueChangeExpression(e,t,s){return e}isValid(e){return this.getType().isValid(e)}normalize(e){return this.getType().normalize(e)}newInstance(){return new yt(this.options,this.provider)}clone(){return new yt(this.options,this.provider)}encode(){return yt.encode(this)}create(){return this.getType().create()}random(e){return this.getType().random(e)}fromJson(e){return this.getType().fromJson(e)}toJson(e){return this.getType().toJson(e)}}yt.STEP_ENTITY="entity",yt.id=Y.Entity,yt.operations=rt,yt.computeds=it,yt.baseType=new yt("",null),yt.describePriority=-1,yt.registered=!1;const gt=1;class ft extends q{constructor(e){super(),this.name=e}static decode(e,t){const s=e[gt];return new ft(s)}static encode(e){return[this.id,e.name]}getId(){return ft.id}getComplexity(e){return 0}getScope(){return null}encode(){return ft.encode(this)}clone(){return new ft(this.name)}getType(e,t){return new yt(this.name,e)}traverse(e){return e.enter(this)}setParent(e=null){this.parent=e}validate(e,t,s){this.name?e.getEntity(this.name)||s({type:j.MISSING_TYPE,severity:A.HIGH,context:t,parent:this}):s({type:j.MISSING_TYPE_NAME,severity:A.HIGH,context:t,parent:this})}}ft.id="entity",ft.instance=new ft("");const vt=1;class Tt extends q{constructor(e){super(),this.name=e}static decode(e,t){const s=e[vt];return new Tt(s)}static encode(e){return[this.id,e.name]}getId(){return Tt.id}getComplexity(e){return 0}getScope(){return null}encode(){return Tt.encode(this)}clone(){return new Tt(this.name)}getType(e,t){return new Ge({key:Re.baseType,value:Re.baseType,constants:new Map([["relation",this.name]])})}traverse(e){return e.enter(this)}setParent(e=null){this.parent=e}validate(e,t,s){this.name?e.getRelation(this.name)||s({type:j.MISSING_RELATION,severity:A.HIGH,context:t,parent:this}):s({type:j.MISSING_RELATION_NAME,severity:A.HIGH,context:t,parent:this})}}Tt.id="relation",Tt.instance=new Tt("");const bt=1,xt=2;class Et extends q{constructor(e,t){super(),this.cases=e,this.otherwise=t}static decode(e,t){const s=e[bt].map(([e,s])=>[t.getExpression(e),t.getExpression(s)]),n=t.getExpression(e[xt]);return new Et(s,n)}static encode(e){const t=e.cases.map(([e,t])=>[e.encode(),t.encode()]);return Ue.has(e.otherwise,void 0)?[this.id,t]:[this.id,t,e.otherwise.encode()]}getId(){return Et.id}getComplexity(e){return this.cases.reduce((t,[s,n])=>Math.max(t,s.getComplexity(e),n.getComplexity(e)),this.otherwise.getComplexity(e))}getScope(){return null}encode(){return Et.encode(this)}clone(){return new Et(this.cases.map(([e,t])=>[e.clone(),t.clone()]),this.otherwise.clone())}getType(e,t){const s=this.cases.map(([e,t])=>t).concat(this.otherwise).filter(e=>!!e).map(s=>s.getType(e,t)).filter(e=>!!e);return hi.mergeMany(s,ae.baseType)}traverse(e){return e.enter(this,()=>{e.step(Et.STEP_CASES,()=>this.cases.forEach(([t,s],n)=>e.step(n,()=>{e.step(Et.STEP_IF,t,e=>this.cases[n].splice(0,1,e)),e.step(Et.STEP_THEN,s,e=>this.cases[n].splice(1,1,e))}))),this.otherwise!==oe.instance&&e.step(Et.STEP_ELSE,this.otherwise,e=>this.otherwise=e)})}getExpressionFromStep(e){return e[0]===Et.STEP_CASES?n(e[1])&&e[1]<this.cases.length?e[2]===Et.STEP_IF?[3,this.cases[e[1]][0]]:e[2]===Et.STEP_THEN?[3,this.cases[e[1]][1]]:null:null:e[0]===Et.STEP_ELSE?[1,this.otherwise]:null}setParent(e=null){this.parent=e,this.cases.forEach(([e,t])=>{e.setParent(this),t.setParent(this)}),this.otherwise.setParent(this)}validate(e,t,s){const n=X.baseType;this.cases.forEach(([r,i])=>{this.validateType(e,t,n,r,s),i.validate(e,t,s)}),this.otherwise.validate(e,t,s)}if(e,t){return this.cases.push([e,t||oe.instance]),e.setParent(this),t&&t.setParent(this),this}than(e){return this.cases[this.cases.length-1][1]=e,e.setParent(this),this}elseif(e,t){return this.cases.push([e,t||oe.instance]),e.setParent(this),t&&t.setParent(this),this}else(e){return this.otherwise=e,this.otherwise.setParent(this),this}}Et.STEP_CASES="cases",Et.STEP_IF="if",Et.STEP_THEN="then",Et.STEP_ELSE="else",Et.id="if";const Ot=1,St=2;class wt extends q{constructor(e,t){super(),this.name=e,this.args=t}static decode(e,t){const s=e[Ot],n=x(e[St],e=>t.getExpression(e));return new wt(s,n)}static encode(e){const t=x(e.args,e=>e.encode());return[this.id,e.name,t]}getId(){return wt.id}getComplexity(e){const t=e.getFunction(this.name);return t?t.expression.getComplexity(e):0}getScope(){return null}encode(){return wt.encode(this)}clone(){return new wt(this.name,x(this.args,e=>e.clone()))}getType(e,t){const s=e.getFunction(this.name),n=x(this.args,s=>s.getType(e,t));return s?s.getReturnType(e,n):null}traverse(e){return e.enter(this,()=>E(this.args,(t,s)=>e.step(s,t,e=>this.args[s]=e,()=>delete this.args[s])))}getExpressionFromStep(e){return e[0]in this.args?[1,this.args[e[0]]]:null}setParent(e=null){this.parent=e,E(this.args,e=>e.setParent(this))}validate(e,t,s){const n=e.getFunction(this.name);if(n){const r={};E(n.params.options.props,(n,i)=>{const a=this.args[i];this.validateType(e,t,n,a,s),a&&(r[i]=a.getType(e,t))})}else s({type:j.MISSING_FUNCTION,severity:A.HIGH,context:t,subject:this})}named(e){return this.name=e,this}arg(e,t){const s=r(e)?{[e]:t}:e;for(const e in s){const t=Ds.parse(s[e]);this.args[e]=t,t.setParent(this)}return this}}wt.id="invoke";const Mt=1;class It extends q{constructor(e){super(),this.expressions=e}static decode(e,t){const s=e[Mt].map(e=>t.getExpression(e));return new It(s)}static encode(e){const t=e.expressions.map(e=>e.encode());return[this.id,t]}getId(){return It.id}getComplexity(e){return this.expressions.reduce((t,s)=>Math.max(t,s.getComplexity(e)),0)}getScope(){return null}encode(){return It.encode(this)}clone(){return new It(this.expressions.map(e=>e.clone()))}getType(e,t){const s=this.expressions.map(s=>s.getType(e,t)).concat(X.baseType).filter(e=>!!e);return hi.mergeMany(s,ae.baseType)}traverse(e){return e.enter(this,()=>this.expressions.forEach((t,s)=>e.step(s,t,e=>this.expressions.splice(s,1,e),()=>this.expressions.splice(s,1))))}getExpressionFromStep(e){return n(e[0])&&e[0]<this.expressions.length?[1,this.expressions[e[0]]]:null}setParent(e=null){this.parent=e,this.expressions.forEach(e=>e.setParent(this))}validate(e,t,s){const n=X.baseType;this.expressions.forEach(r=>{this.validateType(e,t,n,r,s)})}}It.id="or";const Pt=1,Ct=2,Dt=3;class kt extends q{constructor(e,t,s={}){super(),this.name=e,this.params=t,this.scopeAlias=s}static decode(e,t){const s=e[Pt],n=x(e[Ct],e=>t.getExpression(e)),r=e[Dt]||{};return new kt(s,n,r)}static encode(e){const t=x(e.params,e=>e.encode());return y(e.scopeAlias)?[this.id,e.name,t]:[this.id,e.name,t,e.scopeAlias]}static create(e,t,s=Object.create(null)){return new kt(e.id,t,s)}getId(){return kt.id}getComplexity(e){const t=e.getOperation(this.name);let s=t?t.complexity:0;for(const t in this.params)s=Math.max(s,this.params[t].getComplexity(e));return s}getScope(){return null}encode(){return kt.encode(this)}clone(){return new kt(this.name,x(this.params,e=>e.clone()),Object.assign({},this.scopeAlias))}getType(e,t){return e.getOperationReturnType(this.name,this.params,this.scopeAlias,t)}traverse(e){return e.enter(this,()=>E(this.params,(t,s)=>e.step(s,t,e=>this.params[s]=e,()=>delete this.params[s])))}getExpressionFromStep(e){return e[0]in this.params?[1,this.params[e[0]]]:null}setParent(e=null){this.parent=e,E(this.params,e=>e.setParent(this))}validate(e,t,s){const{name:n,params:r,scopeAlias:i}=this,a=e.getOperation(n),o=e.getOperationTypes(n);if(!a)return void s({type:j.MISSING_OPERATION,severity:A.HIGH,context:t,subject:this});const u=e.getOperationExpectedTypes(n,r,i,t),p=a.hasScope.length>0?e.getOperationScopeContext(n,u,i,t):t;for(const n in u){const i=-1!==a.optional.indexOf(n),o=u[n],l=i?hi.optional(o):o,c=r[n],h=-1!==a.hasScope.indexOf(n)?p:t;this.validateType(e,h,l,c,s)}for(const n in r){const i=r[n],l=o.params[n];if(!(n in u)&&l){const o=-1!==a.hasScope.indexOf(n)?p:t;s({type:j.MISSING_EXPRESSION,severity:A.HIGH,context:o,subject:i,parent:this}),r[n].validate(e,o,s)}}}param(e,t){const s=Ds.parse(t);return this.params[e]=s,s.setParent(this),this}alias(e,t){return this.scopeAlias[e]=t,this}and(e){const t=i(e)?e:[e];return new ee([this].concat(t))}or(e){const t=i(e)?e:[e];return new It([this].concat(t))}not(){return new Q(this)}}kt.id="op";const Nt=1;class Lt extends q{constructor(e){super(),this.value=e}static decode(e,t){const s=t.getExpression(e[Nt]);return new Lt(s)}static encode(e){const t=e.value.encode();return void 0!==t?[this.id,t]:[this.id]}getId(){return Lt.id}getComplexity(e){return this.value.getComplexity(e)}getScope(){return null}encode(){return Lt.encode(this)}clone(){return new Lt(this.value.encode())}getType(e,t){return this.value?this.value.getType(e,t):null}traverse(e){return e.enter(this,()=>e.step(Lt.STEP_VALUE,this.value,e=>this.value=e))}getExpressionFromStep(e){return e[0]===Lt.STEP_VALUE?[1,this.value]:null}setParent(e=null){this.parent=e,this.value.setParent(this)}validate(e,t,s){this.value.validate(e,t,s)}}Lt.STEP_VALUE="value",Lt.id="return";const Rt=1,At=2;class jt extends q{constructor(e,t){super(),this.path=e,this.value=t}static decode(e,t){const s=e[Rt].map(e=>t.getExpression(e)),n=t.getExpression(e[At]);return new jt(s,n)}static encode(e){const t=e.path.map(e=>e.encode());return[this.id,t,e.value.encode()]}static create(e,t){return new jt(Ds.parse(e),Ds.parse(t))}getId(){return jt.id}getComplexity(e){return this.path.reduce((t,s)=>Math.max(t,s.getComplexity(e)),this.value.getComplexity(e))}getScope(){return null}encode(){return jt.encode(this)}clone(){return new jt(this.path.map(e=>e.clone()),this.value.clone())}getType(e,t){return X.baseType}traverse(e){return e.enter(this,()=>{e.step(jt.STEP_PATH,()=>this.path.forEach((t,s)=>e.step(s,t,e=>this.path.splice(s,1,e),()=>this.path.splice(s,1)))),e.step(jt.STEP_VALUE,this.value,e=>this.value=e)})}getExpressionFromStep(e){return e[0]===jt.STEP_PATH?n(e[1])&&e[1]<this.path.length?[2,this.path[e[1]]]:null:e[0]===jt.STEP_VALUE?[1,this.value]:null}setParent(e=null){this.parent=e,this.path.forEach(e=>e.setParent(this)),this.value.setParent(this)}validate(e,t,s){this.validatePath(e,t,t,this.path,s);const n=e.getPathType(this.path,t);n&&this.validateType(e,t,n,this.value,s)}add(e){const t=i(e)?e:[e];for(const e of t){const t=Ds.parse(e);this.path.push(t),t.setParent(this)}return this}to(e){return this.value=Ds.parse(e),this.value.setParent(this),this}}jt.STEP_PATH="path",jt.STEP_VALUE="value",jt.id="set";const qt=1,_t=2;class Vt extends q{constructor(e,t){super(),this.value=e,this.path=t}static decode(e,t){const s=t.getExpression(e[qt]),n=e[_t].map(e=>t.getExpression(e));return new Vt(s,n)}static encode(e){const t=e.value.encode(),s=e.path.map(e=>e.encode());return[this.id,t,s]}static create(e,t){return new Vt(Ds.parse(e),Ds.parse(t))}getId(){return Vt.id}getComplexity(e){return this.path.reduce((t,s)=>Math.max(t,s.getComplexity(e)),this.value.getComplexity(e))}getScope(){return null}encode(){return Vt.encode(this)}clone(){return new Vt(this.value.clone(),this.path.map(e=>e.clone()))}getType(e,t){const s=this.value.getType(e,t);return s?e.getPathType(this.path,s):null}traverse(e){return e.enter(this,()=>{e.step(Vt.STEP_VALUE,this.value,e=>this.value=e),e.step(Vt.STEP_PATH,()=>{this.path.forEach((t,s)=>e.step(s,t,e=>this.path.splice(s,1,e),()=>this.path.splice(s,1)))})})}getExpressionFromStep(e){return e[0]===Vt.STEP_PATH?n(e[1])&&e[1]<this.path.length?[2,this.path[e[1]]]:null:e[0]===Vt.STEP_VALUE?[1,this.value]:null}setParent(e=null){this.parent=e,this.value.setParent(this),this.path.forEach(e=>e.setParent(this))}validate(e,t,s){const n=this.value.getType(e,t);this.validatePath(e,t,n,this.path,s),this.value.validate(e,t,s)}with(e){return this.value=Ds.parse(e),this.value.setParent(this),this}sub(e){const t=i(e)?e:[e];for(const e of t){const t=Ds.parse(e);this.path.push(t),t.setParent(this)}return this}}Vt.STEP_PATH="path",Vt.STEP_VALUE="value",Vt.id="sub";const Ft=1,Yt=2,Gt=3,Bt=4;class Ut extends q{constructor(e,t,s,n){super(),this.value=e,this.op=t,this.cases=s,this.defaultCase=n}static decode(e,t){const s=t.getExpression(e[Ft]),n=e[Yt],r=e[Gt].map(([e,s])=>[e.map(e=>t.getExpression(e)),t.getExpression(s)]),i=t.getExpression(e[Bt]);return new Ut(s,n,r,i)}static encode(e){const t=e.value.encode(),s=e.cases.map(([e,t])=>[e.map(e=>e.encode()),t.encode()]);return Ue.has(e.defaultCase,void 0)?[this.id,t,e.op,s]:[this.id,t,e.op,s,e.defaultCase.encode()]}getId(){return Ut.id}getComplexity(e){return this.cases.reduce((t,[s,n])=>Math.max(t,n.getComplexity(e),s.reduce((t,s)=>Math.max(t,s.getComplexity(e)),0)),Math.max(this.value.getComplexity(e),this.defaultCase.getComplexity(e)))}getScope(){return null}encode(){return Ut.encode(this)}clone(){return new Ut(this.value.clone(),this.op,this.cases.map(([e,t])=>[e.map(e=>e.clone()),t.clone()]),this.defaultCase.clone())}getType(e,t){const s=this.cases.map(([e,t])=>t).concat(this.defaultCase).filter(e=>!!e).map(s=>s.getType(e,t)).filter(e=>!!e);return hi.mergeMany(s,ae.baseType)}traverse(e){return e.enter(this,()=>{e.step(Ut.STEP_VALUE,this.value,e=>this.value=e),e.step(Ut.STEP_CASES,()=>this.cases.forEach(([t,s],n)=>e.step(n,()=>{e.step(Ut.STEP_CASE,()=>t.forEach((s,n)=>e.step(n,s,e=>t.splice(n,1,e),()=>t.splice(n,1)))),e.step(Ut.STEP_RESULT,s,e=>this.cases[n].splice(1,1,e))}))),e.step(Ut.STEP_DEFAULT,this.defaultCase,e=>this.defaultCase=e)})}getExpressionFromStep(e){return e[0]===Ut.STEP_VALUE?[1,this.value]:e[0]===Ut.STEP_CASES?n(e[1])&&e[1]<this.cases.length?e[2]===Ut.STEP_CASE?n(e[3])&&e[3]<this.cases[e[1]][0].length?[4,this.cases[e[1]][0][e[3]]]:null:e[2]===Ut.STEP_RESULT?[3,this.cases[e[1]][1]]:null:null:e[0]===Ut.STEP_DEFAULT?[1,this.defaultCase]:null}setParent(e=null){this.parent=e,this.value.setParent(this),this.cases.forEach(([e,t])=>{e.forEach(e=>e.setParent(this)),t.setParent(this)}),this.defaultCase.setParent(this)}validate(e,t,s){this.value.validate(e,t,s),this.cases.forEach(([n,r])=>{n.forEach(n=>n.validate(e,t,s)),r.validate(e,t,s)}),this.defaultCase.validate(e,t,s)}val(e,t){return this.value=Ds.parse(e),this.value.setParent(this),this.op=t?t.id:this.op,this}case(e){const t=this.cases.length-1,s=Ds.parse(e);return s.setParent(this),t>=0&&this.cases[t][1]===oe.instance?this.cases[t][0].push(s):this.cases.push([[s],oe.instance]),this}than(e){const t=Ds.parse(e);return this.cases[this.cases.length-1][1]=t,t.setParent(this),this}default(e){return this.defaultCase=Ds.parse(e),this.defaultCase.setParent(this),this}}Ut.STEP_VALUE="value",Ut.STEP_CASES="cases",Ut.STEP_CASE="case",Ut.STEP_RESULT="result",Ut.STEP_DEFAULT="default",Ut.id="switch";const Wt=1,Ht=2;class Jt extends q{constructor(e,t){super(),this.template=e,this.params=t}static decode(e,t){const s=e[Wt],n=x(e[Ht],e=>t.getExpression(e));return new Jt(s,n)}static encode(e){const t=x(e.params,e=>e.encode());return[this.id,e.template,t]}getId(){return Jt.id}getComplexity(e){let t=0;for(const s in this.params)t=Math.max(t,this.params[s].getComplexity(e));return t}getScope(){return null}encode(){return Jt.encode(this)}clone(){return new Jt(this.template,x(this.params,e=>e.clone()))}getType(e,t){return Re.baseType.newInstance()}traverse(e){return e.enter(this,()=>E(this.params,(t,s)=>e.step(s,t,e=>this.params[s]=e,()=>delete this.params[s])))}getExpressionFromStep(e){return e[0]in this.params?[1,this.params[e[0]]]:null}setParent(e=null){this.parent=e,E(this.params,e=>e.setParent(this))}validate(e,t,s){E(this.params,n=>{this.validateType(e,t,Re.baseType,n,s)})}param(e,t){const s=r(e)?{[e]:t}:e;for(const e in s){const t=Ds.parse(s[e]);this.params[e]=t,t.setParent(this)}return this}}Jt.id="tmpl";const Kt="current",zt=1,Xt=2,$t=3;class Qt extends q{constructor(e,t,s=Kt){super(),this.path=e,this.value=t,this.currentVariable=s}static decode(e,t){const s=e[zt].map(e=>t.getExpression(e)),n=t.getExpression(e[Xt]),r=e[$t]||Kt;return new Qt(s,n,r)}static encode(e){const t=e.path.map(e=>e.encode()),s=e.value.encode();return e.currentVariable===Kt?[this.id,t,s]:[this.id,t,s,e.currentVariable]}static create(e,t,s=Kt){return new Qt(Ds.parse(e),Ds.parse(t),s)}getId(){return Qt.id}getComplexity(e){return this.path.reduce((t,s)=>Math.max(t,s.getComplexity(e)),this.value.getComplexity(e))}getScope(){return{[this.currentVariable]:ue.baseType}}encode(){return Qt.encode(this)}clone(){return new Qt(this.path.map(e=>e.clone()),this.value.clone(),this.currentVariable)}getType(e,t){return X.baseType}traverse(e){return e.enter(this,()=>{e.step(Qt.STEP_PATH,()=>this.path.forEach((t,s)=>e.step(s,t,e=>this.path.splice(s,1,e),()=>this.path.splice(s,1)))),e.step(Qt.STEP_VALUE,this.value,e=>this.value=e)})}getExpressionFromStep(e){return e[0]===Qt.STEP_PATH?n(e[1])&&e[1]<this.path.length?[2,this.path[e[1]]]:null:e[0]===Qt.STEP_VALUE?[1,this.value]:null}setParent(e=null){this.parent=e,this.path.forEach(e=>e.setParent(this)),this.value.setParent(this)}validate(e,t,s){this.validatePath(e,t,t,this.path,s);const n=e.getPathType(this.path,t);if(n){const r=e.getContext(t,{[this.currentVariable]:n});this.validateType(e,r,n,this.value,s)}}add(e){const t=i(e)?e:[e];for(const e of t){const t=Ds.parse(e);this.path.push(t),t.setParent(this)}return this}to(e,t){return this.value=Ds.parse(e),this.value.setParent(this),this.currentVariable=t||this.currentVariable,this}withVariable(e){return this.currentVariable=e,this}}Qt.STEP_PATH="path",Qt.STEP_VALUE="value",Qt.id="up";const Zt=1e5,es="break",ts=1,ss=2,ns=3,rs=4;class is extends q{constructor(e,t,s=es,n=Zt){super(),this.condition=e,this.body=t,this.breakVariable=s,this.maxIterations=n}static decode(e,t){const s=t.getExpression(e[ts]),n=t.getExpression(e[ss]),r=e[ns]||es,i=parseInt(e[rs])||this.MAX_ITERATIONS;return new is(s,n,r,i)}static encode(e){const t=[this.id,e.condition.encode(),e.body.encode()],s=e.maxIterations!==this.MAX_ITERATIONS;return(e.breakVariable!==es||s)&&t.push(e.breakVariable),s&&t.push(e.maxIterations),t}getId(){return is.id}getComplexity(e){return Math.max(this.condition.getComplexity(e),this.body.getComplexity(e))+1}getScope(){return{[this.breakVariable]:X.baseType}}encode(){return is.encode(this)}clone(){return new is(this.condition.clone(),this.body.clone(),this.breakVariable,this.maxIterations)}getType(e,t){const{context:s}=e.getContextWithScope(t,this.getScope()),n=this.body.getType(e,s);return n?hi.optional(n):null}traverse(e){return e.enter(this,()=>{e.step(is.STEP_CONDITION,this.condition,e=>this.condition=e),e.step(is.STEP_BODY,this.body,e=>this.body=e)})}getExpressionFromStep(e){return e[0]===is.STEP_CONDITION?[1,this.condition]:e[0]===is.STEP_BODY?[1,this.body]:null}setParent(e=null){this.parent=e,this.condition.setParent(this),this.body.setParent(this)}validate(e,t,s){this.validateType(e,t,X.baseType,this.condition,s);const n=e.getContext(t,this.getScope());this.body.validate(e,n,s)}while(e){return this.condition=e,this.condition.setParent(this),this}do(e){return this.body=e,this.body.setParent(this),this}withBreak(e){return this.breakVariable=e,this}withMax(e){return this.maxIterations=e,this}}is.STEP_CONDITION="condition",is.STEP_BODY="body",is.MAX_ITERATIONS=Zt,is.id="while";const as=new V(Y.Tuple+Y.Delimiter),os=new F(Y.Tuple+Y.Delimiter),us=as,ps={create:us.set("create"),maybe:us.set("maybe",{},["value"]),cmp:us.set("cmp",{},["value","test"]),copy:us.set("copy",{},["value"]),build:us.set("build",{},["a","b"],["c","d","e"],[],[],["a","b","c","d","e"]),get:us.set("get",{},["value","index"]),set:us.set("set",{mutates:["value"]},["value","index","element"]),isValid:us.set("?",{},["value"]),isEqual:us.set("=",{},["value","test"]),isNotEqual:us.set("!=",{},["value","test"]),isLess:us.set("<",{},["value","test"]),isLessOrEqual:us.set("<=",{},["value","test"]),isGreater:us.set(">",{},["value","test"]),isGreaterOrEqual:us.set(">=",{},["value","test"]),asAny:us.set("~"+Y.Any,{},["value"]),asBoolean:us.set("~"+Y.Boolean,{},["value"]),asColor:us.set("~"+Y.Color,{},["value"]),asDate:us.set("~"+Y.Date,{},["value"]),asList:us.set("~"+Y.List,{},["value"]),asMap:us.set("~"+Y.Map,{},["value"]),asNumber:us.set("~"+Y.Number,{},["value"]),asObject:us.set("~"+Y.Object,{},["value"]),asText:us.set("~"+Y.Text,{},["value"]),asTuple:us.set("~"+Y.Tuple,{},["value"]),asSet:us.set("~"+Y.Set,{},["value"])};os.set("copy",ps.copy);const ls=new V(Y.Number+Y.Delimiter),cs=new F(Y.Number+Y.Delimiter),hs=ls,ds={create:hs.set("create"),pi:hs.set("pi"),pi2:hs.set("2pi"),piHalf:hs.set("hpi"),e:hs.set("e"),sqrt2:hs.set("sqrt2"),sqrt12:hs.set("sqrt1/2"),ln2:hs.set("ln2"),ln10:hs.set("ln10"),log2e:hs.set("log2e"),log10e:hs.set("log10e"),add:hs.set("+",{},["value","addend"]),sub:hs.set("-",{},["value","subtrahend"]),mul:hs.set("*",{},["value","multiplier"]),div:hs.set("/",{},["value","divisor"]),mod:hs.set("%",{},["value","divisor"]),min:hs.set("min",{},["a","b"]),max:hs.set("max",{},["a","b"]),pow:hs.set("^^",{},["value","exponent"]),atan2:hs.set("atan2",{},["x","y"]),hypot:hs.set("hyp",{},["a","b"]),choose:hs.set("choose",{complexity:1},["n","k"]),gcd:hs.set("gcd",{complexity:1},["a","b"]),bitAnd:hs.set("&",{},["a","b"]),bitOr:hs.set("|",{},["a","b"]),bitXor:hs.set("^",{},["a","b"]),cmp:hs.set("cmp",{},["value","test"]),maybe:hs.set("maybe",{},["value"]),sqrt:hs.set("sqrt",{},["value"]),sq:hs.set("^2",{},["value"]),cbrt:hs.set("cbrt",{},["value"]),floor:hs.set("floor",{},["value"]),ceil:hs.set("ceil",{},["value"]),up:hs.set("up",{},["value"]),down:hs.set("down",{},["value"]),round:hs.set("round",{},["value"]),abs:hs.set("abs",{},["value"]),neg:hs.set("neg",{},["value"]),sign:hs.set("sign",{},["value"]),log:hs.set("log",{},["value"]),sin:hs.set("sin",{},["value"]),cos:hs.set("cos",{},["value"]),tan:hs.set("tan",{},["value"]),sinh:hs.set("sinh",{},["value"]),cosh:hs.set("cosh",{},["value"]),asin:hs.set("asin",{},["value"]),acos:hs.set("acos",{},["value"]),atan:hs.set("atan",{},["value"]),factorial:hs.set("!",{},["value"]),bitFlip:hs.set("~",{},["value"]),clamp:hs.set("clamp",{},["value","min","max"]),triangleHeight:hs.set("triangleHeight",{},["base","side1","side2"]),lerp:hs.set("lerp",{},["delta","start","end"]),rnd:hs.set("rnd",{},[],["min","max","whole","includeMax"]),toBaseText:hs.set("toBaseText",{},["value"],["base","minDigits"]),toText:hs.set("toText",{},["value"],["prefix","suffix","minPlaces","maxPlaces","useExponent","thousandSeparator"]),toPercent:hs.set("toPercent",{},["value"],["minPlaces","maxPlaces","thousandSeparator"]),fromPercent:hs.set("fromPercent",{},["value"]),isValid:hs.set("?",{},["value"]),isZero:hs.set("0?",{},["value"],["epsilon"]),isEqual:hs.set("=",{},["value","test"],["epsilon"]),isNotEqual:hs.set("!=",{},["value","test"],["epsilon"]),isLess:hs.set("<",{},["value","test"]),isLessOrEqual:hs.set("<=",{},["value","test"]),isGreater:hs.set(">",{},["value","test"]),isGreaterOrEqual:hs.set(">=",{},["value","test"]),isBetween:hs.set("><",{},["value","min","max"],["minInclusive","maxInclusive"]),isWhole:hs.set("w?",{},["value"],["epsilon"]),isDecimal:hs.set("d?",{},["value"],["epsilon"]),isPositive:hs.set("+?",{},["value"]),isNegative:hs.set("-?",{},["value"]),isDivisible:hs.set("%?",{},["value","by"],["epsilon"]),bitCompare:hs.set("bit",{},["value","method","test"]),asAny:hs.set("~"+Y.Any,{},["value"]),asBoolean:hs.set("~"+Y.Boolean,{},["value"]),asColor:hs.set("~"+Y.Color,{},["value"]),asDate:hs.set("~"+Y.Date,{},["value"]),asList:hs.set("~"+Y.List,{},["value"]),asMap:hs.set("~"+Y.Map,{},["value"]),asNumber:hs.set("~"+Y.Number,{},["value"]),asObject:hs.set("~"+Y.Object,{},["value"]),asText:hs.set("~"+Y.Text,{},["value"]),asTuple:hs.set("~"+Y.Tuple,{},["value"]),asSet:hs.set("~"+Y.Set,{},["value"])};cs.set("floor",ds.floor),cs.set("ceil",ds.ceil),cs.set("up",ds.up),cs.set("down",ds.down),cs.set("round",ds.round),cs.set("abs",ds.abs),cs.set("negate",ds.neg),cs.set("sign",ds.sign),cs.set("isZero",ds.isZero),cs.set("isWhole",ds.isWhole),cs.set("isDecimal",ds.isDecimal),cs.set("isPositive",ds.isPositive),cs.set("isNegative",ds.isNegative),cs.set("toText",ds.toText);const ms=new V(Y.List+Y.Delimiter),ys=new F(Y.List+Y.Delimiter),gs=ms,fs={create:gs.set("create"),createLike:gs.set("createLike",{},["list"],[],[],[],["list"]),createFor:gs.set("createFor",{},["item"],[],[],[],["item"]),maybe:gs.set("maybe",{},["value"]),build:gs.set("new",{},["count","item"],["sameItem"],["list","index","last","count"],["item"],["item"]),get:gs.set("get",{},["list","index"],[],[],[],["list"]),set:gs.set("set",{},["list","index","value"],[],[],[],["list"]),add:gs.set("+",{mutates:["list"]},["list","item"],[],[],[],["list"]),addFirst:gs.set("+f",{mutates:["list"]},["list","item"],[],[],[],["list"]),addLast:gs.set("+l",{mutates:["list"]},["list","item"],[],[],[],["list"]),insert:gs.set("+@",{mutates:["list"]},["list","item","index"],[],[],[],["list"]),remove:gs.set("-",{mutates:["list"],complexity:1},["list","item","isEqual"],[],["list","value","test"],["isEqual"],["list"]),removeFirst:gs.set("-f",{mutates:["list"]},["list"],[],[],[],["list"]),removeLast:gs.set("-l",{mutates:["list"]},["list"],[],[],[],["list"]),removeAt:gs.set("-@",{mutates:["list"]},["list","index"],[],[],[],["list"]),removeWhere:gs.set("-?",{mutates:["list"]},["list","where"],[],["list","item","index"],["where"],["list"]),clear:gs.set("clear",{mutates:["list"]},["list"],[],[],[],["list"]),contains:gs.set("contains",{complexity:1},["list","item","isEqual"],[],["list","value","test"],["isEqual"]),find:gs.set("find",{complexity:1},["list","where"],["start","reverse"],["list","item","index"],["where"],["list"]),copy:gs.set("copy",{complexity:1},["list"],["deepCopy"],["copy"],["deepCopy"],["list"]),reverse:gs.set("reverse",{complexity:.5},["list"],[],[],[],["list"]),exclude:gs.set("exclude",{mutates:["list"],complexity:2},["list","exclude","isEqual"],[],["list","value","test"],["isEqual"],["list"]),overlap:gs.set("overlap",{complexity:2},["list","overlap","isEqual"],[],["list","value","test"],["isEqual"],["list"]),sort:gs.set("sort",{mutates:["list"],complexity:1},["list","compare"],[],["list","value","test"],["compare"],["list"]),shuffle:gs.set("shuffle",{mutates:["list"],complexity:1},["list"],["times"],[],[],["list"]),unique:gs.set("unique",{complexity:2},["list","isEqual"],[],["list","value","test"],["isEqual"],["list"]),duplicates:gs.set("dupes",{complexity:2},["list","isEqual"],["once"],["list","value","test"],["isEqual"],["list"]),take:gs.set("take",{},["list","count"],[],[],[],["list"]),skip:gs.set("skip",{},["list","count"],[],[],[],["list"]),drop:gs.set("drop",{},["list","count"],[],[],[],["list"]),append:gs.set("append",{},["list","append"],[],[],[],["list"]),prepend:gs.set("prepend",{},["list","prepend"],[],[],[],["list"]),indexOf:gs.set("indexOf",{complexity:1},["list","item","isEqual"],["start"],["list","value","test"],["isEqual"],["list"]),lastIndexOf:gs.set("lastIndexOf",{complexity:1},["list","item","isEqual"],["start"],["list","value","test"],["isEqual"],["list"]),findIndex:gs.set("findIndex",{complexity:1},["list","where"],["reverse","start"],["list","item","index"],["where"]),last:gs.set("last",{},["list"],[],[],[],["list"]),first:gs.set("first",{},["list"],[],[],[],["list"]),count:gs.set("count",{},["list"]),randomList:gs.set("randomList",{},["list","count"],[],[],[],["list"]),random:gs.set("random",{},["list"],[],[],[],["list"]),join:gs.set("join",{complexity:1},["list"],["delimiter","toText","prefix","suffix"],["list","item","index"],["toText"]),each:gs.set("each",{complexity:1},["list","each"],["reverse"],["list","item","index"],["each"],["list"]),filter:gs.set("filter",{complexity:1},["list","filter"],[],["list","item","index"],["filter"],["list"]),not:gs.set("not",{complexity:1},["list","not"],[],["list","item","index"],["not"],["list"]),map:gs.set("map",{complexity:1},["list","transform"],[],["list","item","index"],["transform"],["list"]),split:gs.set("split",{complexity:1},["list","pass"],[],["list","item","index"],["pass"],["list"]),reduce:gs.set("reduce",{complexity:1},["list","reduce","initial"],[],["list","item","index","reduced"],["reduce"],["reduce"]),cmp:gs.set("cmp",{complexity:1},["value","test","compare"],[],["list","value","test"],["compare"]),group:gs.set("group",{complexity:1},["list","by"],["getValue"],["list","item","index"],["by","getValue"],["list","by","getValue"]),toListMap:gs.set("toListMap",{complexity:1},["list","getKey"],["getValue"],["list","item","index"],["getKey","getValue"],["list","getKey","getValue"]),toMap:gs.set("toMap",{complexity:1},["list","getKey"],["getValue"],["list","item","index"],["getKey","getValue"],["list","getKey","getValue"]),joinInner:gs.set("joinInner",{complexity:2},["a","b","on","join"],[],["onA","onB","joinA","joinB"],["on","join"],["join"]),joinLeft:gs.set("joinLeft",{complexity:2},["a","b","on","join"],[],["onA","onB","joinA","joinB"],["on","join"],["join"]),joinRight:gs.set("joinRight",{complexity:2},["a","b","on","join"],[],["onA","onB","joinA","joinB"],["on","join"],["join"]),joinFull:gs.set("joinFull",{complexity:2},["a","b","on","join"],[],["onA","onB","joinA","joinB"],["on","join"],["join"]),joinCross:gs.set("joinCross",{complexity:2},["a","b","join"],[],["joinA","joinB"],["join"],["join"]),min:gs.set("min",{complexity:1},["list","value"],[],["list","item","index"],["value"]),max:gs.set("max",{complexity:1},["list","value"],[],["list","item","index"],["value"]),sum:gs.set("sum",{complexity:1},["list","value"],[],["list","item","index"],["value"]),avg:gs.set("avg",{complexity:1},["list","value"],[],["list","item","index"],["value"]),std:gs.set("std",{complexity:1},["list","value"],[],["list","item","index"],["value"]),variance:gs.set("variance",{complexity:1},["list","value"],[],["list","item","index"],["value"]),median:gs.set("median",{complexity:1},["list","value"],[],["list","item","index"],["value"]),bitand:gs.set("band",{complexity:1},["list","value"],[],["list","item","index"],["value"]),bitor:gs.set("bor",{complexity:1},["list","value"],[],["list","item","index"],["value"]),bitxor:gs.set("bxor",{complexity:1},["list","value"],[],["list","item","index"],["value"]),isValid:gs.set("?",{},["value"]),isEmpty:gs.set("0?",{},["list"]),isNotEmpty:gs.set("!0",{},["list"]),isEqual:gs.set("=",{complexity:1},["list","test","isEqual"],[],["list","value","test"],["isEqual"]),isNotEqual:gs.set("!=",{complexity:1},["list","test","isEqual"],[],["list","value","test"],["isEqual"]),isLess:gs.set("<",{complexity:1},["value","test","compare"],[],["list","value","test"],["compare"]),isLessOrEqual:gs.set("<=",{complexity:1},["value","test","compare"],[],["list","value","test"],["compare"]),isGreater:gs.set(">",{complexity:1},["value","test","compare"],[],["list","value","test"],["compare"]),isGreaterOrEqual:gs.set(">=",{complexity:1},["value","test","compare"],[],["list","value","test"],["compare"]),asAny:gs.set("~"+Y.Any,{},["value"]),asBoolean:gs.set("~"+Y.Boolean,{},["value"]),asColor:gs.set("~"+Y.Color,{},["value"]),asDate:gs.set("~"+Y.Date,{},["value"]),asList:gs.set("~"+Y.List,{},["value"]),asMap:gs.set("~"+Y.Map,{},["value"]),asNumber:gs.set("~"+Y.Number,{},["value"]),asObject:gs.set("~"+Y.Object,{},["value"]),asText:gs.set("~"+Y.Text,{},["value"]),asTuple:gs.set("~"+Y.Tuple,{},["value"]),asSet:gs.set("~"+Y.Set,{},["value"])};ys.set("copy",fs.copy),ys.set("reversed",fs.reverse),ys.set("shuffled",fs.shuffle),ys.set("first",fs.first),ys.set("last",fs.last),ys.set("random",fs.random),ys.set("isEmpty",fs.isEmpty),ys.set("isNotEmpty",fs.isNotEmpty);const vs=1,Ts=2,bs=2,xs=5,Es=10;class Os extends R{static decode(e,t){const s=t.getType(e[vs]),n=e[Ts]||{};return new Os(Object.assign({item:s},n))}static encode(e){const t=Object.assign({},e.options),s=t.item;return delete t.item,y(t)?[this.id,s.encode()]:[this.id,s.encode(),t]}static describe(e,t){if(!i(e))return null;let s=t.describe(e[0]);for(let n=1;n<e.length;n++)s=t.merge(s,e[n]);return new Os({item:s,min:e.length,max:e.length})}static register(){J.addJson({priority:8,toJson:(e,t)=>{if(i(e))return e.map(t)},fromJson:(e,t)=>{if(i(e))return e.map(t)}}),J.addCompare({priority:8,type:"object",compare:(e,t,s)=>{const n=i(e),r=i(t);if(n!==r)return(n?1:0)-(r?1:0);if(n){let n=e.length-t.length;if(0===n){let r=0,i=0;for(let n=0;n<e.length;n++){const a=s(e[n],t[n]);a<0&&r++,a>0&&i++}n=J.getCompare(r,i)}return n}}}),J.addEquals({priority:8,type:"object",equals:(e,t,s)=>{const n=i(e);if(n!==i(t))return!1;if(n){if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(!s(e[n],t[n]))return!1;return!0}}}),J.addCopier({priority:8,copy:(e,t,s)=>{if(i(e)){const n=[];s(e,n);for(const s of e)n.push(t(s));return n}}})}static forItem(e){const t=hi.parse(e);return new Os({item:t})}getId(){return Os.id}getOperations(){return Os.operations.map}merge(e){const t=this.options,s=e.options;t.item=hi.merge(t.item,s.item),t.min=Math.min(t.min,s.min),t.max=Math.max(t.max,s.max)}getSubType(e,t,s){if(Ue.is(e)){if("length"===e.value)return hi.LENGTH;if(n(e.value))return n(this.options.min)&&e.value<this.options.min?this.options.item:hi.optional(this.options.item)}let r=e.getType(t,s);if(r){if((r=r.getRequired())instanceof Rs)return hi.optional(this.options.item);if(r instanceof Ge){const e=Array.from(r.options.constants.values());if(r.options.value instanceof Rs)return n(this.options.min)&&!e.some(e=>e>=this.options.min)?this.options.item:hi.optional(this.options.item);if(r.options.value instanceof Re&&1===e.length&&"length"===e[0])return hi.LENGTH}}return null}getSubTypes(e){const{min:t,item:s}=this.options,r=n(t)&&t>0&&t<=Es?t:0,i=[];for(let e=0;e<r;e++)i.push({key:e,value:s});return[...i,{key:"length",value:hi.LENGTH},{key:hi.INDEX,value:hi.optional(s)}]}getExactType(e){return this}getSimplifiedType(){return this}isDeepCompatible(e,t){const{item:s,min:n,max:r}=this.options;if(!t.strict&&!t.exact&&e instanceof ws&&!e.options.some(e=>!s.isCompatible(e,t)))return!0;if(!(e instanceof Os))return!1;if(!s.isCompatible(e.options.item,t))return!1;if(t.value){const t=e.options.min;if(n&&(!t||t<n))return!1;const s=e.options.max;if(r&&(!s||s<r))return!1}return!0}isOptional(){return!1}isSimple(){return!1}traverse(e){return e.enter(this,()=>e.step(Os.STEP_ITEM,this.options.item,e=>this.options.item=e))}getTypeFromStep(e){return e===Os.STEP_ITEM?this.options.item:null}setParent(e=null){this.parent=e,this.options.item.setParent(this)}removeDescribedRestrictions(){const{item:e}=this.options;e.removeDescribedRestrictions(),this.options={item:e}}getCreateExpression(){return Ds.op(fs.create,{})}getValidateExpression(){return Ds.and(Ds.op(fs.isValid,{value:Ds.get("value")}),Ds.not(Ds.op(fs.contains,{list:Ds.get("value"),item:Ds.null(),isEqual:Ds.not(this.options.item.getValidateExpression())},{value:"ignore",test:"value"})))}getCompareExpression(){return Ds.op(fs.cmp,{value:Ds.get("value"),test:Ds.get("test"),compare:this.options.item.getCompareExpression()})}getValueChangeExpression(e,t,s){return Ds.op(fs.map,{list:Ds.get("value"),transform:e},{item:"value"})}isValid(e){if(!Array.isArray(e))return!1;const{item:t,min:s,max:r}=this.options;if(n(s)&&e.length<s)return!1;if(n(r)&&e.length>r)return!1;for(const s of e)if(!t.isValid(s))return!1;return!0}normalize(e){if(i(e)){const t=this.options.item;for(let s=0;s<e.length;s++)e[s]=t.normalize(e[s])}return e}newInstance(){const{item:e}=this.options;return new Os({item:e.newInstance()})}clone(){const{item:e,min:t,max:s}=this.options;return new Os({item:e.clone(),min:t,max:s})}encode(){return Os.encode(this)}create(){return[]}random(e){const{min:t,max:s}=this.options,n=I(t,bs),r=I(s,xs),i=e(Math.min(n,r),Math.max(n,r)+1,!0),a=[];for(let t=0;t<i;t++)a.push(this.options.item.random(e));return a}fromJson(e){return e?e.map(e=>this.options.item.fromJson(e)):null}toJson(e){return e?e.map(e=>this.options.item.toJson(e)):null}}Os.STEP_ITEM="item",Os.id=Y.List,Os.operations=ms,Os.computeds=ys,Os.baseType=new Os({item:ue.baseType}),Os.describePriority=6,Os.registered=!1;const Ss=1;class ws extends R{static decode(e,t){const s=e[Ss].map(e=>t.getType(e));return new ws(s)}static encode(e){const t=e.options.map(e=>e.encode());return[this.id,t]}static describe(e,t){return null}static register(){}static forItem(e){return new ws(e.map(e=>hi.parse(e)))}getId(){return ws.id}getOperations(){return ws.operations.map}merge(e){}getSubType(e,t,s){if(Ue.is(e)){if("length"===e.value)return hi.LENGTH;if(n(e.value))return this.options[e.value]}let r=e.getType(t,s);if(r){if((r=r.getRequired())instanceof Rs)return hi.mergeMany(this.options,ae.baseType);if(r instanceof Ge){if(r.options.value instanceof Rs){const e=Array.from(r.options.constants.values()).map(e=>this.options[e]).filter(e=>!!e);return hi.mergeMany(e,ae.baseType)}if(r.options.value instanceof Re){const e=Array.from(r.options.constants.values());if(1===e.length&&"length"===e[0])return hi.LENGTH}}}}getSubTypes(e){return[...this.options.map((e,t)=>({key:t,value:e})),{key:"length",value:hi.LENGTH},{key:new Ge({key:Rs.baseType,value:Rs.baseType,constants:new Map(this.options.map((e,t)=>[t,t]))}),value:hi.mergeMany(this.options,ae.baseType)},{key:hi.INDEX,value:hi.optional(hi.mergeMany(this.options,ae.baseType))}]}getExactType(e){return this}getSimplifiedType(){return this}getCreateExpression(){return Ds.tuple(...this.options.map(e=>e.getCreateExpression()))}getValidateExpression(){return Ds.op(ps.isValid,{value:Ds.get("value")}).and(this.options.map((e,t)=>Ds.define({value:Ds.get("value",t)}).run(e.getValidateExpression())))}getCompareExpression(){return Ds.or(Ds.op(ds.cmp,{value:Ds.get("value","length"),test:Ds.get("test","length")}),...this.options.map((e,t)=>Ds.define({value:Ds.get("value",t),test:Ds.get("test",t)}).run(e.getCompareExpression())))}getValueChangeExpression(e,t,s){const r=n(t),i=n(s);return!r&&i?Ds.define({parent:Ds.get("value")},Ds.op(fs.insert,{list:Ds.get("value"),index:s,item:e})):r&&!i?Ds.body(Ds.op(fs.removeAt,{list:Ds.get("value"),index:t}),Ds.get("value")):t===s&&r?Ds.body(Ds.update("value",t).to(e,"value"),Ds.get("value")):e}isDeepCompatible(e,t){if(!t.exact&&!t.strict&&e instanceof Os&&!this.options.some(s=>!s.isCompatible(e.options.item,t))&&n(e.options.min)&&e.options.min>=this.options.length)return!0;if(!(e instanceof ws))return!1;const s=this.options,r=e.options;if(r.length<s.length||t.exact&&s.length!==r.length)return!1;for(let e=0;e<s.length;e++)if(!s[e].isCompatible(r[e],t))return!1;return!0}isOptional(){return!1}isSimple(){return!1}traverse(e){return e.enter(this,()=>this.options.map((t,s)=>e.step(s,t,e=>this.options.splice(s,1,e),()=>this.options.splice(s,1))))}getTypeFromStep(e){return this.options[e]||null}setParent(e=null){this.parent=e,this.options.forEach(e=>e.setParent(this))}removeDescribedRestrictions(){this.options.forEach(e=>e.removeDescribedRestrictions())}isValid(e){if(!i(e))return!1;const t=this.options;for(let s=0;s<t.length;s++)if(!t[s].isValid(e[s]))return!1;return!0}normalize(e){if(!i(e))return e;const t=this.options;for(let s=0;s<t.length;s++)e[s]=t[s].normalize(e[s]);return e}newInstance(){return new ws([])}clone(){return new ws(this.options.map(e=>e.clone()))}encode(){return ws.encode(this)}create(){return this.options.map(e=>e.create())}random(e){return this.options.map(t=>t.random(e))}fromJson(e){return this.options.map((t,s)=>t.fromJson(e[s]))}toJson(e){return this.options.map((t,s)=>t.toJson(e[s]))}}ws.id=Y.Tuple,ws.operations=as,ws.computeds=os,ws.baseType=new ws([]),ws.describePriority=-1,ws.registered=!1;const Ms=1;class Is extends q{constructor(e){super(),this.expressions=e}static decode(e,t){const s=e[Ms].map(e=>t.getExpression(e));return new Is(s)}static encode(e){const t=e.expressions.map(e=>e.encode());return[this.id,t]}getId(){return Is.id}getComplexity(e){return this.expressions.reduce((t,s)=>Math.max(t,s.getComplexity(e)),0)}getScope(){return null}encode(){return Is.encode(this)}clone(){return new Is(this.expressions.map(e=>e.clone()))}getType(e,t){return new ws(this.expressions.map(s=>hi.simplify(s.getType(e,t))))}traverse(e){return e.enter(this,()=>this.expressions.forEach((t,s)=>e.step(s,t,e=>this.expressions.splice(s,1,e),()=>this.expressions.splice(s,1))))}getExpressionFromStep(e){return n(e[0])&&e[0]<this.expressions.length?[1,this.expressions[e[0]]]:null}setParent(e=null){this.parent=e,this.expressions.forEach(e=>e.setParent(this))}validate(e,t,s){this.expressions.forEach(n=>{n.validate(e,t,s)})}}Is.id="tuple";const Ps=1;class Cs extends q{constructor(e){super(),this.props=e}static decode(e,t){const s=x(e[Ps],e=>t.getExpression(e));return new Cs(s)}static encode(e){const t=x(e.props,e=>e.encode());return[this.id,t]}getId(){return Cs.id}getComplexity(e){return S(this.props,(t,s,n)=>Math.max(n,t.getComplexity(e)),0)}getScope(){return null}encode(){return Cs.encode(this)}clone(){return new Cs(x(this.props,e=>e.clone()))}getType(e,t){return new dt({props:x(this.props,s=>hi.simplify(s.getType(e,t)))})}traverse(e){return e.enter(this,()=>E(this.props,(t,s)=>e.step(s,t,e=>this.props[s]=e,()=>delete this.props[s])))}getExpressionFromStep(e){return e[0]in this.props?[1,this.props[e[0]]]:null}setParent(e=null){this.parent=e,E(this.props,e=>e.setParent(this))}validate(e,t,s){E(this.props,n=>n.validate(e,t,s))}}Cs.id="obj";class Ds{static setParent(e,t=!1){return(this.autoSetParent||t)&&e.setParent(),e}static parse(e){return i(e)?e.map(e=>this.parse(e)):e instanceof q?e:c(e)?x(e,e=>this.parse(e)):new Ue(e)}static cast(e,t,s=!0){const n=`${e.getId()}:~${t.getId()}`,r=e.getOperations()[n];return r?this.op(r,{value:this.get("value")}):s?this.setParent(t.getCreateExpression()):null}static and(...e){return this.setParent(new ee(e))}static body(...e){return this.setParent(new be(e))}static const(e){return new Ue(e)}static define(e={},t=oe.instance){return this.setParent(new ce([],t).with(e))}static do(e,t=oe.instance,s,n){return this.setParent(new ve(t,e,s,n))}static for(e,t=new Ue(0),s=new Ue(0),n=oe.instance,r,i){return this.setParent(new Ze(e,this.parse(t),this.parse(s),n,r,i))}static get(...e){return this.setParent(new tt(this.parse(e)))}static sub(e,...t){return this.setParent(new Vt(this.parse(e),this.parse(t)))}static computed(e,t){return this.setParent(new we(this.parse(t),e))}static if(e,t=oe.instance,s=oe.instance){return this.setParent(new Et([[e,t]],s))}static invoke(e,t={}){return this.setParent(new wt(e,this.parse(t)))}static noop(){return oe.instance}static not(e){return this.setParent(new Q(e))}static object(e){return this.setParent(new Cs(this.parse(e)))}static op(e,t,s=Object.create(null)){return this.setParent(new kt(e.id,this.parse(t),s))}static or(...e){return this.setParent(new It(e))}static return(e=oe.instance){return this.setParent(new Lt(this.parse(e)))}static set(...e){return this.setParent(new jt(this.parse(e),oe.instance))}static switch(e,t){return this.setParent(new Ut(e,t.id,[],oe.instance))}static template(e,t={}){return this.setParent(new Jt(e,this.parse(t)))}static tuple(...e){return this.setParent(new Is(this.parse(e)))}static update(...e){return this.setParent(new Qt(this.parse(e),oe.instance))}static while(e,t=oe.instance,s,n){return this.setParent(new is(e,t,s,n))}static undefined(){return this.const(void 0)}static null(){return this.const(null)}static true(){return this.const(!0)}static false(){return this.const(!1)}static zero(){return this.const(0)}static one(){return this.const(1)}static compareEqual(){return this.const(1)}static compareLess(){return this.const(-1)}static compareGreater(){return this.const(1)}static string(){return this.const("")}static comment(e){return new Ee(e)}static entity(e){return new ft(e)}static relation(e){return new Tt(e)}static data(e){return new nt(e)}}Ds.autoSetParent=!0;const ks=1,Ns=0,Ls=10;class Rs extends R{static decode(e){return new Rs(e[ks]||{})}static encode(e){return y(e.options)?this.id:[this.id,e.options]}static describe(e,t){return n(e)?new Rs({min:e,max:e,whole:Math.abs(Math.floor(e)-e)<=Rs.WHOLE_EPSILON}):null}static register(){J.addCompare({priority:0,type:"number",compare:(e,t)=>e<t?t-e<this.COMPARES_EPSILON?0:-1:e-t<this.COMPARES_EPSILON?0:1}),J.addEquals({priority:0,type:"number",equals:(e,t)=>Math.abs(e-t)<this.EQUALS_EPSILON}),J.addCompare({priority:0,type:"bigint",compare:(e,t)=>e-t}),J.addEquals({priority:0,type:"bigint",equals:(e,t)=>e===t})}getId(){return Rs.id}getOperations(){return Rs.operations.map}merge(e){const t=this.options,s=e.options;t.max=Math.max(t.max,s.max),t.min=Math.min(t.min,s.min),t.whole=t.whole&&s.whole}getSubType(e,t,s){return null}getSubTypes(e){return[]}getExactType(e){return this}getSimplifiedType(){return this}isDeepCompatible(e,t){if(!(e instanceof Rs))return!1;if(t.value){const t=this.options.min,s=e.options.min;if(n(t)&&(!n(s)||s<t))return!1;const r=this.options.max,i=e.options.max;if(n(r)&&(!n(i)||i<r))return!1}return!0}isOptional(){return!1}isSimple(){return!0}traverse(e){return e.enter(this)}setParent(e=null){this.parent=e}removeDescribedRestrictions(){this.options={}}getCreateExpression(){return Ds.op(ds.create,{})}getValidateExpression(){return Ds.op(ds.isValid,{value:Ds.get("value")})}getCompareExpression(){return Ds.op(ds.cmp,{value:Ds.get("value"),test:Ds.get("test")})}isValid(e){if(!n(e))return!1;const{min:t,max:s,whole:r}=this.options;return!(n(t)&&e<t)&&(!(n(s)&&e>s)&&!(r&&!m(e)))}normalize(e){return e}newInstance(){return new Rs({})}clone(){return new Rs(J.copy(this.options))}encode(){return Rs.encode(this)}create(){return 0}random(e){const{min:t,max:s,whole:n}=this.options;return e(I(t,Ns),I(s,Ls),n)}fromJson(e){return e}toJson(e){return e}}Rs.WHOLE_EPSILON=1e-6,Rs.id=Y.Number,Rs.operations=ls,Rs.computeds=cs,Rs.baseType=new Rs({}),Rs.describePriority=4,Rs.registered=!1,Rs.EQUALS_EPSILON=1e-6,Rs.COMPARES_EPSILON=1e-6;const As=["th","st","nd","rd","th","th","th","th","th","th"];let js={weekStartsOn:0,firstWeekContainsDate:4,am:"am",pm:"pm",formatLT:"h:mm A",formatLTS:"h:mm:ss A",formatL:"MM/DD/Y",formatl:"M/D/Y",formatLL:"MMMM D, Y",formatll:"MMM D, Y",formatLLL:"MMMM D, Y h:mm A",formatlll:"MMM D, Y h:mm A",formatLLLL:"dddd, MMMM D, Y h:mm A",formatllll:"ddd, MMM D, Y h:mm A",suffix:e=>{return e+(e>=11&&e<=13?"th":As[e%As.length])},list:e=>{const t=e.length-1;let s=e[0];for(let n=1;n<t;n++)s+=", "+e[n];return t>0&&(s+=" and "+e[t]),s},months:[["January","February","March","April","May","June","July","August","September","October","November","December"],["Jan","Feb","Mar","Apr","May","June","July","Aug","Sept","Oct","Nov","Dec"],["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],["Ja","F","Mr","Ap","My","Je","Jl","Ag","S","O","N","D"]],weekdays:[["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],["Sun","Mon","Tues","Wed","Thurs","Fri","Sat"],["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],["Su","M","Tu","W","Th","F","Sa"]]};const qs=1e3,_s=7,Vs=60*qs,Fs=60*Vs,Ys=24*Fs,Gs=3,Bs=12,Us=1,Ws=31,Hs=23,Js=59,Ks=59,zs=999,Xs=6,$s={none:e=>e,floor:e=>Math.floor(e),ceil:e=>Math.ceil(e),round:e=>Math.round(e),truncate:e=>e<0?Math.ceil(e):Math.floor(e),down:e=>e<0?Math.ceil(e):Math.floor(e),up:e=>e<0?Math.floor(e):Math.ceil(e)},Qs={timestamp:e=>e.valueOf(),timestampSeconds:e=>Math.floor(e.valueOf()/qs),millis:e=>e.getMilliseconds(),second:e=>e.getSeconds(),minute:e=>e.getMinutes(),hour:e=>e.getHours(),day:e=>e.getDay(),dayOfMonth:e=>e.getDate(),lastDayOfMonth:mn,dayOfYear:Nn,dayOfWeek:kn,week:fn,weekOfMonth:Mn,weekspanOfMonth:En,fullWeekOfMonth:Sn,lastWeekspanOfMonth:On,lastFullWeekOfMonth:wn,weekOfYear:gn,weekspanOfYear:vn,fullWeekOfYear:Tn,lastWeekspanOfYear:yn,lastFullWeekOfYear:xn,month:e=>e.getMonth(),quarter:Yn,year:e=>e.getFullYear(),timeIdentifier:pn,dayIdentifier:ln,weekIdentifier:cn,monthIdentifier:hn,quarterIdentifier:dn},Zs={timestamp:(e,t)=>rn(e,e=>e.setTime(t)),timestampSeconds:(e,t)=>rn(e,e=>e.setTime(1e3*t)),millis:(e,t)=>rn(e,e=>e.setMilliseconds(t)),second:(e,t)=>rn(e,e=>e.setSeconds(t)),minute:(e,t)=>rn(e,e=>e.setMinutes(t)),hour:(e,t)=>rn(e,e=>e.setHours(t)),day:(e,t)=>rn(e,e=>sn.day(e,t-e.getDay())),dayOfMonth:(e,t)=>rn(e,e=>e.setDate(t)),lastDayOfMonth:(e,t)=>rn(e,e=>sn.day(e,t-mn(e))),dayOfYear:(e,t)=>rn(e,e=>sn.day(e,t-Nn(e))),dayOfWeek:(e,t)=>rn(e,e=>sn.day(e,t-kn(e))),week:(e,t)=>rn(e,e=>sn.week(e,t-fn(e))),weekOfMonth:(e,t)=>rn(e,e=>sn.week(e,t-Mn(e))),weekspanOfMonth:(e,t)=>rn(e,e=>sn.week(e,t-En(e))),fullWeekOfMonth:(e,t)=>rn(e,e=>sn.week(e,t-Sn(e))),lastWeekspanOfMonth:(e,t)=>rn(e,e=>sn.week(e,t-On(e))),lastFullWeekOfMonth:(e,t)=>rn(e,e=>sn.week(e,t-wn(e))),weekOfYear:(e,t)=>rn(e,e=>sn.week(e,t-gn(e))),weekspanOfYear:(e,t)=>rn(e,e=>sn.week(e,t-vn(e))),fullWeekOfYear:(e,t)=>rn(e,e=>sn.week(e,t-Tn(e))),lastWeekspanOfYear:(e,t)=>rn(e,e=>sn.week(e,t-yn(e))),lastFullWeekOfYear:(e,t)=>rn(e,e=>sn.week(e,t-xn(e))),month:(e,t)=>rn(e,e=>e.setMonth(t)),quarter:(e,t)=>rn(e,e=>sn.quarter(e,t-Yn(e))),year:(e,t)=>rn(e,e=>e.setFullYear(t))},en={millis:e=>e,second:Gn,minute:Bn,hour:Un,day:Wn,week:Hn,month:Jn,quarter:Kn,year:zn},tn={millis:e=>e,second:Xn,minute:$n,hour:Qn,day:Zn,week:er,month:tr,quarter:sr,year:nr},sn={millis:rr,second:ir,minute:ar,hour:or,day:ur,week:pr,month:lr,quarter:cr,year:hr},nn={millis:dr,second:mr,minute:yr,hour:gr,day:fr,week:vr,month:Tr,quarter:br,year:xr};function rn(e,t,s){const n=new Date(e.getTime());return t(n,s),n}function an(e,t,s="millis",n=js){const r=en[s],i=rn(e,r,n),a=rn(t,r,n);return i.getTime()-a.getTime()}const on=[{pattern:/^(\d{4})[-\/](\d{1,22})[-\/](\d{1,2})(|[T ](\d{1,2})((|:(\d{1,2})(|:(\d{1,2})(|\.(\d+)Z?)))))$/,groups:[1,2,3,5,8,10,12]},{pattern:/^(\d{1,2})[-\/](\d{1,2})[-\/](\d{4})(|[T ](\d{1,2})((|:(\d{1,2})(|:(\d{1,2})(|\.(\d+)Z?)))))$/,groups:[3,1,2,5,8,10,12]}];function un(e,t=!1){if(a(e))return e;if(n(e)&&e>0)return new Date(e);if(r(e)){for(const s of on){const{pattern:n,groups:r}=s,i=n.exec(e);if(i){const e=[0,0,1,0,0,0,0];for(let t=0;t<e.length;t++){const s=parseInt(i[r[t]]);isFinite(s)&&(e[t]=1===t?s-1:s)}return t?new Date(Date.UTC(...e)):new Date(...e)}}if(t){const t=e+" UTC",s=Date.parse(t);if(isFinite(s))return new Date(s)}const s=Date.parse(e);if(isFinite(s))return new Date(s)}return null}function pn(e){return 1e8*e.getFullYear()+1e6*(e.getMonth()+1)+1e4*e.getDate()+100*e.getHours()+e.getMinutes()}function ln(e){return 1e4*e.getFullYear()+100*(e.getMonth()+1)+e.getDate()}function cn(e){return 1e3*e.getFullYear()+fn(e)}function hn(e){return 100*e.getFullYear()+(e.getMonth()+1)}function dn(e){return 10*e.getFullYear()+Yn(e)}function mn(e){return _n(e)-e.getDate()+1}function yn(e){const t=jn(e)-Nn(e);return Math.floor(t/_s)}function gn(e,t=js){return Pn(rn(e,zn),Nn(e),t)}function fn(e,t=js){return Cn(rn(e,zn),Nn(e),t)}function vn(e){return Math.floor((Nn(e)-1)/_s)}function Tn(e,t=js){return Dn(rn(e,zn),jn(e),t)}function bn(e,t=js){return gn(rn(e,nr),t)+1}function xn(e,t=js){const s=rn(e,nr),n=gn(e,t),r=gn(s,t)-n;return kn(s,t)===Xs?r+1:r}function En(e){return Math.floor((e.getDate()-1)/_s)}function On(e){const t=_n(e)-e.getDate();return Math.floor(t/_s)}function Sn(e,t=js){return Dn(rn(e,Jn),e.getDate(),t)}function wn(e,t=js){const s=_n(e)-e.getDate(),n=Xs-kn(e,t);return Math.floor((s-n+_s)/_s)}function Mn(e,t=js){return Pn(rn(e,Jn),e.getDate(),t)}function In(e,t=js){return Cn(rn(e,Jn),e.getDate(),t)}function Pn(e,t,s=js){const{firstWeekContainsDate:n}=s,r=kn(e,s),i=_s-r<n?r-1:r-1+_s;return Math.floor((t+i)/_s)}function Cn(e,t,s){const n=kn(e,s)-1+_s;return Math.floor((t+n)/_s)}function Dn(e,t,s=js){const n=kn(e,s),r=0!==n?n-1:n-1+_s;return Math.floor((t+r)/_s)}function kn(e,t=js){const{weekStartsOn:s}=t,n=e.getDay();return n<s?n-s+_s:n-s}function Nn(e){return Math.round(fr(e,rn(e,zn)))+1}function Ln(e){return 15*-Math.round(e.getTimezoneOffset()/15)}function Rn(e){const t=Ln(e);return t>Ln(rn(e,e=>e.setMonth(0)))||t>Ln(rn(e,e=>e.setMonth(5)))}function An(e){const t=e.getFullYear();return t%400==0||t%4==0&&t%100!=0}function jn(e){return An(e)?366:365}const qn=[[31,28,31,30,31,30,31,31,30,31,30,31],[31,29,31,30,31,30,31,31,30,31,30,31]];function _n(e){return qn[An(e)?1:0][e.getMonth()]}function Vn(e){return e.getTime()-Fn(e)}function Fn(e){const t=new Date(e.getTime()),s=t.getTimezoneOffset();t.setSeconds(0,0);const n=t.getTime()%Vs;return s*Vs+n}function Yn(e){return Math.floor(e.getMonth()/Gs)}function Gn(e){e.setMilliseconds(0)}function Bn(e){e.setSeconds(0,0)}function Un(e){e.setMinutes(0,0,0)}function Wn(e){e.setHours(0,0,0,0)}function Hn(e,t=js){const s=kn(e,t);e.setDate(e.getDate()-s),e.setHours(0,0,0,0)}function Jn(e){e.setDate(Us),e.setHours(0,0,0,0)}function Kn(e){const t=e.getMonth();e.setMonth(t-t%Gs,Us),e.setHours(0,0,0,0)}function zn(e){const t=e.getFullYear();e.setTime(0),e.setFullYear(t,0,1),e.setHours(0,0,0,0)}function Xn(e){e.setMilliseconds(zs)}function $n(e){e.setSeconds(Ks,zs)}function Qn(e){e.setMinutes(Js,Ks,zs)}function Zn(e){e.setHours(Hs,Js,Ks,zs)}function er(e,t=js){const s=kn(e,t);e.setDate(e.getDate()+(Xs-s)),Zn(e)}function tr(e){e.setFullYear(e.getFullYear(),e.getMonth()+1,0),Zn(e)}function sr(e){const t=e.getMonth();e.setMonth(t-t%Gs+Gs,Us),Zn(e)}function nr(e){e.setFullYear(e.getFullYear()+1,0,0),Zn(e)}function rr(e,t){e.setTime(e.getTime()+t)}function ir(e,t){rr(e,t*qs)}function ar(e,t){rr(e,t*Vs)}function or(e,t){rr(e,t*Fs)}function ur(e,t){e.setDate(e.getDate()+t)}function pr(e,t){ur(e,t*_s)}function lr(e,t){const s=e.getMonth()+t,n=new Date(0);n.setFullYear(n.getFullYear(),s,1),n.setHours(0,0,0,0);const r=_n(n);e.setMonth(s,Math.min(r,e.getDate()))}function cr(e,t){lr(e,t*Gs)}function hr(e,t){lr(e,t*Bs)}function dr(e,t){return e.getTime()-t.getTime()}function mr(e,t){return dr(e,t)/qs}function yr(e,t){return dr(e,t)/Vs}function gr(e,t){return dr(e,t)/Fs}function fr(e,t){return(Vn(e)-Vn(t))/Ys}function vr(e,t){return fr(e,t)/_s}function Tr(e,t){const s=e.getFullYear()-t.getFullYear(),n=e.getMonth()-t.getMonth(),r=(e.getDate()-t.getDate())/Ws;return s*Bs+n+r}function br(e,t){return Tr(e,t)/Gs}function xr(e,t){return Tr(e,t)/Bs}const Er=new V(Y.Date+Y.Delimiter),Or=new F(Y.Date+Y.Delimiter),Sr=Er,wr={create:Sr.set("create"),now:Sr.set("now"),today:Sr.set("today"),tomorrow:Sr.set("today+"),yesterday:Sr.set("today-"),maybe:Sr.set("maybe",{},["value"]),parse:Sr.set("parse",{},["value"],["parseAsUTC"]),fromText:Sr.set(">txt",{},["value"],["parseAsUTC"]),fromTimestamp:Sr.set(">tms",{},["value"]),fromTimestampSeconds:Sr.set(">tmss",{},["value"]),min:Sr.set("min",{},["value","test"]),max:Sr.set("max",{},["value","test"]),get:Sr.set("get",{},["value","property"]),set:Sr.set("set",{},["value","property","set"]),add:Sr.set("+",{},["value","unit"],["amount"]),sub:Sr.set("-",{},["value","unit"],["amount"]),startOf:Sr.set("startOf",{},["value","unit"]),endOf:Sr.set("endOf",{},["value","unit"],["inclusive"]),daysInMonth:Sr.set("dim",{},["value"]),daysInYear:Sr.set("diy",{},["value"]),weeksInYear:Sr.set("wiy",{},["value"]),copy:Sr.set("copy",{},["value"]),cmp:Sr.set("cmp",{},["value","test"],["unit"]),diff:Sr.set("diff",{},["value","test"],["unit","absolute","adjust"]),timezoneOffset:Sr.set("offset",{},["value"]),toText:Sr.set("toText",{},["value","format"]),toISOText:Sr.set("toISOText",{},["value"]),isValid:Sr.set("?",{},["value"]),isEqual:Sr.set("=",{},["value","test"],["unit"]),isBefore:Sr.set("<",{},["value","test"],["unit"]),isBeforeOrEqual:Sr.set("<=",{},["value","test"],["unit"]),isAfter:Sr.set(">",{},["value","test"],["unit"]),isAfterOrEqual:Sr.set(">=",{},["value","test"],["unit"]),isBetween:Sr.set("between",{},["value","start","end"],["unit","startInclusive","endInclusive"]),isStartOf:Sr.set("startOf?",{},["value","unit"]),isEndOf:Sr.set("endOf?",{},["value","unit"],["inclusive"]),isDST:Sr.set("dst?",{},["value"]),isLeapYear:Sr.set("leap?",{},["value"]),asAny:Sr.set("~"+Y.Any,{},["value"]),asBoolean:Sr.set("~"+Y.Boolean,{},["value"]),asColor:Sr.set("~"+Y.Color,{},["value"]),asDate:Sr.set("~"+Y.Date,{},["value"]),asList:Sr.set("~"+Y.List,{},["value"]),asMap:Sr.set("~"+Y.Map,{},["value"]),asNumber:Sr.set("~"+Y.Number,{},["value"]),asObject:Sr.set("~"+Y.Object,{},["value"]),asText:Sr.set("~"+Y.Text,{},["value"]),asTuple:Sr.set("~"+Y.Tuple,{},["value"]),asSet:Sr.set("~"+Y.Set,{},["value"])};Or.set("timestamp",wr.get,"value",{property:"timestamp"}),Or.set("timestampSeconds",wr.get,"value",{property:"timestampSeconds"}),Or.set("millis",wr.get,"value",{property:"millis"}),Or.set("second",wr.get,"value",{property:"second"}),Or.set("minute",wr.get,"value",{property:"minute"}),Or.set("hour",wr.get,"value",{property:"hour"}),Or.set("day",wr.get,"value",{property:"day"}),Or.set("dayOfMonth",wr.get,"value",{property:"dayOfMonth"}),Or.set("lastDayOfMonth",wr.get,"value",{property:"lastDayOfMonth"}),Or.set("dayOfYear",wr.get,"value",{property:"dayOfYear"}),Or.set("dayOfWeek",wr.get,"value",{property:"dayOfWeek"}),Or.set("week",wr.get,"value",{property:"week"}),Or.set("weekOfMonth",wr.get,"value",{property:"weekOfMonth"}),Or.set("weekspanOfMonth",wr.get,"value",{property:"weekspanOfMonth"}),Or.set("fullWeekOfMonth",wr.get,"value",{property:"fullWeekOfMonth"}),Or.set("lastWeekspanOfMonth",wr.get,"value",{property:"lastWeekspanOfMonth"}),Or.set("lastFullWeekOfMonth",wr.get,"value",{property:"lastFullWeekOfMonth"}),Or.set("weekOfYear",wr.get,"value",{property:"weekOfYear"}),Or.set("weekspanOfYear",wr.get,"value",{property:"weekspanOfYear"}),Or.set("fullWeekOfYear",wr.get,"value",{property:"fullWeekOfYear"}),Or.set("lastWeekspanOfYear",wr.get,"value",{property:"lastWeekspanOfYear"}),Or.set("lastFullWeekOfYear",wr.get,"value",{property:"lastFullWeekOfYear"}),Or.set("month",wr.get,"value",{property:"month"}),Or.set("quarter",wr.get,"value",{property:"quarter"}),Or.set("year",wr.get,"value",{property:"year"}),Or.set("timeIdentifier",wr.get,"value",{property:"timeIdentifier"}),Or.set("dayIdentifier",wr.get,"value",{property:"dayIdentifier"}),Or.set("weekIdentifier",wr.get,"value",{property:"weekIdentifier"}),Or.set("monthIdentifier",wr.get,"value",{property:"monthIdentifier"}),Or.set("quarterIdentifier",wr.get,"value",{property:"quarterIdentifier"}),Or.set("startOfSecond",wr.startOf,"value",{unit:"second"}),Or.set("startOfMinute",wr.startOf,"value",{unit:"minute"}),Or.set("startOfHour",wr.startOf,"value",{unit:"hour"}),Or.set("startOfDay",wr.startOf,"value",{unit:"day"}),Or.set("startOfWeek",wr.startOf,"value",{unit:"week"}),Or.set("startOfMonth",wr.startOf,"value",{unit:"month"}),Or.set("startOfQuarter",wr.startOf,"value",{unit:"quarter"}),Or.set("startOfYear",wr.startOf,"value",{unit:"year"}),Or.set("endOfSecond",wr.endOf,"value",{unit:"second"}),Or.set("endOfMinute",wr.endOf,"value",{unit:"minute"}),Or.set("endOfHour",wr.endOf,"value",{unit:"hour"}),Or.set("endOfDay",wr.endOf,"value",{unit:"day"}),Or.set("endOfWeek",wr.endOf,"value",{unit:"week"}),Or.set("endOfMonth",wr.endOf,"value",{unit:"month"}),Or.set("endOfQuarter",wr.endOf,"value",{unit:"quarter"}),Or.set("endOfYear",wr.endOf,"value",{unit:"year"}),Or.set("daysInMonth",wr.daysInMonth),Or.set("daysInYear",wr.daysInYear),Or.set("weeksInYear",wr.weeksInYear),Or.set("timezoneOffset",wr.timezoneOffset),Or.set("toISOText",wr.toISOText),Or.set("isDST",wr.isDST),Or.set("isLeapYear",wr.isLeapYear);const Mr=1;class Ir extends R{static decode(e,t){return new Ir(this.decodeOptions(e[Mr]||{}))}static encode(e){return y(e.options)?this.id:[this.id,this.encodeOptions(e.options)]}static decodeOptions(e){return e.validateMin&&(e.validateMin=new Date(e.validateMin)),e.validateMax&&(e.validateMax=new Date(e.validateMax)),e.forceMin&&(e.forceMin=new Date(e.forceMin)),e.forceMax&&(e.forceMax=new Date(e.forceMax)),e}static encodeOptions(e){const t=Object.assign({},e);return t.validateMin&&(t.validateMin=t.validateMin.toISOString()),t.validateMax&&(t.validateMax=t.validateMax.toISOString()),t.forceMin&&(t.forceMin=t.forceMin.toISOString()),t.forceMax&&(t.forceMax=t.forceMax.toISOString()),t}static describe(e,t){return a(e)?new Ir({validateMin:new Date(e.getTime()),validateMax:new Date(e.getTime())}):null}static register(){J.addCompare({priority:9,type:"object",compare:(e,t)=>{const s=a(e),n=a(t);return s!==n?(s?1:0)-(n?1:0):s?e.getTime()-t.getTime():void 0}}),J.addEquals({priority:9,type:"object",equals:(e,t)=>{const s=a(e);return s===a(t)&&(s?e.getTime()===t.getTime():void 0)}}),J.addJson({priority:9,fromJson:e=>{if(c(e)&&r(e.$any)&&"date"===e.$any)return new Date(e.value)},toJson:e=>{if(a(e))return{$any:"date",value:e.toISOString()}}}),J.addCopier({priority:9,copy:(e,t,s)=>{if(a(e)){const t=new Date(e.getTime());return s(e,t),t}}})}getId(){return Ir.id}getOperations(){return Ir.operations.map}merge(e){const t=this.options,s=e.options;t.parseAsUTC=t.parseAsUTC&&s.parseAsUTC,t.validateMin&&s.validateMin&&t.validateMin.setTime(Math.min(t.validateMin.getTime(),s.validateMin.getTime())),t.validateMax&&s.validateMax&&t.validateMax.setTime(Math.max(t.validateMax.getTime(),s.validateMax.getTime()))}getSubType(e,t,s){return null}getSubTypes(e){return[]}getExactType(e){return this}getSimplifiedType(){return this}isDeepCompatible(e,t={}){if(!(e instanceof Ir))return!1;if(t.value){if(e.options.withTime&&!this.options.withTime)return!1;const t=this.getMin(),s=e.getMin();if(t&&(!s||s.getTime()<t.getTime()))return!1;const n=this.getMax(),r=e.getMax();if(n&&(!r||r.getTime()>n.getTime()))return!1;const{forceStartOf:i,forceEndOf:a}=this.options;if(i&&i!==e.options.forceStartOf)return!1;if(a&&a!==e.options.forceEndOf)return!1}return!0}isOptional(){return!1}isSimple(){return!0}traverse(e){return e.enter(this)}setParent(e=null){this.parent=e}removeDescribedRestrictions(){const{parseAsUTC:e,withTime:t}=this.options;this.options={parseAsUTC:e,withTime:t}}getCreateExpression(){return Ds.op(wr.create,{})}getValidateExpression(){return Ds.op(wr.isValid,{value:Ds.get("value")})}getCompareExpression(){return Ds.op(wr.cmp,{value:Ds.get("value"),test:Ds.get("test")})}isValid(e){const{parseAsUTC:t,validateMin:s,validateMax:n}=this.options,r=un(e,t);return!!r&&(!(s&&r.getTime()<s.getTime())&&!(n&&r.getTime()>n.getTime()))}normalize(e){const{parseAsUTC:t,forceMin:s,forceMax:n,forceStartOf:r,forceEndOf:i}=this.options,a=un(e,t);return a?(s&&a.getTime()<s.getTime()&&a.setTime(s.getTime()),n&&a.getTime()>n.getTime()&&a.setTime(n.getTime()),r&&en[r](a),i&&tn[i](a),a):e}newInstance(){return new Ir({})}clone(){return new Ir(J.copy(this.options))}encode(){return Ir.encode(this)}create(){return new Date}random(e){const t=new Date,s=this.getMin(),n=this.getMax(),r=s?s.getTime():t.getTime(),i=n?n.getTime():t.getTime();return new Date(e(r,i,!0))}getMin(){return this.options.validateMin||this.options.forceMin}getMax(){return this.options.validateMax||this.options.forceMax}fromJson(e){return new Date(e)}toJson(e){return e?e.toISOString():null}}Ir.id=Y.Date,Ir.operations=Er,Ir.computeds=Or,Ir.baseType=new Ir({}),Ir.describePriority=6,Ir.registered=!1;const Pr=1;class Cr extends R{static decode(e,t){const s=e[Pr].map(e=>t.getType(e));return new Cr(s)}static encode(e){const t=e.options.map(e=>e.encode());return[this.id,t]}static describe(e,t){return null}static register(){}getOperations(){return this.operations||(this.operations={},this.options.forEach(e=>{const t=e.getOperations();for(const e in t)this.operations[e]=t[e]})),this.operations}forMany(e,t){const s=this.options;for(const e of s){const s=t(e);if(void 0!==s)return s}return e}getId(){return Cr.id}merge(e){}getSubType(e,t,s){for(const n of this.options){const r=n.getSubType(e,t,s);if(r)return r}return null}getSubTypes(e){const t=[];return this.options.forEach(s=>{s.getSubTypes(e).forEach(e=>{t.find(t=>t.key===e.key||t.key instanceof R&&e.key instanceof R&&d(t.key,e.key))||t.push(e)})}),t.sort((e,t)=>{return(e.key instanceof R?1:0)-(t.key instanceof R?1:0)}),t}getExactType(e){return this.forMany(this,t=>t.isValid(e)?t:void 0)}getSimplifiedType(){return 1===this.options.length?this.options[0]:this}getRequired(){return this.isOptional()?new Cr(this.options.map(e=>e.getRequired())):this}isDeepCompatible(e,t){return this.forMany(!1,s=>!!s.isCompatible(e,t)||void 0)}isOptional(){return this.forMany(!0,e=>!!e.isOptional()&&void 0)}isSimple(){return this.forMany(!0,e=>!!e.isSimple()&&void 0)}acceptsOtherTypes(){return!0}traverse(e){return e.enter(this,()=>this.options.map((t,s)=>e.step(s,t,e=>this.options.splice(s,1,e),()=>this.options.splice(s,1))))}getTypeFromStep(e){return this.options[e]||null}setParent(e=null){this.parent=e,this.options.forEach(e=>e.setParent(this))}removeDescribedRestrictions(){this.options.forEach(e=>e.removeDescribedRestrictions())}getCreateExpression(){return this.options[0].getCreateExpression()}getValidateExpression(){return Ds.or(...this.options.map(e=>e.getValidateExpression()))}getCompareExpression(){return Ds.op(ie.cmp,{value:Ds.get("value"),test:Ds.get("test")})}getValueChangeExpression(e,t,s){const r=n(t),i=n(s);if(r&&!i){const e=0===t?this.options[1]:this.options[0],s=this.options[t],n=Ds.cast(s,e);return Ds.if(e.getValidateExpression()).than(Ds.get("value")).else(n)}return!r&&i?e:s===t&&r?Ds.if(Ds.not(this.getValidateExpression())).than(e).else(Ds.get("value")):e}isValid(e){return this.forMany(!1,t=>!!t.isValid(e)||void 0)}normalize(e){return this.forMany(e,t=>t.isValid(e)?t.normalize(e):void 0)}newInstance(){return new Cr([])}clone(){return new Cr(this.options.map(e=>e.clone()))}encode(){return Cr.encode(this)}create(){return this.options.length>0?this.options[0].create():null}random(e){const t=this.options;return t[e(0,t.length,!0)].random(e)}fromJson(e){const t=this.options;for(const s of t){const t=s.normalize(e);if(null!=t)return t}return e}toJson(e){const t=this.options;for(const s of t)if(s.isValid(e))return s.toJson(e);return e}}Cr.id=Y.Many,Cr.operations=new V(Y.Many+Y.Delimiter),Cr.computeds=new F(Y.Many+Y.Delimiter),Cr.baseType=new Cr([ue.baseType]),Cr.describePriority=-1,Cr.registered=!1;const Dr=1,kr=2,Nr=2,Lr=5;class Rr extends R{static decode(e,t){const s=t.getType(e[Dr]),n=e[kr]?t.getType(e[kr]):Re.baseType;return new Rr({key:n,value:s})}static encode(e){const{key:t,value:s}=e.options;return t!==Re.baseType?[this.id,s.encode()]:[this.id,s.encode(),t.encode()]}static describe(e,t){if(!o(e))return null;let s=new ue({}),n=new ue({});for(const[r,i]of e.entries())s=t.merge(s,r),n=t.merge(n,i);return new Rr({key:s,value:n})}static register(){J.addJson({priority:10,fromJson:(e,t)=>{if(c(e)&&r(e.$any)&&"map"===e.$any)return new Map(e.value.map(([e,s])=>[t(e),t(s)]))},toJson:(e,t)=>{if(o(e))return{$any:"map",value:Array.from(e.entries()).map(([e,s])=>[t(e),t(s)])}}}),J.addCopier({priority:10,copy:(e,t,s)=>{if(o(e)){const n=new Map;s(e,n);for(const[s,r]of e.entries())n.set(t(s),t(r));return n}}}),J.addCompare({priority:10,type:"object",compare:(e,t,s)=>{const n=o(e),r=o(t);if(n!==r)return(n?1:0)-(r?1:0);if(o(e)&&o(t)){let n=0,r=0;for(const s of e.keys())t.has(s)||n++;for(const i of t.keys())if(e.has(i)){const a=s(e.get(i),t.get(i));a<0&&n++,a>0&&r++}else r++;return J.getCompare(n,r)}}}),J.addEquals({priority:10,type:"object",equals:(e,t,s)=>{if(o(e)!==o(t))return!1;if(o(e)&&o(t)){if(e.size!==t.size)return!1;for(const[n,r]of e.entries()){if(!t.has(n))return!1;if(!s(r,t.get(n)))return!1}return!0}}})}static forItem(e,t=Re){const s=hi.parse(e),n=hi.parse(t);return new Rr({key:n,value:s})}getId(){return Rr.id}getOperations(){return Rr.operations.map}merge(e){const t=this.options,s=e.options;t.key=hi.merge(t.key,s.key),t.value=hi.merge(t.value,s.value)}getSubType(e,t,s){if(Ue.is(e)&&this.options.key.isValid(e.value))return this.options.value;let n=e.getType(t,s);return n&&d(n=n.getRequired(),this.options.key)?this.options.value:null}getSubTypes(e){return[{key:this.options.key,value:this.options.value}]}getExactType(e){return this}getSimplifiedType(){return this}isDeepCompatible(e,t){return e instanceof Rr&&this.options.key.isCompatible(e.options.key,t)&&this.options.value.isCompatible(e.options.value,t)}isOptional(){return!1}isSimple(){return!1}traverse(e){return e.enter(this,()=>{e.step(Rr.STEP_KEY,this.options.key,e=>this.options.key=e),e.step(Rr.STEP_VALUE,this.options.value,e=>this.options.value=e)})}getTypeFromStep(e){return e===Rr.STEP_KEY?this.options.key:e===Rr.STEP_VALUE?this.options.value:null}setParent(e=null){this.parent=e,this.options.key.setParent(this),this.options.value.setParent(this)}removeDescribedRestrictions(){this.options.key.removeDescribedRestrictions(),this.options.value.removeDescribedRestrictions()}getCreateExpression(){return Ds.op(_e.create,{})}getValidateExpression(){return Ds.and(Ds.op(_e.isValid,{value:Ds.get("value")}),Ds.not(Ds.op(fs.contains,{list:Ds.op(_e.values,{map:Ds.get("value")}),item:Ds.null(),isEqual:Ds.not(this.options.value.getValidateExpression())},{value:"ignore",test:"value"})),Ds.not(Ds.op(fs.contains,{list:Ds.op(_e.keys,{map:Ds.get("value")}),item:Ds.null(),isEqual:Ds.not(this.options.key.getValidateExpression())},{value:"ignore",test:"value"})))}getCompareExpression(){return Ds.op(_e.cmp,{value:Ds.get("value"),test:Ds.get("test"),compare:this.options.value.getValidateExpression()})}getValueChangeExpression(e,t,s){return t===Rr.STEP_KEY?Ds.op(_e.map,{map:Ds.get("value"),transformKey:e},{key:"value",value:"actualValue"}):Ds.op(_e.map,{map:Ds.get("value"),transform:e})}isValid(e){if(e instanceof Map||c(e)){const{key:t,value:s}=this.options;return this.iterate(e,!0,(e,n)=>{if(!t.isValid(e)||!s.isValid(n))return!1})}return!1}normalize(e){const{key:t,value:s}=this.options,n=[];return this.iterate(e,void 0,(e,r)=>{n.push([t.normalize(e),s.normalize(r)])}),new Map(n)}iterate(e,t,s){if(e instanceof Map)for(const[t,n]of e.entries()){const e=s(t,n);if(void 0!==e)return e}else if(c(e))for(const t of e){const n=s(t,e[t]);if(void 0!==n)return n}return t}newInstance(){const{key:e,value:t}=this.options;return new Rr({key:e.newInstance(),value:t.newInstance()})}clone(){const{key:e,value:t}=this.options;return new Rr({key:e.clone(),value:t.clone()})}encode(){return Rr.encode(this)}create(){return new Map}random(e){const{key:t,value:s}=this.options,n=e(Nr,Lr+1,!0),r=new Map;for(let i=0;i<n;i++){const n=t.random(e),i=s.random(e);r.set(n,i)}return r}fromJson(e){const{key:t,value:s}=this.options;return new Map(e.map(([e,n])=>[t.fromJson(e),s.fromJson(n)]))}toJson(e){const{key:t,value:s}=this.options;return Array.from(e.entries()).map(([e,n])=>[t.toJson(e),s.toJson(n)])}}Rr.STEP_KEY="key",Rr.STEP_VALUE="value",Rr.id=Y.Map,Rr.operations=Ae,Rr.computeds=je,Rr.baseType=new Rr({key:Re.baseType,value:ue.baseType}),Rr.describePriority=7,Rr.registered=!1;const Ar=1,jr=.3;class qr extends R{static decode(e,t){const s=t.getType(e[Ar]);return new qr(s)}static encode(e){return[this.id,e.options.encode()]}static describe(e,t){return null}static register(){}static for(e){return new qr(hi.parse(e))}getOperations(){return this.options.getOperations()}getId(){return qr.id}merge(e){}getSubType(e,t,s){return this.options.getSubType(e,t,s)}getSubTypes(e){return this.options.getSubTypes(e)}getExactType(e){return this.options.getExactType(e)}getSimplifiedType(){return this}getRequired(){return this.options}isDeepCompatible(e,t){return e instanceof qr?this.options.isCompatible(e.options,t):this.options.isCompatible(e,t)}isOptional(){return!0}isSimple(){return this.options.isSimple()}acceptsOtherTypes(){return!0}traverse(e){return e.enter(this,()=>e.step(qr.STEP_OPTIONAL,this.options,e=>this.options=e))}getTypeFromStep(e){return e===qr.STEP_OPTIONAL?this.options:null}setParent(e=null){this.parent=e,this.options.setParent(this)}removeDescribedRestrictions(){this.options.removeDescribedRestrictions()}getCreateExpression(){return this.options.getCreateExpression()}getValidateExpression(){return Ds.or(Ds.op(ie.isEqual,{value:Ds.get("value"),test:Ds.undefined()}),this.options.getValidateExpression())}getCompareExpression(){return Ds.define({valueMissing:Ds.op(ie.isEqual,{value:Ds.get("value"),test:Ds.undefined()}),testMissing:Ds.op(ie.isEqual,{value:Ds.get("test"),test:Ds.undefined()})},Ds.if(Ds.and(Ds.get("valueMissing"),Ds.get("testMissing"))).than(Ds.compareEqual()).if(Ds.get("valueMissing")).than(Ds.compareLess()).if(Ds.get("testMissing")).than(Ds.compareGreater()).else(this.options.getCompareExpression()))}getValueChangeExpression(e,t,s){return Ds.if(this.options.getValidateExpression()).than(e).else(Ds.get("value"))}isValid(e){return null==e||this.options.isValid(e)}normalize(e){return null==e?e:this.options.normalize(e)}newInstance(){return new qr(this.options.newInstance())}clone(){return new qr(this.options.clone())}encode(){return qr.encode(this)}create(){return this.options?this.options.create():void 0}random(e){return this.options&&e(0,1,!1)>jr?this.options.random(e):void 0}fromJson(e){return null==e?void 0:this.options.fromJson(e)}toJson(e){return null==e?void 0:this.options.toJson(e)}}qr.STEP_OPTIONAL="optional",qr.id=Y.Optional,qr.operations=new V(Y.Optional+Y.Delimiter),qr.computeds=new F(Y.Optional+Y.Delimiter),qr.baseType=new qr(ue.baseType),qr.describePriority=-1,qr.registered=!1;const _r=1;class Vr extends R{static decode(e,t){const s=e[_r].map(e=>t.getType(e));return new Vr(s)}static encode(e){const t=e.options.map(e=>e.encode());return[this.id,t]}static describe(e,t){return null}static register(){}getOperations(){return{}}forNot(e,t){const s=this.options;for(const e of s){const s=t(e);if(void 0!==s)return s}return e}getId(){return Vr.id}merge(e){}getSubType(e,t,s){return null}getSubTypes(e){return[]}getExactType(e){return this}getSimplifiedType(){return this}isDeepCompatible(e,t){return this.forNot(!0,s=>!s.isCompatible(e,t)&&void 0)}acceptsOtherTypes(){return!0}isOptional(){return!0}isSimple(){return!1}traverse(e){return e.enter(this,()=>this.options.map((t,s)=>e.step(s,t,e=>this.options.splice(s,1,e),()=>this.options.splice(s,1))))}getTypeFromStep(e){return this.options[e]||null}setParent(e=null){this.parent=e,this.options.forEach(e=>e.setParent(this))}removeDescribedRestrictions(){this.options.forEach(e=>e.removeDescribedRestrictions())}getCreateExpression(){return oe.instance}getValidateExpression(){return oe.instance}getCompareExpression(){return oe.instance}isValid(e){return this.forNot(!0,t=>!t.isValid(e)&&void 0)}normalize(e){return this.forNot(e,t=>t.isValid(e)?null:void 0)}newInstance(){return new Vr([])}clone(){return new Vr(this.options.map(e=>e.clone()))}encode(){return Vr.encode(this)}create(){return null}random(e){return null}fromJson(e){return ue.baseType.fromJson(e)}toJson(e){return ue.baseType.toJson(e)}}Vr.id=Y.Not,Vr.operations=new V(Y.Not+Y.Delimiter),Vr.computeds=new F(Y.Not+Y.Delimiter),Vr.baseType=new Vr([ue.baseType]),Vr.describePriority=-1,Vr.registered=!1;const Fr=new V(Y.Color+Y.Delimiter),Yr=new F(Y.Color+Y.Delimiter),Gr=Fr,Br={create:Gr.set("create",{}),maybe:Gr.set("maybe",{},["value"]),cmp:Gr.set("cmp",{},["value","test"]),copy:Gr.set("copy",{},["value"]),build:Gr.set("build",{},["r","g","b"],["a"]),map:Gr.set("map",{},["value","r","g","b"],["a"],["value","component"],["r","g","b","a"]),op:Gr.set("op",{},["value","test","r","g","b"],["a"],["value","test","component"],["r","g","b","a"]),clamp:Gr.set("clamp",{},["value"]),add:Gr.set("+",{},["value","addend"],["alpha"]),adds:Gr.set("+*",{},["value","addend","addendScale"],["alpha"]),sub:Gr.set("-",{},["value","subtrahend"],["alpha"]),mul:Gr.set("*",{},["value","multiplier"],["alpha"]),div:Gr.set("/",{},["value","divisor"],["alpha"]),mod:Gr.set("%",{},["value","divisor"],["alpha"]),format:Gr.set("format",{},["value","format"]),parse:Gr.set("parse",{},["value"]),lerp:Gr.set("lerp",{},["start","end","delta"]),lighten:Gr.set("lighten",{},["value","amount"]),darken:Gr.set("darken",{},["value","amount"]),toHSL:Gr.set("->hsl",{},["value"]),fromHSL:Gr.set("<-hsl",{},["value"]),luminance:Gr.set("luminance",{},["value"]),contrast:Gr.set("contrast",{},["value","test"]),invert:Gr.set("invert",{},["value"],["alpha"]),opaque:Gr.set("opaque",{},["value"]),alpha:Gr.set("alpha",{},["value","alpha"]),distance:Gr.set("distance",{},["value","test"]),named:Gr.set("named",{},["name"]),getName:Gr.set("getName",{},["value"]),blend:Gr.set("blend",{},["top","bottom","mode"]),isValid:Gr.set("?",{},["value"]),isEqual:Gr.set("=",{},["value","test"],["epsilon"]),isNotEqual:Gr.set("!=",{},["value","test"],["epsilon"]),isLess:Gr.set("<",{},["value","test"]),isLessOrEqual:Gr.set("<=",{},["value","test"]),isGreater:Gr.set(">",{},["value","test"]),isGreaterOrEqual:Gr.set(">=",{},["value","test"]),asAny:Gr.set("~"+Y.Any,{},["value"]),asBoolean:Gr.set("~"+Y.Boolean,{},["value"]),asColor:Gr.set("~"+Y.Color,{},["value"]),asDate:Gr.set("~"+Y.Date,{},["value"]),asList:Gr.set("~"+Y.List,{},["value"]),asMap:Gr.set("~"+Y.Map,{},["value"]),asNumber:Gr.set("~"+Y.Number,{},["value"]),asObject:Gr.set("~"+Y.Object,{},["value"]),asText:Gr.set("~"+Y.Text,{},["value"]),asTuple:Gr.set("~"+Y.Tuple,{},["value"]),asSet:Gr.set("~"+Y.Set,{},["value"])};Yr.set("toHSL",Br.toHSL),Yr.set("luminance",Br.luminance),Yr.set("inverted",Br.invert),Yr.set("opaque",Br.opaque),Yr.set("name",Br.getName);const Ur=0,Wr=255;function Hr(e){return c(e)&&n(e.r)&&n(e.g)&&n(e.b)}function Jr(e){return g(Math.round(e),Ur,Wr)}class Kr{constructor(e,t){this.code=e,this.name=t,this.formatMap={},this.formats=[]}setType(e){return this.type=e,this}setToColor(e){return this.toColor=e,this}setFromColor(e){return this.fromColor=e,this}addFormat(e){return this.formatMap[e.code]=e,this.formats.push(e),this}}const zr=new Kr("rgb","RGB").setToColor(e=>e).setFromColor(e=>e).addFormat({code:"default",name:"Default",parser:e=>Hr(e)?e:null,formatter:e=>e}).addFormat({code:"bestfit",name:"Best Fit",parser:e=>null,formatter:e=>{if(e.a===Wr){return"#"+$r(e.r)+$r(e.g)+$r(e.b)}return"rgba("+Jr(e.r)+","+Jr(e.g)+","+Jr(e.b)+","+Jr(e.a)/Wr+")"}}).addFormat({code:"hexShort",name:"Hex (#rgb)",parser:e=>{if(!r(e))return null;const t=/^#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(e);if(!t)return null;const[,s,n,i]=t;return{r:parseInt(s+s,16),g:parseInt(n+n,16),b:parseInt(i+i,16),a:Wr}},formatter:e=>{return"#"+$r(e.r).substring(0,1)+$r(e.g).substring(0,1)+$r(e.b).substring(0,1)}}).addFormat({code:"hex",name:"Hex (#rrggbb)",parser:e=>{if(!r(e))return null;const t=/^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i.exec(e);if(!t)return null;const[,s,n,i]=t;return{r:parseInt(s,16),g:parseInt(n,16),b:parseInt(i,16),a:Wr}},formatter:e=>{return"#"+$r(e.r)+$r(e.g)+$r(e.b)}}).addFormat({code:"hexLong",name:"Hex (#rrggbbaa)",parser:e=>{if(!r(e))return null;const t=/^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i.exec(e);if(!t)return null;const[,s,n,i,a]=t;return{r:parseInt(s,16),g:parseInt(n,16),b:parseInt(i,16),a:parseInt(a,16)}},formatter:e=>{return"#"+$r(e.r)+$r(e.g)+$r(e.b)+$r(e.a)}}).addFormat({code:"rgb",name:"rgb(r, g, b)",parser:e=>{if(!r(e))return null;const t=/^rgb\(\s*(\d{1,3}%?)\s*,\s*(\d{1,3}%?)\s*,\s*(\d{1,3}%?)\s*\)$/i.exec(e);if(!t)return null;const[,s,n,i]=t;return{r:Xr(s),g:Xr(n),b:Xr(i),a:Wr}},formatter:e=>{return"rgb("+Jr(e.r)+","+Jr(e.g)+","+Jr(e.b)+")"}}).addFormat({code:"rgba",name:"rgba(r, g, b, a)",parser:e=>{if(!r(e))return null;const t=/^rgb\(\s*(\d{1,3}%?)\s*,\s*(\d{1,3}%?)\s*,\s*(\d{1,3}%?)\s*,\s*([01]?\.?[0-9]*)\s*\)$/i.exec(e);if(!t)return null;const[,s,n,i,a]=t;return{r:Xr(s),g:Xr(n),b:Xr(i),a:Jr(Math.floor(parseFloat(a)*Wr))}},formatter:e=>{return"rgba("+Jr(e.r)+","+Jr(e.g)+","+Jr(e.b)+","+Jr(e.a)/Wr+")"}});function Xr(e){return-1===e.indexOf("%")?Jr(parseInt(e,10)):Jr(2.55*parseInt(e.substring(0,e.length-1),10))}function $r(e){return C(Jr(e).toString(16),2,"0",!0)}function Qr(e){return c(e)&&n(e.h)&&n(e.s)&&n(e.l)}const Zr=new Kr("hsl","HSL").setType(new dt({props:{h:new Rs({min:0,max:360,whole:!0}),s:new Rs({min:0,max:100,whole:!0}),l:new Rs({min:0,max:100,whole:!0}),a:new Rs({min:0,max:255,whole:!0})}})).setToColor(e=>{const t=ei(e.h),s=ti(e.l)/100,n=ti(e.s)/100,r=(1-Math.abs(2*s-1))*n,i=r*(1-Math.abs(t/60%2-1)),a=s-r/2,o=t>=240?0:t>=60&&t<180?r:i,u=t<=120?0:t>=180&&t<300?r:i;return{r:Jr(((t<60||t>=300?r:t>=120&&t<240?0:i)+a)*Wr),g:Jr((o+a)*Wr),b:Jr((u+a)*Wr),a:e.a}}).setFromColor(e=>{const t=Jr(e.r),s=Jr(e.g),n=Jr(e.b),r=t/Wr,i=s/Wr,a=n/Wr,o=Math.max(r,i,a),u=Math.min(r,i,a),p=o-u,l=(o+u)/2,c=0===p?0:o===r?(i-a)/p%6:o===i?(a-r)/p+2:(r-i)/p+4,h=0===p?0:p/(1-Math.abs(2*l-1));return{h:ei(Math.round(60*c)),s:ti(Math.round(100*h)),l:ti(Math.round(100*l)),a:e.a}}).addFormat({code:"hsl",name:"HSL",parser:e=>{if(!r(e))return null;const t=/^hsl\(\s*(\d{1,3})\s*,\s*(\d{1,3})%\s*,\s*(\d{1,3})%\s*\)$/i.exec(e);if(!t)return null;const[,s,n,i]=t;return{h:ei(parseInt(s,10)),s:ti(parseInt(n,10)),l:ti(parseInt(i,10)),a:Wr}},formatter:e=>{return"hsl("+ei(Math.round(e.h))+","+ti(Math.round(e.s))+"%,"+ti(Math.round(e.l))+"%)"}}).addFormat({code:"hsla",name:"HSLA",parser:e=>{if(!r(e))return null;const t=/^hsl\(\s*(\d{1,3})\s*,\s*(\d{1,3})%\s*,\s*(\d{1,3})%\s*,\s*([01]?\.?[0-9]*)\s*\)$/i.exec(e);if(!t)return null;const[,s,n,i,a]=t;return{h:ei(parseInt(s,10)),s:ti(parseInt(n,10)),l:ti(parseInt(i,10)),a:Jr(Math.floor(parseFloat(a)*Wr))}},formatter:e=>{return"hsla("+ei(Math.round(e.h))+","+ti(Math.round(e.s))+"%,"+ti(Math.round(e.l))+"%,"+Jr(e.a)/Wr+")"}});function ei(e){return e<0?360-Math.abs(e%360):e%360}function ti(e){return g(e,0,100)}const si=1;class ni extends dt{constructor(e={}){super(Object.assign(Object.assign({},e),{props:ni.componentProps}))}static decode(e){return new ni(e[si]||{})}static encode(e){return e.options.hasAlpha?[this.id,{hasAlpha:!0}]:this.id}static describe(e){const t=ni.baseType.normalize(e);return t?new ni({hasAlpha:t.a!==Wr}):null}static register(){}static getFormat(e){const[t,s]=e.split(":"),n=this.spaces.find(e=>e.code===t);return n?n.formatMap[s]:void 0}getId(){return ni.id}getOperations(){return ni.operations.map}merge(e){const t=this.options,s=e.options;t.hasAlpha=t.hasAlpha||s.hasAlpha}isDeepCompatible(e,t){return e instanceof ni||!(t.strict||t.exact||!(e instanceof dt)||!e.isCompatible(this))}isOptional(){return!1}isSimple(){return!0}removeDescribedRestrictions(){super.removeDescribedRestrictions(),delete this.options.hasAlpha}getCreateExpression(){return Ds.op(Br.create,{})}getValidateExpression(){return Ds.op(Br.isValid,{value:Ds.get("value")})}getCompareExpression(){return Ds.op(Br.cmp,{value:Ds.get("value"),test:Ds.get("test")})}isValid(e){return void 0!==this.normalize(e)}normalize(e){for(const t of ni.spaces)for(const s of t.formats){const n=s.parser(e);if(null!==n)return t.toColor(n)}}newInstance(){return new ni({})}clone(){return new ni({hasAlpha:this.options.hasAlpha})}encode(){return ni.encode(this)}create(){return{r:0,g:0,b:0,a:0}}random(e){return{r:e(Ur,Wr,!0),g:e(Ur,Wr,!0),b:e(Ur,Wr,!0),a:Wr}}fromJson(e){return{r:e.r,g:e.g,b:e.b,a:e.a}}toJson(e){return e?{r:e.r,g:e.g,b:e.b,a:e.a}:null}}ni.componentType=new Rs({min:Ur,max:Wr,whole:!0}),ni.componentProps={r:ni.componentType,g:ni.componentType,b:ni.componentType,a:ni.componentType},ni.spaces=[zr,Zr],ni.id=Y.Color,ni.operations=Fr,ni.computeds=Yr,ni.baseType=new ni({hasAlpha:!0}),ni.describePriority=7,ni.registered=!1,zr.setType(ni.baseType);const ri=new V(Y.Set+Y.Delimiter),ii=new F(Y.Set+Y.Delimiter),ai=ri,oi={create:ai.set("create"),createLike:ai.set("createLike",{},["set"],[],[],[],["set"]),createFor:ai.set("createFor",{},["value"],[],[],[],["value"]),maybe:ai.set("maybe",{},["value"]),add:ai.set("add",{mutates:["set"]},["set","value"],[],[],[],["set"]),has:ai.set("has",{},["set","value"]),delete:ai.set("delete",{mutates:["set"]},["set","value"]),values:ai.set("values",{complexity:1},["set"],[],[],[],["set"]),clear:ai.set("clear",{mutates:["set"]},["set"],[],[],[],["set"]),count:ai.set("count",{},["set"]),cmp:ai.set("cmp",{complexity:1},["value","test"]),copy:ai.set("copy",{complexity:1},["set"],["deepCopy"],["set","value"],["deepCopy"],["set"]),map:ai.set("map",{complexity:1},["set"],["transform"],["set","value"],["transform"],["set"]),isValid:ai.set("?",{},["value"]),isEqual:ai.set("=",{complexity:1},["value","test"]),isNotEqual:ai.set("!=",{complexity:1},["value","test"]),isLess:ai.set("<",{complexity:1},["value","test"]),isLessOrEqual:ai.set("<=",{complexity:1},["value","test"]),isGreater:ai.set(">",{complexity:1},["value","test"]),isGreaterOrEqual:ai.set(">=",{complexity:1},["value","test"]),asAny:ai.set("~"+Y.Any,{},["value"]),asBoolean:ai.set("~"+Y.Boolean,{},["value"]),asColor:ai.set("~"+Y.Color,{},["value"]),asDate:ai.set("~"+Y.Date,{},["value"]),asList:ai.set("~"+Y.List,{},["value"]),asMap:ai.set("~"+Y.Map,{},["value"]),asNumber:ai.set("~"+Y.Number,{},["value"]),asObject:ai.set("~"+Y.Object,{},["value"]),asText:ai.set("~"+Y.Text,{},["value"]),asTuple:ai.set("~"+Y.Tuple,{},["value"]),asSet:ai.set("~"+Y.Set,{},["value"])};ii.set("copy",oi.copy),ii.set("values",oi.values),ii.set("count",oi.count);const ui=1,pi=2,li=5;class ci extends R{static decode(e,t){const s=t.getType(e[ui]);return new ci({value:s})}static encode(e){const{value:t}=e.options;return[this.id,t.encode()]}static describe(e,t){if(!u(e))return null;let s=new ue({});for(const[n]of e.entries())s=t.merge(s,n);return new ci({value:s})}static register(){J.addJson({priority:11,fromJson:(e,t)=>{if(c(e)&&r(e.$any)&&"set"===e.$any)return new Set(e.value.map(t))},toJson:(e,t)=>{if(u(e))return{$any:"set",value:Array.from(e.entries()).map(t)}}}),J.addCopier({priority:11,copy:(e,t,s)=>{if(u(e)){const n=new Set;s(e,n);for(const[s]of e.entries())n.add(t(s));return n}}}),J.addCompare({priority:11,type:"object",compare:(e,t,s)=>{const n=u(e),r=u(t);if(n!==r)return(n?1:0)-(r?1:0);if(u(e)&&u(t)){let n=e.size-t.size;if(0===n){let r=0,i=0;const a=Array.from(e),o=Array.from(t);for(let e=0;e<a.length;e++){const t=s(a[e],o[e]);t<0&&r++,t>0&&i++}n=J.getCompare(r,i)}return n}}}),J.addEquals({priority:11,type:"object",equals:(e,t,s)=>{if(u(e)!==u(t))return!1;if(u(e)&&u(t)){if(e.size!==t.size)return!1;for(const s of e)if(!t.has(s))return!1;return!0}}})}static forItem(e){const t=hi.parse(e);return new ci({value:t})}getId(){return ci.id}getOperations(){return ci.operations.map}merge(e){const t=this.options,s=e.options;t.value=hi.merge(t.value,s.value)}getSubType(e,t,s){return null}getSubTypes(e){return[]}getExactType(e){return this}getSimplifiedType(){return this}isDeepCompatible(e,t){return e instanceof ci&&this.options.value.isCompatible(e.options.value,t)}isOptional(){return!1}isSimple(){return!1}traverse(e){return e.enter(this,()=>{e.step(ci.STEP_VALUE,this.options.value,e=>this.options.value=e)})}getTypeFromStep(e){return e===ci.STEP_VALUE?this.options.value:null}setParent(e=null){this.parent=e,this.options.value.setParent(this)}removeDescribedRestrictions(){this.options.value.removeDescribedRestrictions()}getCreateExpression(){return Ds.op(oi.create,{})}getValidateExpression(){return Ds.and(Ds.op(oi.isValid,{value:Ds.get("value")}),Ds.not(Ds.op(fs.contains,{list:Ds.op(oi.values,{set:Ds.get("value")}),item:Ds.null(),isEqual:Ds.not(this.options.value.getValidateExpression())},{value:"ignore",test:"value"})))}getCompareExpression(){return Ds.op(oi.cmp,{value:Ds.get("value"),test:Ds.get("test")})}getValueChangeExpression(e,t,s){return Ds.op(oi.map,{set:Ds.get("value"),transform:e},{value:"value"})}isValid(e){if(e instanceof Set||i(e)){const{value:t}=this.options;return!Array.from(e).some(e=>!t.isValid(e))}return!1}normalize(e){const{value:t}=this.options;return new Set(Array.from(e).map(e=>t.normalize(e)))}newInstance(){const{value:e}=this.options;return new ci({value:e.newInstance()})}clone(){const{value:e}=this.options;return new ci({value:e.clone()})}encode(){return ci.encode(this)}create(){return new Set}random(e){const{value:t}=this.options,s=e(pi,li+1,!0),n=new Set;for(let r=0;r<s;r++){const s=t.random(e);n.add(s)}return n}fromJson(e){const{value:t}=this.options;return new Set(e.map(e=>t.fromJson(e)))}toJson(e){const{value:t}=this.options;return Array.from(e.entries()).map(e=>t.toJson(e))}}ci.STEP_VALUE="value",ci.id=Y.Set,ci.operations=ri,ci.computeds=ii,ci.baseType=new ci({value:ue.baseType}),ci.describePriority=7,ci.registered=!1;class hi{static setParent(e,t=!1){return(this.autoSetParent||t)&&e.setParent(),e}static any(){return new ue({})}static bool(e,t){return new X({true:e,false:t})}static date(e={}){return new Ir(e)}static enum(e,t=Re,s=new Map([])){return this.setParent(new Ge({value:this.parse(e),key:this.parse(t),constants:f(s)}))}static enumForText(e){return this.setParent(new Ge({value:this.text(),key:this.text(),constants:o(e)?e:i(e[0])?new Map(e):new Map(e.map(e=>[e,e]))}))}static list(e,t,s){return this.setParent(new Os({item:this.parse(e),min:t,max:s}))}static many(...e){return this.setParent(new Cr(i(e[0])?e[0].map(e=>this.parse(e)):e.map(e=>this.parse(e))))}static not(...e){return this.setParent(new Vr(i(e[0])?e[0].map(e=>this.parse(e)):e.map(e=>this.parse(e))))}static map(e,t=Re){return this.setParent(new Rr({key:this.parse(t),value:this.parse(e)}))}static null(){return ae.baseType}static number(e,t,s){return new Rs({min:e,max:t,whole:s})}static int(e,t){return new Rs({min:e,max:t,whole:!0})}static index(e){return new Rs({min:0,max:e,whole:!0})}static char(){return new Re({min:1,max:1})}static object(e={}){return this.setParent(new dt({props:this.resolve(e)}))}static optional(e){const t=this.parse(e);return this.setParent(t.isOptional()?t:new qr(t))}static color(e={}){return this.setParent(new ni(e))}static set(e){return this.setParent(new ci({value:this.parse(e)}))}static text(e={}){return new Re(e)}static tuple(...e){return this.setParent(new ws(i(e[0])?e[0].map(e=>this.parse(e)):e.map(e=>this.parse(e))))}static parse(e){return e instanceof R?e:e.baseType.newInstance()}static simplify(e){return e?e.getSimplifiedType():null}static resolve(e){let t;return e&&(e instanceof R?t=e:e.baseType instanceof R?t=e.baseType.newInstance():i(e)?t=e.map(e=>this.resolve(e)):c(e)&&(t=x(e,e=>this.resolve(e)))),t}static reduce(e){return 1===e.length?e[0]:new Cr(e)}static explode(e){return e instanceof Cr?e.options:[e]}static maybe(e,t){if(e instanceof t)return e;if(e instanceof qr&&e.options instanceof t)return e;if(e instanceof Cr){const s=e.options.find(e=>e instanceof t);if(s)return this.optional(s);const n=e.options.find(e=>e instanceof qr&&e.options instanceof t);if(n)return n}return this.optional(t)}static mergeMany(e,t=null){if(0===e.length)return t;if(e.find(e=>e instanceof ue))return ue.baseType;return e.map(e=>e?e.clone():null).reduce((e,t)=>e&&t?this.merge(e,t):e||t)}static merge(e,t){if(e instanceof ue)return t;const s=e instanceof qr||t instanceof qr,n=e.getRequired(),r=t.getRequired();if(d(n,r))return n.merge(r),s?this.optional(n):n;if(n instanceof Cr||r instanceof Cr){const e=this.explode(n),t=this.explode(r),i=e.length;for(const s of t){let t=!1;const n=s instanceof qr,r=n?s.options:s;for(let s=0;s<i;s++){const i=e[s],a=i instanceof qr,o=a?i.options:i;d(o,r)&&(t=!0,o.merge(r),n&&!a&&(e[s]=this.optional(o)))}t||e.push(s)}return s?this.optional(this.reduce(e)):this.reduce(e)}return this.many(e,t)}}hi.INDEX=hi.index(),hi.LENGTH=hi.index(),hi.CHAR=hi.char(),hi.autoSetParent=!0;class di{constructor(e){this.value=e,this.next=this.prev=this}isEmpty(){return this.next===this}clear(){this.next=this.prev=this}addLast(e){const t=new di(e);return t.linkAfter(this.prev),t}addFirst(e){const t=new di(e);return t.linkAfter(this),t}each(e){const t=this;let s=this.next,n=0;for(;s!==t;){const t=s.next;e(s.value,n,s),s=t,n++}return n}isRemoved(){return this.next===this}remove(){this.isRemoved()||(this.next.prev=this.prev,this.prev.next=this.next,this.next=this.prev=this)}linkAfter(e){this.remove(),this.next=e.next,this.prev=e,e.next.prev=this,e.next=this}}class mi{constructor(){this.listeners=Object.create(null)}trigger(e,...t){const s=this.getListeners(e,!1),n=[];return s&&s.each(s=>n.push(s(e,...t))),n}hasListeners(e){return null!==this.getListeners(e)}getListeners(e,t=!0){let s=this.listeners[e];return!s&&t&&(s=this.listeners[e]=new di(()=>void 0)),s||null}on(e,t){const s=(i(e)?e:[e]).map(e=>this.getListeners(e,!0).addLast(t));return()=>s.forEach(e=>e.remove())}once(e,t){const s=this.on(e,(e,...n)=>(s(),t(e,...n)));return s}off(e,t){if(e)if(Array.isArray(e))e.forEach(e=>this.off(e,t));else{const s=this.listeners[e];s&&(t?s.each((e,s,n)=>{e===t&&n.remove()}):s.clear())}else this.listeners=Object.create(null);return this}}class yi extends mi{constructor(e,t){super(),this.name=e.name,this.description=e.description,this.meta=e.meta,this.params=t.getTypeKind(e.params,dt,hi.object()),this.expression=t.getExpression(e.expression),this.defaults=this.params.fromJson(e.defaults),this.tests=e.tests.map(e=>Object.assign(Object.assign({},e),{args:this.params.fromJson(e.args)}))}static create(e,t={}){return new yi(Object.assign({name:"",description:"",meta:null,params:hi.object(),expression:Ds.noop(),defaults:{},tests:[]},t),e)}sync(e,t){this.hasChanges(e)&&(this.name=e.name,this.description=e.description,this.meta=e.meta,this.params=e instanceof yi?e.params:t.getTypeKind(e.params,dt,hi.object()),this.expression=e instanceof yi?e.expression:t.getExpression(e.expression),this.defaults=e instanceof yi?e.defaults:this.params.fromJson(e.defaults),T(this.tests,e instanceof yi?e.tests:e.tests.map(e=>Object.assign(Object.assign({},e),{args:this.params.fromJson(e.args)})),(e,t)=>e.name===t.name||J.equals(e.args,t.args),(e,t)=>this.addTest(t,!0),(e,t)=>this.removeTest(t,!0),(e,t,s,n)=>this.updateTest(s,n,!0)),this.trigger("sync",this,e,t),this.changed())}hasChanges(e){return!J.equals(e instanceof yi?e.encode():e,this.encode())}changed(){this.trigger("changed",this)}encode(){const{name:e,description:t,meta:s,params:n,expression:r,defaults:i,tests:a}=this;return{name:e,description:t,meta:s,params:n.encode(),expression:r.encode(),defaults:n.toJson(i),tests:a.map(e=>Object.assign(Object.assign({},e),{args:n.toJson(e.args)}))}}renameParameter(e,t){const s=this.params.options.props[e];return s&&(this.params.options.props[t]=s,delete this.params.options.props[e],e in this.defaults&&(this.defaults[t]=this.defaults[e],delete this.defaults[e]),this.trigger("renameParameter",this,t,e),this.changed()),!!s}removeParameter(e){const t=e in this.params.options.props[e];return t&&(delete this.params.options.props[e],delete this.defaults[e],this.trigger("removeParameter",this,e),this.changed()),t}addTest(e,t=!1){this.tests.push(e),this.trigger("addTest",this,e),t||this.changed()}updateTest(e,t,s=!1){const r=n(e)?this.tests[e]:e,i=!!r;return i&&(Object.assign(r,t),this.trigger("updateTest",this,r),s||this.changed()),i}removeTest(e,t=!1){const s=n(e)?e:this.tests.indexOf(e),r=s>=0&&s<this.tests.length;if(r){const e=this.tests[s];this.trigger("removeTest",this,e),t||this.changed()}return r}getReturnType(e,t={}){const s=hi.object(Object.assign(Object.assign({},this.params.options.props),t));return this.expression.getType(e,s)}getParamTypes(){return y(this.defaults)?this.params:hi.object(x(this.params.options.props,(e,t)=>this.getParamType(t)))}getParamType(e){const t=this.params.options.props[e];return t.isOptional()&&e in this.defaults&&t.isValid(this.defaults[e])?t.getRequired():t}getArguments(e,t=!0){const s=t?Object.assign({},e):e;for(const e in this.defaults){this.params.options.props[e].getRequired().isValid(s[e])||(s[e]=J.copy(this.defaults[e]))}return s}refactor(e,t){const s=t.getCommand(e);this.tests.forEach(e=>{e.args=s({value:e.args})}),this.changed()}}var gi,fi,vi,Ti;!function(e){e[e.PRIMARY=0]="PRIMARY",e[e.FOREIGN=1]="FOREIGN",e[e.NONE=2]="NONE"}(gi||(gi={})),function(e){e[e.GIVEN=0]="GIVEN",e[e.AUTO_INCREMENT=1]="AUTO_INCREMENT",e[e.UUID=2]="UUID"}(fi||(fi={}));class bi extends mi{constructor(e,t){super(),this.name=e.name,this.description=e.description,this.meta=e.meta,this.type=t.getTypeKind(e.type,dt,hi.object()),this.instances=e.instances&&e.instances.length?e.instances.map(e=>this.type.fromJson(e)):[],this.methods=this.decodeMethods(t,e.methods),this.transcoders=this.decodeTranscoders(t,e.transcoders),this.indexes=this.decodeIndexes(e.indexes),this.primaryType=n(e.primaryType)?e.primaryType:fi.AUTO_INCREMENT,this.key=e.key?t.getExpression(e.key):this.getPrimaryKeyExpression(),this.keyType=this.key.getType(t,this.getKeyContext()),this.describe=e.describe?t.getExpression(e.describe):Ds.noop()}static create(e,t={}){return new bi(Object.assign({name:"",description:"",meta:null,type:hi.object(),instances:[],methods:Object.create(null)},t),e)}static uuid(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,e=>{const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)})}sync(e,t){this.hasChanges(e)&&(this.name=e.name,this.description=e.description,this.meta=e.meta,this.type=t.getTypeKind(e.type,dt,hi.object()),this.instances=e instanceof bi?e.instances:e.instances&&e.instances.length?e.instances.map(e=>this.type.fromJson(e)):[],b(this.methods,this.decodeMethods(t,e.methods),(e,t,s)=>this.addMethod(s,!0),(e,t)=>this.removeMethod(t,!0),(e,s,n,r)=>n.sync(r,t)),b(this.transcoders,this.decodeTranscoders(t,e.transcoders),(e,s,n)=>this.addTranscoder(t,s,n,!0),(e,t)=>this.removeTranscoder(t,!0),(e,s,n,r)=>this.addTranscoder(t,s,r,!0)),b(this.indexes,this.decodeIndexes(e.indexes),(e,t,s)=>this.addIndex(t,s,!0),(e,t)=>this.removeIndex(t,!0),(e,t,s,n)=>this.addIndex(t,n,!0)),this.primaryType=n(e.primaryType)?e.primaryType:fi.AUTO_INCREMENT,this.key=e.key?t.getExpression(e.key):this.getPrimaryKeyExpression(),this.keyType=this.key.getType(t,this.getKeyContext()),this.describe=e.describe?t.getExpression(e.describe):Ds.noop(),this.trigger("sync",this,e,t),this.trigger("change",this))}hasChanges(e){return!J.equals(e instanceof bi?e.encode():e,this.encode())}changed(){this.trigger("change",this)}decodeMethods(e,t){return t?x(t,t=>this.decodeMethod(e,t)):{}}decodeMethod(e,t){return t instanceof yi?t:yi.create(e,t)}decodeTranscoders(e,t){return t?x(t,t=>this.decodeTranscoder(e,t)):{}}decodeTranscoder(e,t){return t.encode instanceof q?t:{encode:e.getExpression(t.encode),decode:e.getExpression(t.decode),encodedType:e.getType(t.encodedType)}}decodeIndexes(e){return e?x(e,({unique:e,primary:t,props:s},n)=>({name:n,props:s,unique:e,primary:t})):{}}encode(){const{name:e,description:t,meta:s,type:n,instances:r,methods:i,key:a,describe:o,transcoders:u,indexes:p}=this;return{name:e,description:t,meta:s,type:n.encode(),instances:r.map(e=>n.toJson(e)),methods:x(i,e=>e.encode()),key:a.encode(),describe:o.encode(),transcoders:x(u,({encode:e,decode:t,encodedType:s})=>({encode:e.encode(),decode:t.encode(),encodedType:s.encode()})),indexes:x(p,({props:e,unique:t,primary:s})=>({props:e,unique:t,primary:s}))}}canStore(e){if(!(this.primaryType!==fi.GIVEN||this.keyType&&e.keyExpectedType.acceptsType(this.keyType)))return!1;const t=this.describe.getType(e,this.getDescribeContext());return!(!t||!e.describeExpectedType.acceptsType(t))}updateKeyType(e){const t=this.key.getType(e,this.getKeyContext());t&&(this.keyType=t)}renameProp(e,t){let s=!1;const n=this.transcoders[e];n&&(delete this.transcoders[e],this.transcoders[t]=n,s=!0),E(this.indexes,n=>{const r=n.props.indexOf(e);-1!==r&&(n.props[r]=t,this.updateIndex(n.name,!0),s=!0)}),this.trigger("renameProp",this,t,e),s&&this.changed()}removeProp(e){let t=!1;e in this.transcoders&&(this.removeTranscoder(e,!0),t=!0),E(this.indexes,(s,n)=>{const r=s.props.indexOf(e);-1!==r&&(s.props.splice(r,1),t=!0,0===s.props.length?this.removeIndex(n,!0):this.updateIndex(n,!0))}),this.trigger("removeProp",this,e),t&&this.changed()}getEntityProps(){const e=this.getPrimary(),t=e.props.map((t,s)=>[t,e.types&&e.types[s]?e.types[s]:this.type.options.props[t]]);return{type:gi.PRIMARY,props:t}}getKey(e,t){const{type:s,key:n}=this;return e.run(n,{instance:t,type:s})}setKey(e){if(this.primaryType===fi.GIVEN)return;const t=this.getDynamicPrimaryKey();if(!e[t])switch(this.primaryType){case fi.AUTO_INCREMENT:e[t]=this.instances.reduce((e,s)=>Math.max(e,s[t]),0)+1;break;case fi.UUID:e[t]=bi.uuid()}}getDescribe(e,t){const{type:s,describe:n}=this;return e.run(n,{instance:t,type:s})}getDecodedPropertyTypes(){return this.type.options.props}getPropertyTypeFor(e){return e?hi.enumForText([e]):this.getPropertyType()}getEncodedPropertyTypes(){return x(this.type.options.props,(e,t)=>t in this.transcoders?this.transcoders[t].encodedType:e)}getEncodedType(){return hi.object(this.getEncodedPropertyTypes())}getDecodedType(){return this.type}getProperties(){return Object.keys(this.getDecodedPropertyTypes())}getPropertyType(){return hi.enumForText(this.getProperties())}getKeyReturnType(){return this.keyType}getKeyContext(){return hi.object({instance:this.type,type:hi.text()})}getDescribeContext(){return hi.object({instance:this.type,type:hi.text()})}getEncoded(e,t){const s={};for(const n in this.getDecodedPropertyTypes())s[n]=this.getEncodedValue(e,t,n);return s}getEncodedValue(e,t,s){const{name:n,transcoders:r}=this,i=s in r?r[s].encode:null,a=t[s];return i?e.run(i,{name:n,instance:t,property:s,value:a}):a}getEncodeContext(e){const t=hi.enumForText([this.name]),s=this.getDecodedType(),n=this.getPropertyTypeFor(e),r=this.getDecodeExpected(e);return hi.object({name:t,instance:s,property:n,value:r})}getEncodeExpected(e,t=hi.any()){return e&&e in this.transcoders?this.transcoders[e].encodedType:t}getDecoded(e,t){const s={};for(const n in this.getDecodedPropertyTypes())s[n]=this.getDecodedValue(e,t,n);return s}getDecodedValue(e,t,s){const{name:n,transcoders:r}=this,i=s in r?r[s].decode:null,a=t[s];return i?e.run(i,{name:n,instance:t,property:s,value:a}):a}getDecodeContext(e,t){const s=hi.enumForText([this.name]),n=this.getEncodedType(),r=this.getPropertyTypeFor(e),i=this.getEncodeExpected(e,t);return hi.object({name:s,instance:n,property:r,value:i})}getDecodeExpected(e){return e&&this.type.options.props[e]||hi.any()}getIndexExpectedType(){return hi.set(this.getPropertyType())}getDynamicPrimaryKey(){const e=this.type.options.props;return"id"in e?"_id"in e?"__id":"_id":"id"}getPrimaryKeyExpression(e="/",t="primary"){const s=this.getPrimary(t);return s.props.length>1?Ds.op(fs.join,{list:s.props.map(e=>Ds.get("instance",e)),delimiter:Ds.const(e),toText:Ds.op(ie.asText,{value:Ds.get("item")})}):Ds.get("instance",s.props[0])}getPrimary(e="primary",t=!0){const s=e in this.indexes?this.indexes[e]:S(this.indexes,(e,t,s)=>s||(e.primary?e:s),null);if(s)return s;if(t){return{name:e,props:[this.getDynamicPrimaryKey()],types:[bi.PRIMARY_TYPES[this.primaryType]],unique:!0,primary:!0}}return null}getUniqueIndexes(){return S(this.indexes,(e,t,s)=>(e.unique&&s.push(e),s),[])}addPrimary(e){return this.addIndex("primary",{props:i(e)?e:[e],unique:!0,primary:!0}),this.primaryType=fi.GIVEN,this}addIndex(e,t,s=!1){const n=this.indexes[e],r=Object.assign(Object.assign({},t),{name:e});return this.indexes[e]=r,n?this.trigger("updateIndex",this,r,n):this.trigger("addIndex",this,r),s||this.changed(),this}updateIndex(e,t=!1){const s=this.indexes[e];return this.trigger("updateIndex",this,s,s),t||this.changed(),this}removeIndex(e,t=!1){const s=this.indexes[e];return delete this.indexes[e],this.trigger("removeIndex",this,s),t||this.changed(),this}renameIndex(e,t){const s=this.indexes[e];if(s&&e!==t){const n=Object.assign(Object.assign({},s),{props:s.props.slice()});s.name=t,delete this.indexes[e],this.indexes[t]=s,this.trigger("updateIndex",this,s,n),this.changed()}return this}addTranscoder(e,t,s,n=!1){const r=this.transcoders[t],i=this.decodeTranscoder(e,s);return this.transcoders[t]=i,r?this.trigger("updateTranscoder",this,name,i,r):this.trigger("addTranscoder",this,name,i),n||this.changed(),this}removeTranscoder(e,t=!1){const s=this.transcoders[e];return s&&(delete this.transcoders[e],this.trigger("removeTranscoder",this,e,s),t||this.changed()),this}updateTranscoder(e,t=!1){const s=this.transcoders[e];return s&&(this.trigger("updateTranscoder",this,e,s,s),t||this.changed()),this}addMethod(e,t=!1){const s=this.methods[e.name];return this.methods[e.name]=e,s?this.trigger("updateMethod",this,e,s):this.trigger("addMethod",this,e),t||this.changed(),this}renameMethod(e,t,s=!1){const n=this.methods[e];return n&&e!==t&&(n.name=t,delete this.methods[e],this.methods[t]=n,this.trigger("updateMethod",this,n,n),s||this.changed()),this}removeMethod(e,t=!1){const s=this.methods[e];return s&&(delete this.methods[e],this.trigger("removeMethod",this,s),t||this.changed()),this}}bi.PRIMARY_TYPES={[fi.GIVEN]:null,[fi.AUTO_INCREMENT]:hi.int(1),[fi.UUID]:hi.text({min:36,max:36,forceLower:!0,matches:/^[\da-f]{8}\-[\da-f]{4}\-[\da-f]{4}\-[\da-f]{4}\-[\da-f]{12}$/i})},function(e){e[e.HAS_MANY=0]="HAS_MANY",e[e.BELONGS_TO=1]="BELONGS_TO",e[e.HAS_ONE=2]="HAS_ONE",e[e.ONE=3]="ONE",e[e.HAS_ONE_POLYMORPHIC=4]="HAS_ONE_POLYMORPHIC",e[e.ONE_POLYMORPHIC=5]="ONE_POLYMORPHIC"}(vi||(vi={})),function(e){e[e.NONE=0]="NONE",e[e.CASCADE=1]="CASCADE",e[e.SET_NULL=2]="SET_NULL",e[e.RESTRICT=3]="RESTRICT"}(Ti||(Ti={}));class xi extends mi{constructor(e,t){super(),this.defs=e,this.name=t.name,this.kind=t.kind,this.subject=t.subject,this.subjectRelationName=t.subjectRelationName||t.related[0].name,this.morphs=t.morphs?this.decodeTypePair(t.morphs):null,this.morphsToRelated=f(t.morphsToRelated),this.related=t.related,this.relatedRelationName=t.relatedRelationName||t.subject.name,this.relatedToMorphs=v(this.morphsToRelated),this.multiple=!!t.multiple,this.required=!!t.required,this.owns=!!t.owns,this.extension=!!t.extension}sync(e,t){this.hasChanges(e)&&(this.name=e.name,this.kind=e.kind,this.subject=e.subject,this.subjectRelationName=e.subjectRelationName||e.related[0].name,this.morphs=e.morphs?this.decodeTypePair(e.morphs):null,this.morphsToRelated=f(e.morphsToRelated),this.related=e.related,this.relatedRelationName=e.relatedRelationName||e.subject.name,this.relatedToMorphs=v(this.morphsToRelated),this.multiple=!!e.multiple,this.required=!!e.required,this.owns=!!e.owns,this.extension=!!e.extension,this.trigger("sync",this,e,t),this.changed())}hasChanges(e){return!J.equals(e instanceof xi?e.encode():e,this.encode())}changed(){this.trigger("changed",this)}decodeTypePair([e,t]){return[e,this.defs.getType(t)]}encodeTypePair(e){return e?[e[0],e[1].encode()]:null}encode(){const{name:e,kind:t,subject:s,subjectRelationName:n,morphs:r,morphsToRelated:i,related:a,relatedRelationName:o,multiple:u,required:p,owns:l,extension:c}=this;return{name:e,kind:t,subject:s,subjectRelationName:n,morphs:this.encodeTypePair(r),morphsToRelated:Array.from(i.entries()),related:a,relatedRelationName:o,multiple:u,required:p,owns:l,extension:c}}getRelatedWithName(e,t){return t.find(t=>t.name===e)}rename(e,t){this.renameReference(e,t,[this.subject]),this.renameReference(e,t,this.related),this.changed()}renameReference(e,t,s){const n=this.getRelatedWithName(e,s);n&&(n.name=t)}remove(e){this.removeReference(e,[this.subject]),this.removeReference(e,this.related),this.changed()}removeReference(e,t){const s=t.findIndex(t=>t.name===e);-1!==s&&(t.splice(s,1),t[s].props=[])}renameProp(e,t,s){this.renamePropReference(e,t,s,[this.subject]),this.renamePropReference(e,t,s,this.related),this.changed()}renamePropReference(e,t,s,n){const r=this.getRelatedWithName(e,n);if(r){const e=r.props.indexOf(t);-1!==e&&(r.props[e]=s)}}removeProp(e,t){this.removePropReference(e,t,[this.subject]),this.removePropReference(e,t,this.related),this.changed()}removePropReference(e,t,s){const n=s.findIndex(t=>t.name===e);if(-1!==n){const e=s[n],r=e.props.indexOf(t);if(-1!==r&&(e.props.splice(r,1),0===e.props.length))return s.splice(n,1),!0}return!1}getPropTypes(e){const t=[];return e.forEach(({name:e,props:s})=>{const n=this.defs.getEntity(e).getEntityProps();s.forEach((e,s)=>{const r=n.props[s][1];t[s]=t[s]?hi.merge(t[s],r):r.clone()})}),t}isEmpty(){return 0===this.subject.props.length||0===this.related.length}getItemType(e){const t=e.map(e=>this.defs.getType(e.name));return t.length>1?hi.many(t):t[0]}getSubjectRelation(e){if(this.subject.name!==e)return null;const t=this.subjectRelationName,s=this.subject.props,n=this.related,r=this.getItemType(n),i=this.owns&&this.multiple?Ti.CASCADE:this.required?Ti.RESTRICT:Ti.SET_NULL,a=this.required?r:hi.optional(r),o={relation:this,name:t,kind:this.kind===vi.HAS_MANY?vi.BELONGS_TO:this.kind,local:s,cascade:i,related:n,itemType:r,relationType:a};return this.morphs&&(o.morphs=this.morphs,o.morphsToRelated=this.morphsToRelated,o.relatedToMorphs=this.relatedToMorphs),o}getRelatedRelation(e){const t=this.getRelatedWithName(e,this.related);if(!t)return null;const s=this.relatedRelationName,n=t.props,r=[this.subject],i=this.getItemType(r),a=Ti.NONE,o=this.multiple?hi.list(i):this.required?i:hi.optional(i),u={relation:this,name:s,kind:this.kind===vi.HAS_MANY?vi.HAS_MANY:this.morphs?vi.ONE_POLYMORPHIC:vi.ONE,local:n,cascade:a,related:r,itemType:i,relationType:o};return this.morphs&&(u.where=[this.morphs[0],this.relatedToMorphs.get(e)]),u}getTypeProps(e){const t=[];if(this.subject.name===e){const e=this.getPropTypes(this.related),s=this.subject.props.map((t,s)=>[t,e[s]]);t.push({type:gi.FOREIGN,props:s,relation:this}),this.morphs&&t.push({type:gi.NONE,props:[this.morphs],relation:this})}return t}static hasMany(e,t){const s=t.oneRelationName||t.many,n=t.manyRelationName||t.one,r=t.foreignKeyPrefix||n+"_",i=t.name||n+"_hasMany_"+s,a=e.getEntity(t.one).getPrimary().props,o=a.map(e=>r+e);return new xi(e,{name:i,kind:vi.HAS_MANY,subject:{name:t.many,props:o},subjectRelationName:n,related:[{name:t.one,props:a}],relatedRelationName:s,multiple:!0,owns:!1!==t.owns,required:!1!==t.owns})}static belongsTo(e,t){return this.hasMany(e,{name:t.name,one:t.belongsTo,many:t.oneOfMany,oneRelationName:t.belongsToRelationName,manyRelationName:t.oneOfManyRelationName,foreignKeyPrefix:t.foreignKeyPrefix,owns:t.owns})}static hasOne(e,t){const s=t.oneRelationName||t.hasOne,n=t.hasOneRelationName||t.one,r=t.foreignKeyPrefix||n+"_",i=t.name||n+"_hasOne_"+s,a=e.getEntity(t.one).getPrimary().props,o=a.map(e=>r+e);return new xi(e,{name:i,kind:vi.HAS_ONE,subject:{name:t.hasOne,props:o},subjectRelationName:n,related:[{name:t.one,props:a}],relatedRelationName:s,required:t.required,owns:t.owns})}static belongsToOne(e,t){return this.hasOne(e,{name:t.name,hasOne:t.belongsTo,one:t.one,required:t.required,owns:t.owns,hasOneRelationName:t.belongsToRelationName,oneRelationName:t.oneRelationName,foreignKeyPrefix:t.foreignKeyPrefix})}static hasOnePolymorphic(e,t){const s=t.hasOneRelationName,n=t.polyRelationName||t.hasOne,r=t.name||s+"_hasOnePolymorphic_"+n,i=t.foreignKeyPrefix||s+"_",a=t.poly.map(t=>({name:t,props:e.getEntity(t).getPrimary().props})),o=a[0].props.map(e=>i+e);return new xi(e,{name:r,kind:vi.HAS_ONE_POLYMORPHIC,subject:{name:t.hasOne,props:o},subjectRelationName:s,related:a,relatedRelationName:n,morphs:t.morphs,morphsToRelated:t.morphsToRelated,required:t.required,owns:t.owns})}}class Ei extends mi{constructor(e,t){super(),this.name=e.name,this.author=e.author,this.description=e.description,this.meta=e.meta,this.created=e.created,this.updated=e.updated,this.dataType=t.getType(e.dataType),this.expression=t.getExpression(e.expression),this.datasets=e.datasets.map(e=>Object.assign(Object.assign({},e),{data:this.dataType.fromJson(e.data)}))}static create(e,t={}){const s=(new Date).getTime();return new Ei(Object.assign({name:name,author:"",description:"",meta:null,created:s,updated:s,dataType:hi.object(),datasets:[{name:"Data Set #1",data:Object.create(null),created:s,updated:s,meta:null}],expression:oe.instance},t),e)}sync(e,t){this.hasChanges(e)&&(this.name=e.name,this.author=e.author,this.description=e.description,this.meta=e.meta,this.created=e.created,this.updated=e.updated,this.dataType=e instanceof Ei?e.dataType:t.getType(e.dataType),this.expression=e instanceof Ei?e.expression:t.getExpression(e.expression),T(this.datasets,e instanceof Ei?e.datasets:e.datasets.map(e=>Object.assign(Object.assign({},e),{data:this.dataType.fromJson(e.data)})),(e,t)=>e.name===t.name||e.created===t.created,(e,t)=>this.addDataset(t,!0),(e,t,s)=>this.removeDataset(t,!0),(e,t,s,n)=>this.updateDataset(s,n,!0)),this.trigger("sync",this,e,t),this.changed())}hasChanges(e){return!J.equals(e instanceof Ei?e.encode():e,this.encode())}changed(){this.trigger("changed",this)}encode(){const{name:e,author:t,description:s,meta:n,created:r,updated:i,dataType:a,datasets:o,expression:u}=this;return{name:e,author:t,description:s,meta:n,created:r,updated:i,dataType:a.encode(),datasets:o.map(e=>Object.assign(Object.assign({},e),{data:a.toJson(e.data)})),expression:u.encode()}}addDataset(e,t=!1){this.datasets.push(e),this.trigger("addDataset",this,e),t||this.changed()}updateDataset(e,t,s=!1){const r=n(e)?this.datasets[e]:e,i=!!r;return i&&(Object.assign(r,t),this.trigger("updateDataset",this,r),s||this.changed()),i}removeDataset(e,t=!1){const s=n(e)?e:this.datasets.indexOf(e),r=s>=0&&s<this.datasets.length;if(r){const e=this.datasets[s];this.trigger("removeDataset",this,e),t||this.changed()}return r}refactor(e,t){const s=t.getCommand(e);this.datasets.forEach(e=>{e.data=s({value:e.data})}),this.changed()}}class Oi extends mi{constructor(e,t){super(),this.name=e.name,this.meta=e.meta,this.dataType=t.getType(e.dataType),this.data=this.dataType.fromJson(e.data)}static create(e,t={}){return new Oi(Object.assign({name:"",dataType:hi.object(),data:Object.create(null),meta:null},t),e)}sync(e,t){this.hasChanges(e)&&(this.name=e.name,this.meta=e.meta,this.dataType=e instanceof Oi?e.dataType:t.getType(e.dataType),this.data=e instanceof Oi?e.data:this.dataType.fromJson(e.data),this.trigger("sync",this,e,t),this.changed())}hasChanges(e){return!J.equals(e instanceof Oi?e.encode():e,this.encode())}changed(){this.trigger("changed",this)}encode(){const{name:e,meta:t,dataType:s,data:n}=this;return{name:e,meta:t,dataType:s.encode(),data:s.toJson(n)}}refactor(e,t){this.data=t.run(e,{value:this.data}),this.changed()}}const Si=1;class wi extends R{constructor(e,t){super(e),this.provider=t}static decode(e,t){const s=e[Si];return new wi(s,t)}static encode(e){return[this.id,e.options]}static describe(e,t){return null}static register(){}getType(){if(!this.provider)return ae.baseType;const e=this.provider.getData(this.options);return e?e.dataType:ae.baseType}getOperations(){return this.getType().getOperations()}getId(){return wi.id}merge(e){}getSubType(e,t,s){return this.getType().getSubType(e,t,s)}getSubTypes(e){return this.getType().getSubTypes(e)}getExactType(e){return this.getType().getExactType(e)}getSimplifiedType(){return this.getType().getSimplifiedType()}isDeepCompatible(e,t){return e instanceof wi?this.getType().isCompatible(e.getType(),t):this.getType().isCompatible(e,t)}isOptional(){return this.getType().isOptional()}isSimple(){return this.getType().isSimple()}acceptsOtherTypes(){return!0}traverse(e){return e.enter(this,()=>e.step(wi.STEP_REFERENCED,this.getType(),e=>e instanceof wi?this.options=e.options:0))}getTypeFromStep(e){return e===wi.STEP_REFERENCED?this.getType():null}setParent(e=null){this.parent=e}removeDescribedRestrictions(){}getCreateExpression(){return this.getType().getCreateExpression()}getValidateExpression(){return this.getType().getValidateExpression()}getCompareExpression(){return this.getType().getCompareExpression()}getValueChangeExpression(e,t,s){return e}isValid(e){return this.getType().isValid(e)}normalize(e){return this.getType().normalize(e)}newInstance(){return new wi(this.options,this.provider)}clone(){return new wi(this.options,this.provider)}encode(){return wi.encode(this)}create(){return this.getType().create()}random(e){return this.getType().random(e)}fromJson(e){return this.getType().fromJson(e)}toJson(e){return this.getType().toJson(e)}}wi.STEP_REFERENCED="referenced",wi.id=Y.Reference,wi.operations=new V(Y.Reference+Y.Delimiter),wi.computeds=new F(Y.Reference+Y.Delimiter),wi.baseType=new wi("",null),wi.describePriority=-1,wi.registered=!1;class Mi{constructor(e){this.clear(),e&&this.merge(e)}reset(e){this.clear(),this.merge(e)}merge(e){if(e instanceof Map)for(const[t,s]of e.entries())this.set(t,s);else if(e instanceof Mi)for(let t=0;t<e.length();t++)this.set(e.keyAt(t),e.valueAt(t));else if(i(e))for(const[t,s]of e)this.set(t,s);else if(c(e))for(const t in e)this.set(t,e[t])}sync(e,t){const s=new Mi(e);this.filter((e,t)=>s.has(t)),s.forEach((e,s)=>{this.has(s)&&t?t(this.get(s),e):this.set(s,e)})}clear(){this.indexes=Object.create(null),this.keys=[],this.values=[]}length(){return this.keys.length}valueAt(e){return this.values[e]}keyAt(e){return this.keys[e]}pairAt(e){return[this.keys[e],this.values[e]]}has(e){return r(e)?e in this.indexes:this.values.includes(e)}set(e,t){const s=this.indexes[e];n(s)?this.values.splice(s,1,t):(this.indexes[e]=this.values.length,this.values.push(t),this.keys.push(e))}rekey(e,t){const s=this.indexOf(e),n=-1!==s;return n&&(delete this.indexes[this.keys[s]],this.indexes[t]=s,this.keys.splice(s,1,t)),n}sort(e){this.reset(this.toPairs().sort(([t,s],[n,r])=>e(s,r)))}sortByKey(e=((e,t)=>e.localeCompare(t))){this.reset(this.toPairs().sort(([t,s],[n,r])=>e(t,n)))}reindex(){const e=this.keys,t=Object.create(null);for(let s=0;s<e.length;s++)t[e[s]]=s;this.indexes=t}swap(e,t){if(e===t||e<0||t<0||e>=this.keys.length||t>=this.keys.length)return!1;const s=this.keys[e],n=this.values[e],r=this.keys[t],i=this.values[t];return this.indexes[s]=t,this.indexes[r]=e,this.keys.splice(e,1,r),this.keys.splice(t,1,s),this.values.splice(e,1,i),this.values.splice(t,1,n),!0}get(e,t){return r(e)?this.values[this.indexes[e]]||t:e}remove(e,t=!1){const s=this.indexOf(e);if(-1!==s){const{keys:e,values:n}=this,r=n[s];if(t)this.removeAt(s);else{delete this.indexes[e[s]];const t=e.pop(),r=n.pop();s!==e.length&&(e.splice(s,1,t),n.splice(s,1,r),this.indexes[t]=s)}return r}}removeAt(e){const{keys:t,values:s}=this;if(e<0||e>=t.length)return!1;for(delete this.indexes[t[e]],t.splice(e,1),s.splice(e,1);++e<t.length;)this.indexes[t[e]]--;return!0}move(e,t){const{keys:s,values:n}=this;if(e<0||t<0||e>=s.length||t>=s.length)return!1;if(e!==t){const r=n[e],i=s[e];n.splice(e,1),s.splice(e,1),n.splice(t,0,r),s.splice(t,0,i),this.reindex()}return!0}moveToFront(e){const t=this.indexOf(e);return-1!==t&&this.move(t,0)}moveToBack(e){const t=this.indexOf(e);return-1!==t&&this.move(t,this.keys.length-1)}indexOf(e){return r(e)?e in this.indexes?this.indexes[e]:-1:this.values.indexOf(e)}keyOf(e){const t=this.values.indexOf(e);return-1===t?void 0:this.keys[t]}toPairs(){return this.values.map((e,t)=>[this.keys[t],e])}toMap(){return new Map(this.toPairs())}toObject(){const e=Object.create(null);for(let t=0;t<this.keys.length;t++)e[this.keys[t]]=this.values[t];return e}clone(){return new Mi(this)}forEach(e){const{keys:t,values:s}=this;let n=0;for(;n<t.length;){const r=t[n];e(s[n],r),t[n]===r&&n++}}filter(e){const{values:t,keys:s,indexes:n}=this;let r=0;for(let i=0;i<t.length;i++){const a=t[i],o=s[i];e(a,o)?(t[r]=a,s[r]=o,n[o]=r,r++):delete n[o]}r<t.length&&(t.splice(r,t.length-r),s.splice(r,s.length-r))}}class Ii extends Mi{static isNamedArray(e){return i(e)&&e.length>0&&r(e[0].name)}constructor(e){super(),e&&this.merge(e)}reset(e){this.clear(),this.merge(e)}merge(e){if(Ii.isNamedArray(e))for(const t of e)this.add(t);else super.merge(e)}sync(e,t){super.sync(new Ii(e),t)}syncManual(e,t,s,n,r){const i=new Ii(e);return r?T(this.values,i.values,r,(e,s)=>t(this,s,s.name),(e,t,n)=>s(this,n,n.name),(e,t,s,r)=>n(this,s,r,s.name)):(this.forEach((e,t)=>{const r=i.get(t);void 0===r?s(this,e,t):n(this,e,r,t)}),i.forEach((e,s)=>{this.has(s)||t(this,e,s)})),this}rename(e,t){const s=this.get(e),n=!!s&&s.name!==t;return n&&(this.rekey(s,t),s.name=t),n}has(e){return this.nameOf(e)in this.indexes}add(e){this.set(e.name,e)}nameOf(e){return r(e)?e:e.name}valueOf(e){return r(e)?this.get(e):e}indexOf(e){const t=this.indexes[this.nameOf(e)];return n(t)?t:-1}keyOf(e){return e.name}clone(){return new Ii(this)}}class Pi extends mi{constructor(e){super(),this.types=Object.create(null),this.typeList=[],this.describers=[],this.expressions=Object.create(null),this.operations=new V(""),this.computeds=new F(""),this.parsers=Object.create(null),this.entities=new Ii,this.functions=new Ii,this.relations=new Ii,this.programs=new Ii,this.data=new Ii,this.keyExpectedType=hi.many(hi.text(),hi.number()),this.describeExpectedType=hi.text(),e&&this.add(e)}encodeMap(e,t=!0){return x(e.toObject(),e=>t?e.encode():e)}extend(e=!1,t){const s=new Pi({types:O(this.types),expressions:O(this.expressions),entities:this.encodeMap(this.entities,e),functions:this.encodeMap(this.functions,e),relations:this.encodeMap(this.relations,e),programs:this.encodeMap(this.programs,e),data:this.encodeMap(this.data,e)});return t&&s.add(t),s}changed(){this.trigger("changed",this)}add(e){e.types&&e.types.forEach(e=>this.addType(e,!0)),this.sortDescribers(),e.expressions&&e.expressions.forEach(e=>this.addExpression(e)),this.import(e)}describe(e){for(const t of this.describers){const s=t.describe(e,this);if(s)return s}return ue.baseType}merge(e,t){return hi.merge(e,this.describe(t))}sortDescribers(){this.describers.sort((e,t)=>t.describePriority-e.describePriority)}addType(e,t=!1){this.types[e.id]=e,this.typeList.push(e),this.parsers[e.id]=(t,s)=>e.decode(t,s),this.describers.push(e),t||this.sortDescribers(),e.registered||(e.registered=!0,e.register())}findEntity(e,t={strict:!0,value:!1,exact:!1}){const s=this.entities.values.find(s=>s.type.isCompatible(e,t));return!!s&&s.name}addData(e,t=!0,s=!1){const n=e instanceof Oi?e:Oi.create(this,e),r=this.data.get(n.name);return r?(t?r.sync(n,this):this.data.add(n),this.trigger("updateData",this,n)):(this.data.add(n),this.trigger("addData",this,n)),this.trigger("changedData",this),s||this.changed(),this}getData(e){return this.data.get(e,null)}getDatas(){return this.data}removeData(e,t=!0,s=!1,n=!1){const r=this.data.valueOf(e);return!r||!(t&&this.getDataReferences(r).length>0)&&(this.data.remove(r,s),this.trigger("removeData",this,r),this.trigger("changedData",this),n||this.changed(),!0)}clearData(e=!1){const t=this.data.values.slice();this.data.clear(),this.trigger("clearData",this,t),this.trigger("changedData",this),e||this.changed()}renameData(e,t,s=!1){const n=this.data.valueOf(e),r=n.name;if(!this.data.rename(n,t))return!1;const i=this.getDataReferences(n);return i.forEach(e=>{e.value instanceof wi?e.value.options=t:e.value.name=t}),n.trigger("renamed",n,r),n.changed(),this.trigger("renameData",this,n,r),this.trigger("changedData",this),s||this.changed(),i}addFunction(e,t=!0,s=!1){const n=e instanceof yi?e:yi.create(this,e),r=this.functions.get(n.name);return r?(t?r.sync(n,this):this.functions.add(n),this.trigger("updateFunction",this,n)):(this.functions.add(n),this.trigger("addFunction",this,n)),this.trigger("changedFunctions",this),s||this.changed(),this}getFunction(e){return this.functions.get(e,null)}getFunctions(){return this.functions}addProgram(e,t=!0,s=!1){const n=e instanceof Ei?e:Ei.create(this,e),r=this.programs.get(n.name);return r?(t?r.sync(n,this):this.programs.add(n),this.trigger("updateProgram",this,n)):(this.programs.add(n),this.trigger("addProgram",this,n)),this.trigger("changedPrograms",this),s||this.changed(),this}getProgram(e){return this.programs.get(e,null)}getPrograms(){return this.programs}removeProgram(e,t=!1,s=!1){const n=this.programs.valueOf(e);return!n||(this.programs.remove(n,t),this.trigger("removeProgram",this,n),this.trigger("changedPrograms",this),s||this.changed(),!0)}clearPrograms(e=!1){const t=this.programs.values.slice();this.programs.clear(),this.trigger("clearPrograms",this,t),this.trigger("changedPrograms",this),e||this.changed()}addEntity(e,t=!0,s=!1){const n=e instanceof bi?e:bi.create(this,e),r=this.entities.get(n.name);return r?(t?r.sync(n,this):this.entities.add(n),this.trigger("updateEntity",this,n)):(this.entities.add(n),this.trigger("addEntity",this,n)),this.trigger("changedEntities",this),s||this.changed(),this}getEntity(e){return this.entities.get(e,null)}getEntities(){return this.entities}addRelation(e,t=!0,s=!1){const n=e instanceof xi?e:new xi(this,e),r=this.relations.get(n.name);return r?(t?r.sync(n,this):this.relations.add(n),this.trigger("updateRelation",this,n)):(this.relations.add(n),this.trigger("addRelation",this,n)),this.trigger("changedRelations",this),s||this.changed(),this}getRelation(e){return this.relations.get(e,null)}getRelations(e){const t=[];return this.relations.forEach(s=>{const n=s.getSubjectRelation(e);n&&t.push(n);const r=s.getRelatedRelation(e);r&&t.push(r)}),t}getEntityProps(e){const t=[],s=this.entities.get(e);return s&&(t.push(s.getEntityProps()),this.relations.forEach(s=>{t.push(...s.getTypeProps(e))})),t}removeRelation(e,t=!0,s=!1,n=!1){const r=this.relations.valueOf(e);return!r||!(t&&this.getRelationReferences(r).length>0)&&(this.relations.remove(r,s),this.trigger("removeRelation",this,r),this.trigger("changedRelations",this),n||this.changed(),!0)}clearRelations(e=!1){const t=this.relations.values.slice();this.relations.clear(),this.trigger("clearRelations",this,t),this.trigger("changedRelations",this),e||this.changed()}renameProgram(e,t,s=!1){const n=this.programs.valueOf(e),r=n.name;return!!this.programs.rename(n,t)&&(n.trigger("renamed",n,r),n.changed(),this.trigger("renameProgram",this,n,r),this.trigger("changedPrograms",this),s||this.changed(),!0)}renameEntity(e,t,s=!1){const n=this.entities.valueOf(e),r=n.name;if(!this.entities.rename(n,t))return!1;this.relations.forEach(e=>{e.rename(name,t)});const i=this.getEntityReferences(name);return i.forEach(e=>{e.value instanceof yt?e.value.options=t:e.value.name=t}),n.trigger("renamed",n,r),n.changed(),this.trigger("renameEntity",this,n,r),this.trigger("changedEntities",this),s||this.changed(),i}renameEntityProp(e,t,s){const n=this.entities.get(e);n&&(n.renameProp(t,s),this.relations.forEach(e=>{e.renameProp(n.name,t,s)}))}removeEntityProp(e,t){const s=this.entities.get(e);s&&(s.removeProp(t),this.relations.forEach(e=>{e.removeProp(s.name,t),e.isEmpty()&&this.relations.remove(e)}))}removeEntity(e,t=!0,s=!1,n=!1){const r=this.entities.valueOf(e);return!r||!(t&&this.getEntityReferences(r).length>0)&&(this.entities.remove(r,s),this.relations.forEach(e=>{e.remove(name),e.isEmpty()&&this.relations.remove(e,s)}),this.trigger("removeEntity",this,r),this.trigger("changedEntities",this),n||this.changed(),!0)}clearEntities(e=!1){const t=this.entities.values.slice();this.entities.clear(),this.trigger("clearEntities",this,t),this.trigger("changedEntities",this),e||this.changed()}refactorEntity(e,t,s){const n=this.getEntityDataReferences(e);return n.forEach(e=>{e.root.setParent();const n=e.type.getValueChangeAt(t);e.data=s.run(n,{value:e.data})}),n}renameRelation(e,t,s=!1){const n=this.relations.valueOf(e),r=n.name;if(!this.relations.rename(n,t))return!1;const i=this.getRelationReferences(n);return i.forEach(e=>{e.value.name=t}),n.trigger("renamed",n,r),n.changed(),this.trigger("renameRelation",this,n,r),this.trigger("changedRelations",this),s||this.changed(),i}renameFunction(e,t,s=!1){const n=this.functions.valueOf(e),r=n.name;if(!this.functions.rename(n,t))return!1;const i=this.getFunctionReferences(n);return i.forEach(e=>{e.value.name=t}),n.trigger("renamed",n,r),n.changed(),this.trigger("renameFunction",this,n,r),this.trigger("changedFunctions",this),s||this.changed(),i}renameFunctionParameter(e,t,s){const n=this.functions.get(e);if(!n)return!1;if(!n.renameParameter(t,s))return!1;const r=this.getFunctionReferences(e,t);return r.forEach(e=>{e.value.args[s]=e.value.args[t],delete e.value.args[t]}),r}removeFunctionParameter(e,t){const s=this.functions.get(e);if(!s)return!1;if(!s.removeParameter(t))return!1;const n=this.getFunctionReferences(e,t);return n.forEach(e=>{delete e.value.args[t]}),n}removeFunction(e,t=!0,s=!1,n=!1){const r=this.functions.valueOf(e);return!r||!(t&&this.getFunctionReferences(r).length>0)&&(this.functions.remove(r,s),this.trigger("removeFunction",this,r),this.trigger("changedFunctions",this),n||this.changed(),!0)}clearFunctions(e=!1){const t=this.functions.values.slice();this.functions.clear(),this.trigger("clearFunctions",this,t),this.trigger("changedFunctions",this),e||this.changed()}getTypeKind(e,t,s=null){const n=this.getType(e);return n instanceof t?n:s}getType(e,t){if(e instanceof R)return e;const s=i(e)?e[0]:e,n=i(e)?e:[],r=this.parsers[s];if(!r){if(this.entities.has(s))return this.entities.get(s).type;if(t)return t;throw new Error(`No parser found for ${s} with payload ${JSON.stringify(n)}`)}return r(n,this)}getBaseTypes(){return this.typeList.map(e=>e.baseType)}getSimpleTypes(){return this.getBaseTypes().filter(e=>e.isSimple())}getComplexTypes(){return this.getBaseTypes().filter(e=>!e.isSimple())}getSimpleTypeClasses(){return this.typeList.filter(e=>e.baseType.isSimple())}getComplexTypeClasses(){return this.typeList.filter(e=>!e.baseType.isSimple())}getComputed(e){const t=this.computeds.get(e);if(t)return t;const[s]=e.split(Y.Delimiter),n=this.types[s];return n?n.computeds.get(e):null}getComputedReturnType(e,t=null){const s=this.getComputed(e);if(!s)return null;const n=this.getOperation(s.op),r=this.getOperationTypes(s.op);return n&&r?this.getOperationInputType(r.returnType,{[s.value]:t}):null}getComputedsFor(e){const t=this.types[e.getId()];return t?t.computeds.list:[]}hasComputed(e,t){const s=this.types[e.getId()];return!!s&&!!s.computeds.get(t)}getOperation(e){const t=this.operations.get(e);if(t)return t;const[s]=e.split(Y.Delimiter),n=this.types[s];return n?n.operations.get(e):null}getOperationTypes(e){const t=this.operations.getTypes(e);if(t)return t;const[s]=e.split(Y.Delimiter),n=this.types[s];return n?n.operations.getTypes(e):null}getOperationReturnType(e,t,s,n){const r=this.getOperation(e),i=this.getOperationTypes(e);if(!r||!i)return null;const a=i.returnType;if(a instanceof R)return a;if(!_(a))return a.baseType.newInstance();const o=r.resultDependency.length>0?this.getOperationParamTypes(e,t,s,n,i.rawTypes):{};return this.getOperationInputType(i.returnType,o)}getOperationExpectedTypes(e,t,s,n,r=!1){const i=this.getOperationTypes(e);if(!i)return{};const a=this.getOperationParamTypes(e,t,s,n,r);return x(a,(e,t)=>this.getOperationInputType(i.params[t]||i.optional[t]||e,a))}getOperationParamTypes(e,t,s,n,r=!1){const i={},a=this.getOperation(e),o=this.getOperationTypes(e);if(!a||!o)return i;for(const e in t)if(-1===a.hasScope.indexOf(e)){const s=t[e].getType(this,n);s&&(i[e]=r?s:s.getSimplifiedType())}const{context:u,scope:p}=this.getContextWithScope(n);for(const e of a.scope){const t=this.getOperationInputType(o.scope[e],i);if(t){p[s[e]||e]=r?t:t.getSimplifiedType()}}for(const e in t)if(-1!==a.hasScope.indexOf(e)){const s=t[e].getType(this,u);s&&(i[e]=r?s:s.getSimplifiedType())}for(const e of a.params)i[e]||(i[e]=this.getOperationInputType(o.params[e],i));for(const e of a.optional)i[e]||(i[e]=this.getOperationInputType(o.optional[e],i));return i}getOperationScopeContext(e,t,s,n){const r=this.getOperation(e),i=this.getOperationTypes(e),{context:a,scope:o}=this.getContextWithScope(n);for(const e of r.scope){const n=this.getOperationInputType(i.scope[e],t);if(n){o[s[e]||e]=n.getSimplifiedType()}}return a}getContextWithScope(e,t={}){return{context:e instanceof dt?new dt({props:t=Object.assign(Object.assign({},e.options.props),t)}):new Cr([new dt({props:t}),e]),scope:t}}getContext(e,t){return this.getContextWithScope(e,t).context}getOperationMapping(e,t,s){const n=this.getOperation(e),r=this.getOperationTypes(s),i=n.params.concat(n.optional),a=this.getOperation(s),o=this.getOperationTypes(s),u=Object.create(null),p=Object.create(null),l=O(t,(e,t)=>[t,e,i.indexOf(t)]).filter(([,,e])=>e>=0).sort(([,,e],[,,t])=>e-t),c=(e,t)=>{if(0===l.length)return null;let s=-1;if(_(t))-1===(s=l.findIndex(([,s])=>s.acceptsType(hi.parse(t(Object.assign(Object.assign({},p),{[e]:s}),this)))))&&(s=l.findIndex(([,s])=>hi.parse(t(Object.assign(Object.assign({},p),{[e]:s}),this)).acceptsType(s)));else{const e=hi.parse(t);s=l.findIndex(([,t])=>e.acceptsType(t))}if(-1===s)return null;const n=l[s];l.splice(s,1),u[n[0]]=e,p[e]=n[1]};for(const e of a.params){if(null===c(e,o.params[e]))return null}for(const e of a.optional)c(e,o.optional[e]);const h=l.map(([e])=>e);return{from:n,fromTypes:r,to:a,toTypes:o,mapping:u,unmapped:h}}getOperationInputType(e,t){return e instanceof R?e:"baseType"in e?e.baseType.clone():t?hi.parse(e(t,this)):null}getOperationsForExpression(e,t){const s=e.getType(this,t);return s?this.getOperationsForType(s.getSimplifiedType()):[]}getOperationsWithMapping(e,t){return this.getOperations().map(({op:s})=>this.getOperationMapping(e,t,s.id)).filter(e=>!!e)}getOperationsForType(e,t=!1){return this.getOperations(({op:s,types:n})=>{const r=s.params[0],i=n.params[r];if(i){const a=this.getOperationInputType(i,{[r]:e});if(a){if(e.acceptsType(a))return!0;if(t&&s.resultDependency.length>0&&_(n.returnType)&&(a instanceof ue||a instanceof ae))return!0}}return!1})}getOperationsWithReturnExpression(e,t,s={},n=!1){const r=e.getType(this,t);return r?this.getOperationsWithReturnType(r.getSimplifiedType(),s,n):[]}getOperationsWithReturnType(e,t={},s=!1){return this.getOperations(({op:n,types:r})=>{const i=this.getOperationInputType(r.returnType,t);if(i){if(e.acceptsType(i))return!0;if(s&&n.resultDependency.length>0&&_(r.returnType)&&(i instanceof ue||i instanceof ae))return!0}return!1})}getOperationsForParamExpressions(e,t){return this.getOperationsForParamTypes(x(e,e=>{const s=e.getType(this,t);return s?s.getSimplifiedType():void 0}))}getOperationsForParamTypes(e){const t=Object.keys(e);return this.getOperations(({types:s})=>{for(const n of t){const t=s.params[n]||s.optional[n];if(!t)return!1;const r=this.getOperationInputType(t,e);if(!r||!e[n].acceptsType(r))return!1}return!0})}getOperations(e=(()=>!0)){const t=[],s=s=>{const n=s.map;for(const r in n){const i={op:n[r],types:s.types[r]};e(i)&&t.push(i)}};return s(this.operations),E(this.types,e=>s(e.operations)),t}getPathType(e,t,s=e.length){let n=!1,r=t;for(let i=0;i<s;i++){if(!(r=r.getSubType(e[i],this,t)))return null;n=n||r.isOptional()}return n&&!r.isOptional()?hi.optional(r):r}addExpression(e){this.expressions[e.id]=e}getExpression(e){if(e instanceof q)return e;if(i(e)){const t=this.expressions[e[0]];if(!t)throw new Error("An expression was not found for: "+JSON.stringify(e));return t.decode(e,this)}return new Ue(e)}getEntityReferences(e){const t=e?this.entities.nameOf(e):void 0,s=this.getTypeClassReferences(yt).filter(e=>!t||t===e.value.options),n=this.getExpressionClassReferences(ft).filter(e=>!t||t===e.value.name);return s.concat(n)}getDataReferences(e){const t=e?this.data.nameOf(e):void 0,s=this.getTypeClassReferences(wi).filter(e=>!t||t===e.value.options),n=this.getExpressionClassReferences(nt).filter(e=>!t||t===e.value.name);return s.concat(n)}getEntityDataReferences(e){const t=e?this.entities.nameOf(e):void 0;return this.getDataTypeClassReferences(yt).filter(e=>!t||t===e.type.options)}getRelationReferences(e){const t=e?this.relations.nameOf(e):void 0;return this.getExpressionClassReferences(Tt).filter(e=>!t||t===e.value.name)}getFunctionReferences(e,t){const s=e?this.functions.nameOf(e):void 0;return this.getExpressionClassReferences(wt).filter(e=>(!s||s===e.value.name)&&(!t||t in e.value.args))}getTypeClassReferences(e){const t=[];return this.getTypeInstances().forEach(s=>{s.type.traverse(new L(n=>{n instanceof e&&t.push({value:n,root:s.type,source:s.source})}))}),t}getDataTypeClassReferences(e){const t=[];return this.getDataInstances().forEach(s=>{s.type.traverse(new L(n=>{n instanceof e&&t.push({type:n,data:s.data,root:s.type,source:s.source})}))}),t}getExpressionClassReferences(e){const t=[];return this.getExpressionInstances().forEach(s=>{s.expr.traverse(new L(n=>{n instanceof e&&t.push({value:n,root:s.expr,source:s.source})}))}),t}getDataInstances(){const e=[];return this.programs.forEach(t=>{t.datasets.forEach(s=>{e.push({data:s.data,type:t.dataType,source:[t,s]})})}),this.functions.forEach(t=>{const s=t.getReturnType(this);t.tests.forEach(n=>{e.push({data:n.args,type:t.params,source:[t,n,"args"]}),e.push({data:n.expected,type:s,source:[t,n,"expected"]})})}),this.data.forEach(t=>{e.push({data:t.data,type:t.dataType,source:t})}),this.entities.forEach(t=>{t.instances&&t.instances.length>0&&e.push({data:t.instances,type:hi.list(t.type),source:t}),E(t.methods,s=>{const n=s.getReturnType(this);s.tests.forEach(r=>{e.push({data:r.args,type:s.params,source:[t,s,r,"args"]}),e.push({data:r.expected,type:n,source:[t,s,r,"expected"]})})})}),e}getTypeInstances(e=!1){const t=[];return this.programs.forEach(e=>{t.push({type:e.dataType,source:e})}),this.functions.forEach(s=>{t.push({type:s.params,source:[s,"params"]}),e&&t.push({type:s.getReturnType(this),source:[s,"returnType"]})}),this.data.forEach(e=>{t.push({type:e.dataType,source:e})}),this.entities.forEach(s=>{t.push({type:s.type,source:s}),E(s.methods,n=>{t.push({type:n.params,source:[s,n,"params"]}),e&&t.push({type:n.getReturnType(this),source:[s,n,"returnType"]})}),e&&(s.key!==oe.instance&&t.push({type:s.getKeyContext(),source:[s,"key"]}),s.describe!==oe.instance&&t.push({type:s.getDescribeContext(),source:[s,"describe"]})),E(s.transcoders,(e,n)=>{t.push({type:e.encodedType,source:[s,n,e]})})}),e&&this.relations.forEach(e=>{e.morphs&&t.push({type:e.morphs[1],source:e})}),t}getExpressionInstances(){const e=[];return this.programs.forEach(t=>{e.push({context:t.dataType,expr:t.expression,source:t})}),this.functions.forEach(t=>{e.push({context:t.params,expr:t.expression,source:t})}),this.entities.forEach(t=>{E(t.methods,s=>{e.push({context:s.getParamTypes(),expr:s.expression,source:[t,s]})}),t.canStore(this)&&(e.push({context:t.getKeyContext(),expr:t.key,source:[t,"key"]}),e.push({context:t.getDescribeContext(),expr:t.describe,source:[t,"describe"]}),E(t.transcoders,(s,n)=>{e.push({context:t.getEncodeContext(n),expr:s.encode,source:[t,n,s,"encode"]}),e.push({context:t.getDecodeContext(n),expr:s.decode,source:[t,n,s,"decode"]})}))}),e}export(){return{entities:this.encodeMap(this.entities),functions:this.encodeMap(this.functions),relations:this.encodeMap(this.relations),programs:this.encodeMap(this.programs),data:this.encodeMap(this.data)}}sync(e){e.data&&this.data.syncManual(e.data,(e,t)=>this.addData(t,!1,!0),(e,t)=>this.removeData(t,!1,!0,!0),(e,t,s)=>this.addData(s,!0,!0)),e.functions&&this.functions.syncManual(e.functions,(e,t)=>this.addFunction(t,!1,!0),(e,t)=>this.removeFunction(t,!1,!0,!0),(e,t,s)=>this.addFunction(s,!0,!0)),e.entities&&this.entities.syncManual(e.entities,(e,t)=>this.addEntity(t,!1,!0),(e,t)=>this.removeEntity(t,!1,!0,!0),(e,t,s)=>this.addEntity(s,!0,!0)),e.relations&&this.relations.syncManual(e.relations,(e,t)=>this.addRelation(t,!1,!0),(e,t)=>this.removeRelation(t,!1,!0,!0),(e,t,s)=>this.addRelation(s,!0,!0)),e.programs&&this.programs.syncManual(e.programs,(e,t)=>this.addProgram(t,!1,!0),(e,t)=>this.removeProgram(t,!0,!0),(e,t,s)=>this.addProgram(s,!0,!0))}import(e){e.data&&E(e.data,e=>this.addData(e)),e.functions&&E(e.functions,e=>this.addFunction(e)),e.entities&&E(e.entities,e=>this.addEntity(e)),e.relations&&E(e.relations,e=>this.addRelation(e)),e.programs&&E(e.programs,e=>this.addProgram(e))}}class Ci{constructor(e){this.defs=e,this.ops=Object.create(null),this.exprs=Object.create(null),this.returnProperty=Ci.DEFAULT_RETURN_PROPERTY}extend(e){const t=new Ci(e||this.defs);return Object.assign(t.ops,this.ops),Object.assign(t.exprs,this.exprs),t.returnProperty=this.returnProperty,t}setOperation(e,t){return this.ops[e.id]=t,this}setExpression(e,t){return this.exprs[e.id]=t,this}getFunction(e){return this.defs.getFunction(e)}getOperation(e){return this.ops[e]}getComputed(e){return this.defs.getComputed(e)}getOperationScopeDefaults(e){const t=this.defs.getOperation(e);return t?t.scopeDefaults:{}}getExpression(e){return this.exprs[e]}getCommand(e,t=this){return this.exprs[e.getId()](e,t)}run(e,t,s=this){return this.eval(e,s)(t)}eval(e,t=this){return i(e)?this.getCommand(this.defs.getExpression(e),t):()=>e}}Ci.DEFAULT_RETURN_PROPERTY="$$return";const Di=new Pi({types:[yt,ue,X,ni,Ir,Ge,Os,Cr,Rr,Vr,ae,Rs,dt,qr,wi,ci,Re,ws],expressions:[ee,be,Ee,we,Ue,ce,ve,Ze,tt,nt,ft,Tt,Et,wt,oe,Q,Cs,kt,It,Lt,jt,Vt,Ut,Jt,Is,Qt,is]}),ki=yt.operations,Ni=(e,t)=>e.name instanceof yt?e.name:dt.baseType,Li=(e,t)=>{if(e.name instanceof yt)return e.name;const s=t.getEntities().values.map(e=>new yt(e.name,t));return 0===s.length?ae.baseType:1===s.length?s[0]:hi.many(s)},Ri=(e,t)=>{if(!(e.name instanceof yt))return null;const s=t.getRelations(e.name.options);if(e.relation instanceof Ge){const t=e.relation.options.constants.get("relation");if(t){const e=s.find(e=>e.name===t);if(e)return e}}return s},Ai=(e,t)=>{const s=Ri(e,t);return null===s?ae.baseType:i(s)?hi.many(s.map(e=>hi.enum(Re,Re,[["relation",e.name]]))):e.relation},ji=(e,t)=>{const s=Ri(e,t);return null===s||i(s)?ae.baseType:e.related&&s.relationType.acceptsType(e.related)?e.related:s.relationType},qi=(e,t)=>{const s=Ri(e,t);return null===s||i(s)?ae.baseType:e.related&&s.itemType.acceptsType(e.related)?e.related:s.itemType},_i={newInstance:ki.setTypes(ot.newInstance,Ni,{name:Li}),get:ki.setTypes(ot.get,(e,t)=>{if(!(e.name instanceof yt))return ue;const s=t.getEntity(e.name.options);return s?hi.list(s.type):ue},{name:Li},{where:X},{instance:Ni}),getKey:ki.setTypes(ot.getKey,(e,t)=>{if(!(e.name instanceof yt))return ue;const s=t.getEntity(e.name.options);return s&&s.key?s.keyType:ue},{name:Li,instance:Ni}),save:ki.setTypes(ot.save,X,{name:Li,instance:Ni}),remove:ki.setTypes(ot.remove,X,{name:Li,instance:Ni}),setRelated:ki.setTypes(ot.setRelated,Rs,{name:Li,instance:Ni,relation:Ai,related:ji}),addRelated:ki.setTypes(ot.addRelated,Rs,{name:Li,instance:Ni,relation:Ai,related:qi}),removeRelated:ki.setTypes(ot.removeRelated,Rs,{name:Li,instance:Ni,relation:Ai,related:qi}),clearRelated:ki.setTypes(ot.clearRelated,Rs,{name:Li,instance:Ni,relation:Ai}),getRelated:ki.setTypes(ot.getRelated,(e,t)=>ji(e,t),{name:Li,instance:Ni,relation:Ai}),isRelated:ki.setTypes(ot.isRelated,Rs,{name:Li,instance:Ni,relation:Ai,related:qi})};_i.newInstance.rawTypes=!0,_i.get.rawTypes=!0,_i.getKey.rawTypes=!0,_i.save.rawTypes=!0,_i.remove.rawTypes=!0,_i.setRelated.rawTypes=!0,_i.addRelated.rawTypes=!0,_i.removeRelated.rawTypes=!0,_i.clearRelated.rawTypes=!0,_i.getRelated.rawTypes=!0,_i.isRelated.rawTypes=!0;const Vi=ue.operations,Fi={cmp:Vi.setTypes(ie.cmp,Rs,{value:ue,test:ue}),copy:Vi.setTypes(ie.copy,ue,{value:ue}),isDefined:Vi.setTypes(ie.isDefined,X,{value:ue}),getDefined:Vi.setTypes(ie.getDefined,X,{value:ue,defined:ue},{},{defined:e=>e.value instanceof qr?e.value.options:e.value}),coalesce:Vi.setTypes(ie.coalesce,e=>{let t=!0;const s=[],n=e=>{if(t&&e){let n=e instanceof qr;const r=n?e.options:e;r instanceof Cr&&r.options.forEach(e=>{const t=e instanceof qr,r=t?e.options:e;n=n||t,s.some(e=>e.exactType(r))||s.push(r)}),t=t&&n,s.some(e=>e.exactType(r))||s.push(r)}};return n(e.a),n(e.b),n(e.c),n(e.d),n(e.e),s.length>1?t?hi.optional(new Cr(s)):new Cr(s):1===s.length?t?hi.optional(s[0]):s[0]:ae},{a:ue,b:ue},{c:ue,d:ue,e:ue}),require:Vi.setTypes(ie.require,e=>e.value instanceof qr?e.value.options:e.value||ue,{value:e=>e.value||ue}),ternary:Vi.setTypes(ie.ternary,e=>e.truthy&&e.falsy?hi.mergeMany([e.truthy,e.falsy]):e.truthy?e.truthy:e.falsy?e.falsy:ue,{condition:X,truthy:e=>e.truthy||ue,falsy:e=>e.falsy||ue}),isValid:Vi.setTypes(ie.isValid,X,{value:ue}),isEqual:Vi.setTypes(ie.isEqual,X,{value:ue,test:ue}),isNotEqual:Vi.setTypes(ie.isNotEqual,X,{value:ue,test:ue}),isLess:Vi.setTypes(ie.isLess,X,{value:ue,test:ue}),isLessOrEqual:Vi.setTypes(ie.isLessOrEqual,X,{value:ue,test:ue}),isGreater:Vi.setTypes(ie.isGreater,X,{value:ue,test:ue}),isGreaterOrEqual:Vi.setTypes(ie.isGreaterOrEqual,X,{value:ue,test:ue}),asAny:Vi.setTypes(ie.asAny,e=>e.value||ue,{value:ue}),asBoolean:Vi.setTypes(ie.asBoolean,X,{value:ue}),asColor:Vi.setTypes(ie.asColor,ni,{value:ue}),asDate:Vi.setTypes(ie.asDate,Ir,{value:ue}),asList:Vi.setTypes(ie.asList,e=>Os.forItem(e.value||ue),{value:ue}),asMap:Vi.setTypes(ie.asMap,e=>Rr.forItem(e.value||ue),{value:ue}),asNumber:Vi.setTypes(ie.asNumber,Rs,{value:ue}),asObject:Vi.setTypes(ie.asObject,dt,{value:ue}),asText:Vi.setTypes(ie.asText,Re,{value:ue}),asTuple:Vi.setTypes(ie.asTuple,e=>ws.forItem([e.value||ue]),{value:ue}),asSet:Vi.setTypes(ie.asSet,e=>ci.forItem(e.value||ue),{value:ue})},Yi=X.operations,Gi={create:Yi.setTypes(W.create,X),maybe:Yi.setTypes(W.maybe,e=>hi.maybe(e.value,X),{value:ue}),and:Yi.setTypes(W.and,X,{a:X,b:X}),or:Yi.setTypes(W.or,X,{a:X,b:X}),xor:Yi.setTypes(W.xor,X,{a:X,b:X}),not:Yi.setTypes(W.not,X,{a:X}),cmp:Yi.setTypes(W.cmp,Rs,{value:X,test:X}),isValid:Yi.setTypes(W.isValid,X,{value:ue}),isTrue:Yi.setTypes(W.isTrue,X,{value:X}),isFalse:Yi.setTypes(W.isFalse,X,{value:X}),isEqual:Yi.setTypes(W.isEqual,X,{value:X,test:X}),isNotEqual:Yi.setTypes(W.isNotEqual,X,{value:X,test:X}),asAny:Yi.setTypes(W.asAny,ue,{value:X}),asBoolean:Yi.setTypes(W.asBoolean,e=>e.value||X,{value:X}),asColor:Yi.setTypes(W.asColor,ni,{value:X}),asDate:Yi.setTypes(W.asDate,Ir,{value:X}),asList:Yi.setTypes(W.asList,e=>Os.forItem(e.value||X),{value:X}),asMap:Yi.setTypes(W.asMap,e=>Rr.forItem(e.value||X),{value:X}),asNumber:Yi.setTypes(W.asNumber,Rs,{value:X}),asObject:Yi.setTypes(W.asObject,dt,{value:X}),asText:Yi.setTypes(W.asText,Re,{value:X}),asTuple:Yi.setTypes(W.asTuple,e=>ws.forItem([e.value||X]),{value:X}),asSet:Yi.setTypes(W.asSet,e=>ci.forItem(e.value||ue),{value:X})},Bi=ni.operations,Ui=new Ge({key:Re.baseType,value:Re.baseType,constants:new Map([["r","r"],["g","g"],["b","b"],["a","a"]])}),Wi=new Cr([ni.baseType,new Rs({})]),Hi=new Ge({key:Re.baseType,value:Re.baseType,constants:new Map([["Best Fit: #rrggbb or rgb()","rgb:bestfit"],["#rgb","rgb:hexShort"],["#rrggbb","rgb:hex"],["#rrggbbaa","rgb:hexLong"],["rgb(r, g, b)","rgb:rgb"],["rgba(r, g, b, a)","rgb:rgba"],["hsl(h, s, l)","hsl:hsl"],["hsla(h, s, l, a)","hsl:hsla"]])}),Ji=new Ge({key:Re.baseType,value:ni.baseType,constants:new Map([["Transparent",{r:255,g:255,b:255,a:0}],["Alice Blue",{r:240,g:248,b:255,a:255}],["Antique White",{r:250,g:235,b:215,a:255}],["Aqua",{r:0,g:255,b:255,a:255}],["Aquamarine",{r:127,g:255,b:212,a:255}],["Azure",{r:240,g:255,b:255,a:255}],["Beige",{r:245,g:245,b:220,a:255}],["Bisque",{r:255,g:228,b:196,a:255}],["Black",{r:0,g:0,b:0,a:255}],["Blanched Almond",{r:255,g:235,b:205,a:255}],["Blue",{r:0,g:0,b:255,a:255}],["Blue Violet",{r:138,g:43,b:226,a:255}],["Brown",{r:165,g:42,b:42,a:255}],["Burly Wood",{r:222,g:184,b:135,a:255}],["Cadet Blue",{r:95,g:158,b:160,a:255}],["Chartreuse",{r:127,g:255,b:0,a:255}],["Chocolate",{r:210,g:105,b:30,a:255}],["Coral",{r:255,g:127,b:80,a:255}],["Cornflower Blue",{r:100,g:149,b:237,a:255}],["Cornsilk",{r:255,g:248,b:220,a:255}],["Crimson",{r:220,g:20,b:60,a:255}],["Cyan",{r:0,g:255,b:255,a:255}],["Dark Blue",{r:0,g:0,b:139,a:255}],["Dark Cyan",{r:0,g:139,b:139,a:255}],["Dark Goldenrod",{r:184,g:134,b:11,a:255}],["Dark Gray",{r:169,g:169,b:169,a:255}],["Dark Green",{r:0,g:100,b:0,a:255}],["Dark Khaki",{r:189,g:183,b:107,a:255}],["Dark Magenta",{r:139,g:0,b:139,a:255}],["Dark Olive Green",{r:85,g:107,b:47,a:255}],["Dark Orange",{r:255,g:140,b:0,a:255}],["Dark Orchid",{r:153,g:50,b:204,a:255}],["Dark Red",{r:139,g:0,b:0,a:255}],["Dark Salmon",{r:233,g:150,b:122,a:255}],["Dark Sea Green",{r:143,g:188,b:139,a:255}],["Dark Slate Blue",{r:72,g:61,b:139,a:255}],["Dark Slate Gray",{r:47,g:79,b:79,a:255}],["Dark Turquoise",{r:0,g:206,b:209,a:255}],["Dark Violet",{r:148,g:0,b:211,a:255}],["Deep Pink",{r:255,g:20,b:147,a:255}],["Deep Sky Blue",{r:0,g:191,b:255,a:255}],["Dim Gray",{r:105,g:105,b:105,a:255}],["Dodger Blue",{r:30,g:144,b:255,a:255}],["Firebrick",{r:178,g:34,b:34,a:255}],["Floral White",{r:255,g:250,b:240,a:255}],["Forest Green",{r:34,g:139,b:34,a:255}],["Fuchsia",{r:255,g:0,b:255,a:255}],["Gainsboro",{r:220,g:220,b:220,a:255}],["Ghost White",{r:248,g:248,b:255,a:255}],["Gold",{r:255,g:215,b:0,a:255}],["Goldenrod",{r:218,g:165,b:32,a:255}],["Gray",{r:128,g:128,b:128,a:255}],["Green",{r:0,g:128,b:0,a:255}],["Green Yellow",{r:173,g:255,b:47,a:255}],["Honeydew",{r:240,g:255,b:240,a:255}],["Hot Pink",{r:255,g:105,b:180,a:255}],["Indian Red",{r:205,g:92,b:92,a:255}],["Indigo",{r:75,g:0,b:130,a:255}],["Ivory",{r:255,g:255,b:240,a:255}],["Khaki",{r:240,g:230,b:140,a:255}],["Lavender",{r:230,g:230,b:250,a:255}],["Lavender Blush",{r:255,g:240,b:245,a:255}],["Lawn Green",{r:124,g:252,b:0,a:255}],["Lemon Chiffon",{r:255,g:250,b:205,a:255}],["Light Blue",{r:173,g:216,b:230,a:255}],["Light Coral",{r:240,g:128,b:128,a:255}],["Light Cyan",{r:224,g:255,b:255,a:255}],["Light Goldenrod Yellow",{r:250,g:250,b:210,a:255}],["Light Gray",{r:211,g:211,b:211,a:255}],["Light Green",{r:144,g:238,b:144,a:255}],["Light Pink",{r:255,g:182,b:193,a:255}],["Light Salmon",{r:255,g:160,b:122,a:255}],["Light Sea Green",{r:32,g:178,b:170,a:255}],["Light Sky Blue",{r:135,g:206,b:250,a:255}],["Light Slate Gray",{r:119,g:136,b:153,a:255}],["Light Steel Blue",{r:176,g:196,b:222,a:255}],["Light Yellow",{r:255,g:255,b:224,a:255}],["Lime",{r:0,g:255,b:0,a:255}],["LimeGreen",{r:50,g:205,b:50,a:255}],["Linen",{r:250,g:240,b:230,a:255}],["Magenta",{r:255,g:0,b:255,a:255}],["Maroon",{r:128,g:0,b:0,a:255}],["Medium Aquamarine",{r:102,g:205,b:170,a:255}],["Medium Blue",{r:0,g:0,b:205,a:255}],["Medium Orchid",{r:186,g:85,b:211,a:255}],["Medium Purple",{r:147,g:112,b:219,a:255}],["Medium Sea Green",{r:60,g:179,b:113,a:255}],["Medium Slate Blue",{r:123,g:104,b:238,a:255}],["Medium Spring Green",{r:0,g:250,b:154,a:255}],["Medium Turquoise",{r:72,g:209,b:204,a:255}],["Medium VioletRed",{r:199,g:21,b:133,a:255}],["Midnight Blue",{r:25,g:25,b:112,a:255}],["Mint Cream",{r:245,g:255,b:250,a:255}],["Misty Rose",{r:255,g:228,b:225,a:255}],["Moccasin",{r:255,g:228,b:181,a:255}],["Navajo White",{r:255,g:222,b:173,a:255}],["Navy",{r:0,g:0,b:128,a:255}],["Old Lace",{r:253,g:245,b:230,a:255}],["Olive",{r:128,g:128,b:0,a:255}],["Olive Drab",{r:107,g:142,b:35,a:255}],["Orange",{r:255,g:165,b:0,a:255}],["Orange Red",{r:255,g:69,b:0,a:255}],["Orchid",{r:218,g:112,b:214,a:255}],["Pale Goldenrod",{r:238,g:232,b:170,a:255}],["Pale Green",{r:152,g:251,b:152,a:255}],["Pale Turquoise",{r:175,g:238,b:238,a:255}],["Pale Violet Red",{r:219,g:112,b:147,a:255}],["Papaya Whip",{r:255,g:239,b:213,a:255}],["Peach Puff",{r:255,g:218,b:185,a:255}],["Peru",{r:205,g:133,b:63,a:255}],["Pink",{r:255,g:192,b:203,a:255}],["Plum",{r:221,g:160,b:221,a:255}],["Powder Blue",{r:176,g:224,b:230,a:255}],["Purple",{r:128,g:0,b:128,a:255}],["Red",{r:255,g:0,b:0,a:255}],["Rosy Brown",{r:188,g:143,b:143,a:255}],["Royal Blue",{r:65,g:105,b:225,a:255}],["Saddle Brown",{r:139,g:69,b:19,a:255}],["Salmon",{r:250,g:128,b:114,a:255}],["Sandy Brown",{r:244,g:164,b:96,a:255}],["Sea Green",{r:46,g:139,b:87,a:255}],["Sea Shell",{r:255,g:245,b:238,a:255}],["Sienna",{r:160,g:82,b:45,a:255}],["Silver",{r:192,g:192,b:192,a:255}],["Sky Blue",{r:135,g:206,b:235,a:255}],["Slate Blue",{r:106,g:90,b:205,a:255}],["Slate Gray",{r:112,g:128,b:144,a:255}],["Snow",{r:255,g:250,b:250,a:255}],["Spring Green",{r:0,g:255,b:127,a:255}],["Steel Blue",{r:70,g:130,b:180,a:255}],["Tan",{r:210,g:180,b:140,a:255}],["Teal",{r:0,g:128,b:128,a:255}],["Thistle",{r:216,g:191,b:216,a:255}],["Tomato",{r:255,g:99,b:71,a:255}],["Turquoise",{r:64,g:224,b:208,a:255}],["Violet",{r:238,g:130,b:238,a:255}],["Wheat",{r:245,g:222,b:179,a:255}],["White",{r:255,g:255,b:255,a:255}],["White Smoke",{r:245,g:245,b:245,a:255}],["Yellow",{r:255,g:255,b:0,a:255}],["Yellow Green",{r:154,g:205,b:50,a:255}]])}),Ki=new Ge({key:Re.baseType,value:Re.baseType,constants:new Map([["Multiply","multiply"],["Screen","screen"],["Overlay","overlay"],["Hard Light","hard"],["Soft Light","soft"],["Dodge","dodge"],["Burn","burn"],["Divide","divide"],["Addition","add"],["Subtract","sub"],["Difference","diff"],["Darken Only","darken"],["Lighten Only","lighten"]])}),zi={create:Bi.setTypes(Br.create,ni),maybe:Bi.setTypes(Br.maybe,e=>hi.maybe(e.value,ni),{value:ue}),cmp:Bi.setTypes(Br.cmp,Rs,{value:ni,test:ni}),copy:Bi.setTypes(Br.copy,ni,{value:ni}),build:Bi.setTypes(Br.build,ni,{r:Rs,g:Rs,b:Rs},{a:Rs}),map:Bi.setTypes(Br.map,ni,{value:ni,r:Rs,g:Rs,b:Rs},{a:Rs},{value:Rs,component:Ui}),op:Bi.setTypes(Br.op,ni,{value:ni,test:ni,r:Rs,g:Rs,b:Rs},{a:Rs},{value:Rs,test:Rs,component:Ui}),clamp:Bi.setTypes(Br.clamp,ni,{value:ni}),add:Bi.setTypes(Br.add,ni,{value:ni,addend:Wi},{alpha:X}),adds:Bi.setTypes(Br.adds,ni,{value:ni,addend:Wi,addendScale:Wi},{alpha:X}),sub:Bi.setTypes(Br.sub,ni,{value:ni,subtrahend:Wi},{alpha:X}),mul:Bi.setTypes(Br.mul,ni,{value:ni,multiplier:Wi},{alpha:X}),div:Bi.setTypes(Br.div,ni,{value:ni,divisor:Wi},{alpha:X}),mod:Bi.setTypes(Br.mod,ni,{value:ni,divisor:Wi},{alpha:X}),format:Bi.setTypes(Br.format,Re,{value:ni,format:Hi}),parse:Bi.setTypes(Br.parse,hi.optional(ni),{value:ue}),lerp:Bi.setTypes(Br.lerp,ni,{start:ni,end:ni,delta:Rs}),lighten:Bi.setTypes(Br.lighten,ni,{value:ni,amount:Rs}),darken:Bi.setTypes(Br.darken,ni,{value:ni,amount:Rs}),toHSL:Bi.setTypes(Br.toHSL,Zr.type,{value:ni}),fromHSL:Bi.setTypes(Br.fromHSL,ni,{value:Zr.type}),luminance:Bi.setTypes(Br.luminance,Rs,{value:ni}),contrast:Bi.setTypes(Br.contrast,Rs,{value:ni,test:ni}),invert:Bi.setTypes(Br.invert,ni,{value:ni},{alpha:X}),opaque:Bi.setTypes(Br.opaque,ni,{value:ni}),alpha:Bi.setTypes(Br.alpha,ni,{value:ni,alpha:Rs}),distance:Bi.setTypes(Br.distance,Rs,{value:ni,test:ni}),named:Bi.setTypes(Br.named,ni,{name:Ji}),getName:Bi.setTypes(Br.getName,Re,{value:ni}),blend:Bi.setTypes(Br.blend,ni,{top:ni,bottom:ni,mode:Ki}),isValid:Bi.setTypes(Br.isValid,X,{value:ue}),isEqual:Bi.setTypes(Br.isEqual,X,{value:ni,test:ni},{epsilon:Rs}),isNotEqual:Bi.setTypes(Br.isNotEqual,X,{value:ni,test:ni},{epsilon:Rs}),isLess:Bi.setTypes(Br.isLess,X,{value:ni,test:ni}),isLessOrEqual:Bi.setTypes(Br.isLessOrEqual,X,{value:ni,test:ni}),isGreater:Bi.setTypes(Br.isGreater,X,{value:ni,test:ni}),isGreaterOrEqual:Bi.setTypes(Br.isGreaterOrEqual,X,{value:ni,test:ni}),asAny:Bi.setTypes(Br.asAny,ue,{value:ni}),asBoolean:Bi.setTypes(Br.asBoolean,X,{value:ni}),asColor:Bi.setTypes(Br.asColor,ni,{value:ni}),asDate:Bi.setTypes(Br.asDate,Ir,{value:ni}),asList:Bi.setTypes(Br.asList,e=>Os.forItem(e.value||ni),{value:ni}),asMap:Bi.setTypes(Br.asMap,e=>Rr.forItem(e.value||ni),{value:ni}),asNumber:Bi.setTypes(Br.asNumber,Rs,{value:ni}),asObject:Bi.setTypes(Br.asObject,e=>e.value||ni,{value:ni}),asText:Bi.setTypes(Br.asText,Re,{value:ni}),asTuple:Bi.setTypes(Br.asTuple,e=>ws.forItem([e.value||ni]),{value:ni}),asSet:Bi.setTypes(Br.asSet,e=>ci.forItem(e.value||ue),{value:ni})},Xi=Ir.operations,$i=new Ge({key:Re.baseType.newInstance(),value:Re.baseType.newInstance(),constants:new Map([["Timestamp","timestamp"],["Timestamp (seconds)","timestampSeconds"],["Millisecond","millis"],["Second","second"],["Minute","minute"],["Hour","hour"],["Day","day"],["Day of Month","dayOfMonth"],["Last Day of Month","lastDayOfMonth"],["Day of Year","dayOfYear"],["Day of Week","dayOfWeek"],["Week","week"],["Week of Month","weekOfMonth"],["Weekspan of Month","weekspanOfMonth"],["Full Week of Month","fullWeekOfMonth"],["Last Weekspan of Month","lastWeekspanOfMonth"],["Last Full Week of Month","lastFullWeekOfMonth"],["Week of Year","weekOfYear"],["Weekspan of Year","weekspanOfYear"],["Full Week of Year","fullWeekOfYear"],["Last Weekspan of Year","lastWeekspanOfYear"],["Last Full Week of Year","lastFullWeekOfYear"],["Month","month"],["Quarter","quarter"],["Year","year"],["Time Identifier","timeIdentifier"],["Day Identifier","dayIdentifier"],["Week Identifier","weekIdentifier"],["Month Identifier","monthIdentifier"],["Quarter Identifier","quarterIdentifier"]])}),Qi=new Ge({key:Re.baseType.newInstance(),value:Re.baseType.newInstance(),constants:new Map([["Millisecond","millis"],["Second","second"],["Minute","minute"],["Hour","hour"],["Day","day"],["Week","week"],["Month","month"],["Quarter","quarter"],["Year","year"]])}),Zi=new Ge({key:Re.baseType.newInstance(),value:Re.baseType.newInstance(),constants:new Map([["None","none"],["Floor","floor"],["Ceil","ceil"],["Round","round"],["Truncate","truncate"],["Up","up"],["Down","down"]])}),ea={create:Xi.setTypes(wr.create,Ir),now:Xi.setTypes(wr.now,Ir),today:Xi.setTypes(wr.today,Ir),tomorrow:Xi.setTypes(wr.tomorrow,Ir),yesterday:Xi.setTypes(wr.yesterday,Ir),maybe:Xi.setTypes(wr.maybe,e=>hi.maybe(e.value,X),{value:ue}),parse:Xi.setTypes(wr.parse,hi.optional(Ir),{value:new Cr([Ir.baseType,Rs.baseType,Re.baseType])},{parseAsUTC:X}),fromText:Xi.setTypes(wr.fromText,hi.optional(Ir),{value:Re},{parseAsUTC:X}),fromTimestamp:Xi.setTypes(wr.fromTimestamp,Ir,{value:Rs}),fromTimestampSeconds:Xi.setTypes(wr.fromTimestampSeconds,Ir,{value:Rs}),min:Xi.setTypes(wr.min,Ir,{value:Ir,test:Ir}),max:Xi.setTypes(wr.max,Ir,{value:Ir,test:Ir}),get:Xi.setTypes(wr.get,Rs,{value:Ir,property:$i}),set:Xi.setTypes(wr.set,Ir,{value:Ir,property:$i,set:Rs}),add:Xi.setTypes(wr.add,Ir,{value:Ir,unit:Qi},{amount:Rs}),sub:Xi.setTypes(wr.sub,Ir,{value:Ir,unit:Qi},{amount:Rs}),startOf:Xi.setTypes(wr.startOf,Ir,{value:Ir,unit:Qi}),endOf:Xi.setTypes(wr.endOf,Ir,{value:Ir,unit:Qi},{inclusive:X}),daysInMonth:Xi.setTypes(wr.daysInMonth,Rs,{value:Ir}),daysInYear:Xi.setTypes(wr.daysInYear,Rs,{value:Ir}),weeksInYear:Xi.setTypes(wr.weeksInYear,Rs,{value:Ir}),copy:Xi.setTypes(wr.copy,Ir,{value:Ir}),cmp:Xi.setTypes(wr.cmp,Rs,{value:Ir,test:Ir},{unit:Qi}),diff:Xi.setTypes(wr.diff,Rs,{value:Ir,test:Ir},{unit:Qi,absolute:X,adjust:Zi}),timezoneOffset:Xi.setTypes(wr.timezoneOffset,Rs,{value:Ir}),toText:Xi.setTypes(wr.toText,Re,{value:Ir,format:Re}),toISOText:Xi.setTypes(wr.toISOText,Re,{value:Ir}),isValid:Xi.setTypes(wr.isValid,X,{value:ue}),isEqual:Xi.setTypes(wr.isEqual,X,{value:Ir,test:Ir},{unit:Qi}),isBefore:Xi.setTypes(wr.isBefore,X,{value:Ir,test:Ir},{unit:Qi}),isBeforeOrEqual:Xi.setTypes(wr.isBeforeOrEqual,X,{value:Ir,test:Ir},{unit:Qi}),isAfter:Xi.setTypes(wr.isAfter,X,{value:Ir,test:Ir},{unit:Qi}),isAfterOrEqual:Xi.setTypes(wr.isAfterOrEqual,X,{value:Ir,test:Ir},{unit:Qi}),isBetween:Xi.setTypes(wr.isBetween,X,{value:Ir,start:Ir,end:Ir},{unit:Qi,startInclusive:X,endInclusive:X}),isStartOf:Xi.setTypes(wr.isStartOf,X,{value:Ir,unit:Qi}),isEndOf:Xi.setTypes(wr.isEndOf,X,{value:Ir,unit:Qi},{inclusive:X}),isDST:Xi.setTypes(wr.isDST,X,{value:Ir}),isLeapYear:Xi.setTypes(wr.isLeapYear,X,{value:Ir}),asAny:Xi.setTypes(wr.asAny,ue,{value:Ir}),asBoolean:Xi.setTypes(wr.asBoolean,X,{value:Ir}),asColor:Xi.setTypes(wr.asColor,ni,{value:Ir}),asDate:Xi.setTypes(wr.asDate,e=>e.value||Ir,{value:Ir}),asList:Xi.setTypes(wr.asList,e=>Os.forItem(e.value||Ir),{value:Ir}),asMap:Xi.setTypes(wr.asMap,e=>Rr.forItem(e.value||Ir),{value:Ir}),asNumber:Xi.setTypes(wr.asNumber,Rs,{value:Ir}),asObject:Xi.setTypes(wr.asObject,dt,{value:Ir}),asText:Xi.setTypes(wr.asText,Re,{value:Ir}),asTuple:Xi.setTypes(wr.asTuple,e=>ws.forItem([e.value||Ir]),{value:Ir}),asSet:Xi.setTypes(wr.asSet,e=>ci.forItem(e.value||ue),{value:Ir})},ta=Os.operations,sa=(e,t)=>e instanceof Os?e:t,na=(e,t)=>e instanceof Os?e.options.item:t,ra=e=>sa(e.list)||Os,ia=e=>sa(e.value)||Os,aa=e=>sa(e.list)?e.list.options.item:ue,oa=e=>hi.optional(aa(e)),ua=e=>sa(e.value)?e.value.options.item:ue,pa=e=>e.reduce||e.initial||ue,la={list:ra,value:aa,test:aa},ca={list:ia,value:ua,test:ua},ha={list:ra,item:aa,index:Rs},da={create:ta.setTypes(fs.create,Os),createLike:ta.setTypes(fs.createLike,ra,{list:ra}),createFor:ta.setTypes(fs.createFor,e=>Os.forItem(e.item||ue),{item:e=>e.item||ue}),maybe:ta.setTypes(fs.maybe,e=>hi.maybe(e.value,Os),{value:ue}),build:ta.setTypes(fs.build,e=>Os.forItem(e.item||ue),{count:Rs,item:e=>e.item||ue},{sameItem:X},{list:e=>Os.forItem(e.item||ue),index:Rs,last:e=>e.item||ue,count:Rs}),get:ta.setTypes(fs.get,oa,{list:ra,index:Rs}),set:ta.setTypes(fs.set,oa,{list:ra,index:Rs,value:aa}),add:ta.setTypes(fs.add,ra,{list:ra,item:aa}),addFirst:ta.setTypes(fs.addFirst,ra,{list:ra,item:aa}),addLast:ta.setTypes(fs.addLast,ra,{list:ra,item:aa}),insert:ta.setTypes(fs.insert,ra,{list:ra,item:aa,index:Rs}),remove:ta.setTypes(fs.remove,Rs,{list:ra,item:aa,isEqual:X},{},la),removeFirst:ta.setTypes(fs.removeFirst,oa,{list:ra}),removeLast:ta.setTypes(fs.removeLast,oa,{list:ra}),removeAt:ta.setTypes(fs.removeAt,oa,{list:ra,index:Rs}),removeWhere:ta.setTypes(fs.removeWhere,ra,{list:ra,where:X},{},ha),clear:ta.setTypes(fs.clear,ra,{list:ra}),contains:ta.setTypes(fs.contains,X,{list:ra,item:aa,isEqual:X},{},la),find:ta.setTypes(fs.find,oa,{list:ra,where:X},{reverse:X,start:Rs},ha),copy:ta.setTypes(fs.copy,ra,{list:ra},{deepCopy:aa},{copy:aa}),reverse:ta.setTypes(fs.reverse,ra,{list:ra}),exclude:ta.setTypes(fs.exclude,ra,{list:ra,exclude:ra,isEqual:X},{},la),overlap:ta.setTypes(fs.overlap,ra,{list:ra,overlap:ra,isEqual:X},{},la),sort:ta.setTypes(fs.sort,ra,{list:ra,compare:Rs},{},la),shuffle:ta.setTypes(fs.shuffle,ra,{list:ra},{times:Rs}),unique:ta.setTypes(fs.unique,ra,{list:ra,isEqual:X},{},la),duplicates:ta.setTypes(fs.duplicates,ra,{list:ra,isEqual:X},{once:X},la),take:ta.setTypes(fs.take,ra,{list:ra,count:Rs}),skip:ta.setTypes(fs.skip,ra,{list:ra,count:Rs}),drop:ta.setTypes(fs.drop,ra,{list:ra,count:Rs}),append:ta.setTypes(fs.append,ra,{list:ra,append:ra}),prepend:ta.setTypes(fs.prepend,ra,{list:ra,prepend:ra}),indexOf:ta.setTypes(fs.indexOf,Rs,{list:ra,item:aa,isEqual:X},{start:Rs},la),lastIndexOf:ta.setTypes(fs.lastIndexOf,Rs,{list:ra,item:aa,isEqual:X},{start:Rs},la),findIndex:ta.setTypes(fs.findIndex,Rs,{list:ra,where:X},{reverse:X,start:Rs},ha),last:ta.setTypes(fs.last,oa,{list:ra}),first:ta.setTypes(fs.first,oa,{list:ra}),count:ta.setTypes(fs.count,Rs,{list:ra}),randomList:ta.setTypes(fs.randomList,ra,{list:ra,count:Rs}),random:ta.setTypes(fs.random,oa,{list:ra}),join:ta.setTypes(fs.join,Re,{list:ra},{delimiter:Re,toText:Re,prefix:Re,suffix:Re},ha),each:ta.setTypes(fs.each,ra,{list:ra,each:ue},{reverse:X},ha),filter:ta.setTypes(fs.filter,ra,{list:ra,filter:X},{},ha),not:ta.setTypes(fs.not,ra,{list:ra,not:X},{},ha),map:ta.setTypes(fs.map,e=>Os.forItem(e.transform||ue),{list:ra,transform:e=>e.transform||ue},{},ha),split:ta.setTypes(fs.split,e=>hi.object({pass:ra(e),fail:ra(e)}),{list:ra,pass:X},{},ha),reduce:ta.setTypes(fs.reduce,pa,{list:ra,reduce:pa,initial:pa},{},{list:ra,item:aa,reduced:pa,index:Rs}),cmp:ta.setTypes(fs.cmp,X,{value:ia,test:ia,compare:Rs},{},ca),group:ta.setTypes(fs.group,e=>Os.forItem(hi.object({by:e.by||ue,group:Os.forItem(e.getValue||aa(e))})),{list:ra,by:e=>e.by||ue},{getValue:e=>e.getValue||aa(e)},ha),toListMap:ta.setTypes(fs.toListMap,e=>Rr.forItem(Os.forItem(e.getValue||aa(e)),e.getKey||ue),{list:ra,getKey:e=>e.getKey||ue},{getValue:e=>e.getValue||aa(e)},ha),toMap:ta.setTypes(fs.toMap,e=>Rr.forItem(e.getValue||aa(e),e.getKey||ue),{list:ra,getKey:e=>e.getKey||ue},{getValue:e=>e.getValue||aa(e)},ha),joinInner:ta.setTypes(fs.joinInner,e=>Os.forItem(e.join||ue),{a:e=>sa(e.a,Os),b:e=>sa(e.b,Os),on:X,join:ue},{},{onA:e=>na(e.a,ue),onB:e=>na(e.b,ue),joinA:e=>na(e.a,ue),joinB:e=>na(e.b,ue)}),joinLeft:ta.setTypes(fs.joinLeft,e=>Os.forItem(e.join||ue),{a:e=>sa(e.a,Os),b:e=>sa(e.b,Os),on:X,join:ue},{},{onA:e=>na(e.a,ue),onB:e=>na(e.b,ue),joinA:e=>na(e.a,ue),joinB:e=>hi.optional(na(e.b,ue))}),joinRight:ta.setTypes(fs.joinRight,e=>Os.forItem(e.join||ue),{a:e=>sa(e.a,Os),b:e=>sa(e.b,Os),on:X,join:ue},{},{onA:e=>na(e.a,ue),onB:e=>na(e.b,ue),joinA:e=>hi.optional(na(e.a,ue)),joinB:e=>na(e.b,ue)}),joinFull:ta.setTypes(fs.joinFull,e=>Os.forItem(e.join||ue),{a:e=>sa(e.a,Os),b:e=>sa(e.b,Os),on:X,join:ue},{},{onA:e=>na(e.a,ue),onB:e=>na(e.b,ue),joinA:e=>hi.optional(na(e.a,ue)),joinB:e=>hi.optional(na(e.b,ue))}),joinCross:ta.setTypes(fs.joinCross,e=>Os.forItem(e.join||ue),{a:e=>sa(e.a,Os),b:e=>sa(e.b,Os),join:ue},{},{joinA:e=>na(e.a,ue),joinB:e=>na(e.b,ue)}),min:ta.setTypes(fs.min,hi.optional(Rs),{list:ra,value:Rs},{},ha),max:ta.setTypes(fs.max,hi.optional(Rs),{list:ra,value:Rs},{},ha),sum:ta.setTypes(fs.sum,hi.optional(Rs),{list:ra,value:Rs},{},ha),avg:ta.setTypes(fs.avg,hi.optional(Rs),{list:ra,value:Rs},{},ha),std:ta.setTypes(fs.std,hi.optional(Rs),{list:ra,value:Rs},{},ha),variance:ta.setTypes(fs.variance,hi.optional(Rs),{list:ra,value:Rs},{},ha),median:ta.setTypes(fs.median,hi.optional(Rs),{list:ra,value:Rs},{},ha),bitand:ta.setTypes(fs.bitand,Rs,{list:ra,value:Rs},{},ha),bitor:ta.setTypes(fs.bitor,Rs,{list:ra,value:Rs},{},ha),bitxor:ta.setTypes(fs.bitxor,Rs,{list:ra,value:Rs},{},ha),isValid:ta.setTypes(fs.isValid,X,{value:ue}),isEmpty:ta.setTypes(fs.isEmpty,X,{list:ra}),isNotEmpty:ta.setTypes(fs.isNotEmpty,X,{list:ra}),isEqual:ta.setTypes(fs.isEqual,X,{list:ra,test:ra,isEqual:X},{},la),isNotEqual:ta.setTypes(fs.isNotEqual,X,{list:ra,test:ra,isEqual:X},{},la),isLess:ta.setTypes(fs.isLess,X,{value:ia,test:ia,compare:Rs},{},ca),isLessOrEqual:ta.setTypes(fs.isLessOrEqual,X,{value:ia,test:ia,compare:Rs},{},ca),isGreater:ta.setTypes(fs.isGreater,X,{value:ia,test:ia,compare:Rs},{},ca),isGreaterOrEqual:ta.setTypes(fs.isGreaterOrEqual,X,{value:ia,test:ia,compare:Rs},{},ca),asAny:ta.setTypes(fs.asAny,ue,{value:ia}),asBoolean:ta.setTypes(fs.asBoolean,X,{value:ia}),asColor:ta.setTypes(fs.asColor,ni,{value:ia}),asDate:ta.setTypes(fs.asDate,Ir,{value:ia}),asList:ta.setTypes(fs.asList,ia,{value:ia}),asMap:ta.setTypes(fs.asMap,e=>Rr.forItem(ua(e)),{value:ia}),asNumber:ta.setTypes(fs.asNumber,Rs,{value:ia}),asObject:ta.setTypes(fs.asObject,dt,{value:ia}),asText:ta.setTypes(fs.asText,Re,{value:ia}),asTuple:ta.setTypes(fs.asTuple,ws,{value:ia}),asSet:ta.setTypes(fs.asSet,e=>ci.forItem(ua(e)),{value:ia})},ma=Rr.operations,ya=e=>e instanceof Rr?e:void 0,ga=e=>ya(e.map)||Rr,fa=e=>ya(e.map)?e.map.options.value:ue,va=e=>hi.optional(fa(e)),Ta=e=>ya(e.map)?e.map.options.key:Re,ba={map:ga,key:Ta,value:fa},xa=e=>ya(e.value)||Rr,Ea=e=>ya(e.value)?e.value.options.value:ue,Oa={key:e=>ya(e.value)?e.value.options.key:Re,value:Ea,test:Ea},Sa={create:ma.setTypes(_e.create,Rr),createLike:ma.setTypes(_e.createLike,ga,{map:ga}),createFor:ma.setTypes(_e.createFor,e=>Rr.forItem(e.value||ue,e.key||Re),{value:e=>e.value||ue},{key:e=>e.key||Re}),maybe:ma.setTypes(_e.maybe,e=>hi.maybe(e.value,Rr),{value:ue}),get:ma.setTypes(_e.get,va,{map:ga,key:Ta}),set:ma.setTypes(_e.set,va,{map:ga,key:Ta,value:fa},{},{existingValue:fa}),has:ma.setTypes(_e.has,X,{map:ga,key:Ta}),delete:ma.setTypes(_e.delete,X,{map:ga,key:Ta}),keys:ma.setTypes(_e.keys,e=>Os.forItem(Ta(e)),{map:ga}),values:ma.setTypes(_e.values,e=>Os.forItem(fa(e)),{map:ga}),entries:ma.setTypes(_e.entries,e=>hi.object({keys:Os.forItem(Ta(e)),values:Os.forItem(fa(e))}),{map:ga}),pairs:ma.setTypes(_e.pairs,e=>Os.forItem(hi.object({key:Ta(e),value:fa(e)})),{map:ga}),clear:ma.setTypes(_e.clear,ga,{map:ga}),count:ma.setTypes(_e.count,Rs,{map:ga}),cmp:ma.setTypes(_e.cmp,Rs,{value:xa,test:xa,compare:Rs},{},Oa),copy:ma.setTypes(_e.copy,ga,{map:ga},{deepCopy:fa,deepCopyKey:Ta},ba),map:ma.setTypes(_e.map,e=>Rr.forItem(e.transform||fa(e),e.transformKey||Ta(e)),{map:ga},{transform:e=>e.transform||fa(e),transformKey:e=>e.transformKey||Ta(e)},ba),toPlainObject:ma.setTypes(_e.toPlainObject,ue,{map:ga}),fromPlainObject:ma.setTypes(_e.fromPlainObject,e=>{if(!(e.object instanceof dt))return Rr;const t=O(e.object.options.props);return Rr.forItem(hi.mergeMany(t,Re.baseType))},{object:e=>e.object||dt}),isValid:ma.setTypes(_e.isValid,X,{value:ue}),isEqual:ma.setTypes(_e.isEqual,X,{value:xa,test:xa,isEqual:X},{},Oa),isNotEqual:ma.setTypes(_e.isNotEqual,X,{value:xa,test:xa,isEqual:X},{},Oa),isLess:ma.setTypes(_e.isLess,X,{value:xa,test:xa,compare:Rs},{},Oa),isLessOrEqual:ma.setTypes(_e.isLessOrEqual,X,{value:xa,test:xa,compare:Rs},{},Oa),isGreater:ma.setTypes(_e.isGreater,X,{value:xa,test:xa,compare:Rs},{},Oa),isGreaterOrEqual:ma.setTypes(_e.isGreaterOrEqual,X,{value:xa,test:xa,compare:Rs},{},Oa),asAny:ma.setTypes(_e.asAny,ue,{value:Rr}),asBoolean:ma.setTypes(_e.asBoolean,X,{value:Rr}),asColor:ma.setTypes(_e.asColor,ni,{value:Rr}),asDate:ma.setTypes(_e.asDate,Ir,{value:Rr}),asList:ma.setTypes(_e.asList,e=>Os.forItem(Ea(e)),{value:Rr}),asMap:ma.setTypes(_e.asMap,e=>e.value||Rr,{value:Rr}),asNumber:ma.setTypes(_e.asNumber,e=>Rs,{value:Rr}),asObject:ma.setTypes(_e.asObject,dt,{value:Rr}),asText:ma.setTypes(_e.asText,Re,{value:Rr}),asTuple:ma.setTypes(_e.asTuple,e=>ws.forItem([e.value||Rr]),{value:Rr}),asSet:ma.setTypes(_e.asSet,e=>ci.forItem(Ea(e)),{value:Rr})},wa=Rs.operations,Ma=new Ge({key:Re.baseType.newInstance(),value:Re.baseType.newInstance(),constants:new Map([["has the bits","contain"],["does not have the bits","notcontain"],["has some of the bits","overlap"],["has none of the bits","none"],["has the same bits","equal"],["does not have the same bits","not"],["has all bits in","subset"]])}),Ia={create:wa.setTypes(ds.create,Rs),pi:wa.setTypes(ds.pi,Rs),pi2:wa.setTypes(ds.pi2,Rs),piHalf:wa.setTypes(ds.piHalf,Rs),e:wa.setTypes(ds.e,Rs),sqrt2:wa.setTypes(ds.sqrt2,Rs),sqrt12:wa.setTypes(ds.sqrt12,Rs),ln2:wa.setTypes(ds.ln2,Rs),ln10:wa.setTypes(ds.ln10,Rs),log2e:wa.setTypes(ds.log2e,Rs),log10e:wa.setTypes(ds.log10e,Rs),add:wa.setTypes(ds.add,Rs,{value:Rs,addend:Rs}),sub:wa.setTypes(ds.sub,Rs,{value:Rs,subtrahend:Rs}),mul:wa.setTypes(ds.mul,Rs,{value:Rs,multiplier:Rs}),div:wa.setTypes(ds.div,Rs,{value:Rs,divisor:Rs}),mod:wa.setTypes(ds.mod,Rs,{value:Rs,divisor:Rs}),min:wa.setTypes(ds.min,Rs,{a:Rs,b:Rs}),max:wa.setTypes(ds.max,Rs,{a:Rs,b:Rs}),pow:wa.setTypes(ds.pow,Rs,{value:Rs,exponent:Rs}),atan2:wa.setTypes(ds.atan2,Rs,{x:Rs,y:Rs}),hypot:wa.setTypes(ds.hypot,Rs,{a:Rs,b:Rs}),choose:wa.setTypes(ds.choose,Rs,{n:Rs,k:Rs}),gcd:wa.setTypes(ds.gcd,Rs,{a:Rs,b:Rs}),bitAnd:wa.setTypes(ds.bitAnd,Rs,{a:Rs,b:Rs}),bitOr:wa.setTypes(ds.bitOr,Rs,{a:Rs,b:Rs}),bitXor:wa.setTypes(ds.bitXor,Rs,{a:Rs,b:Rs}),cmp:wa.setTypes(ds.cmp,Rs,{value:Rs,test:Rs}),maybe:wa.setTypes(ds.maybe,e=>hi.maybe(e.value,Rs),{value:ue}),sqrt:wa.setTypes(ds.sqrt,Rs,{value:Rs}),sq:wa.setTypes(ds.sq,Rs,{value:Rs}),cbrt:wa.setTypes(ds.cbrt,Rs,{value:Rs}),floor:wa.setTypes(ds.floor,Rs,{value:Rs}),ceil:wa.setTypes(ds.ceil,Rs,{value:Rs}),up:wa.setTypes(ds.up,Rs,{value:Rs}),down:wa.setTypes(ds.down,Rs,{value:Rs}),round:wa.setTypes(ds.round,Rs,{value:Rs}),abs:wa.setTypes(ds.abs,Rs,{value:Rs}),neg:wa.setTypes(ds.neg,Rs,{value:Rs}),sign:wa.setTypes(ds.sign,Rs,{value:Rs}),log:wa.setTypes(ds.log,Rs,{value:Rs}),sin:wa.setTypes(ds.sin,Rs,{value:Rs}),cos:wa.setTypes(ds.cos,Rs,{value:Rs}),tan:wa.setTypes(ds.tan,Rs,{value:Rs}),sinh:wa.setTypes(ds.sinh,Rs,{value:Rs}),cosh:wa.setTypes(ds.cosh,Rs,{value:Rs}),asin:wa.setTypes(ds.asin,Rs,{value:Rs}),acos:wa.setTypes(ds.acos,Rs,{value:Rs}),atan:wa.setTypes(ds.atan,Rs,{value:Rs}),factorial:wa.setTypes(ds.factorial,Rs,{value:Rs}),bitFlip:wa.setTypes(ds.bitFlip,Rs,{value:Rs}),clamp:wa.setTypes(ds.clamp,Rs,{value:Rs,min:Rs,max:Rs}),triangleHeight:wa.setTypes(ds.triangleHeight,Rs,{base:Rs,side1:Rs,side2:Rs}),lerp:wa.setTypes(ds.lerp,Rs,{delta:Rs,start:Rs,end:Rs}),rnd:wa.setTypes(ds.rnd,Rs,{},{min:Rs,max:Rs,whole:X,includeMax:X}),toBaseText:wa.setTypes(ds.toBaseText,Re,{value:Rs},{base:Rs,minDigits:Rs}),toText:wa.setTypes(ds.toText,Re,{value:Rs},{prefix:Re,suffix:Re,minPlaces:Rs,maxPlaces:Rs,useExponent:X,thousandSeparator:Re}),toPercent:wa.setTypes(ds.toPercent,Re,{value:Rs},{minPlaces:Rs,maxPlaces:Rs,thousandSeparator:Re}),fromPercent:wa.setTypes(ds.fromPercent,hi.optional(Rs),{value:Re}),isValid:wa.setTypes(ds.isValid,X,{value:ue}),isZero:wa.setTypes(ds.isZero,X,{value:Rs},{epsilon:Rs}),isEqual:wa.setTypes(ds.isEqual,X,{value:Rs,test:Rs},{epsilon:Rs}),isNotEqual:wa.setTypes(ds.isNotEqual,X,{value:Rs,test:Rs},{epsilon:Rs}),isLess:wa.setTypes(ds.isLess,X,{value:Rs,test:Rs}),isLessOrEqual:wa.setTypes(ds.isLessOrEqual,X,{value:Rs,test:Rs}),isGreater:wa.setTypes(ds.isGreater,X,{value:Rs,test:Rs}),isGreaterOrEqual:wa.setTypes(ds.isGreaterOrEqual,X,{value:Rs,test:Rs}),isBetween:wa.setTypes(ds.isBetween,X,{value:Rs,min:Rs,max:Rs},{minInclusive:X,maxInclusive:X}),isWhole:wa.setTypes(ds.isWhole,X,{value:Rs},{epsilon:Rs}),isDecimal:wa.setTypes(ds.isDecimal,X,{value:Rs},{epsilon:Rs}),isPositive:wa.setTypes(ds.isPositive,X,{value:Rs}),isNegative:wa.setTypes(ds.isNegative,X,{value:Rs}),isDivisible:wa.setTypes(ds.isDivisible,X,{value:Rs,by:Rs},{epsilon:Rs}),bitCompare:wa.setTypes(ds.bitCompare,X,{value:Rs,method:Ma,test:Rs}),asAny:wa.setTypes(ds.asAny,ue,{value:Rs}),asBoolean:wa.setTypes(ds.asBoolean,X,{value:Rs}),asColor:wa.setTypes(ds.asColor,ni,{value:Rs}),asDate:wa.setTypes(ds.asDate,Ir,{value:Rs}),asList:wa.setTypes(ds.asList,e=>Os.forItem(e.value||Rs),{value:Rs}),asMap:wa.setTypes(ds.asMap,e=>Rr.forItem(e.value||Rs),{value:Rs}),asNumber:wa.setTypes(ds.asNumber,e=>e.value||Rs,{value:Rs}),asObject:wa.setTypes(ds.asObject,dt,{value:Rs}),asText:wa.setTypes(ds.asText,Re,{value:Rs}),asTuple:wa.setTypes(ds.asTuple,e=>ws.forItem([e.value||Rs]),{value:Rs}),asSet:wa.setTypes(ds.asSet,e=>ci.forItem(e.value||Rs),{value:Rs})},Pa=dt.operations,Ca=e=>e.object||dt,Da={create:Pa.setTypes(ct.create,Ca),maybe:Pa.setTypes(ct.maybe,e=>hi.maybe(e.value,dt),{value:ue}),has:Pa.setTypes(ct.has,X,{object:Ca,key:Re}),get:Pa.setTypes(ct.get,ue,{object:Ca,key:Re}),set:Pa.setTypes(ct.set,Ca,{object:Ca,key:Re,value:ue},{},{existingValue:ue}),delete:Pa.setTypes(ct.delete,ue,{object:Ca,key:Re}),cmp:Pa.setTypes(ct.cmp,Rs,{value:dt,test:dt}),copy:Pa.setTypes(ct.copy,Ca,{object:Ca}),merge:Pa.setTypes(ct.merge,e=>{const t={},s=["a","b","c","d","e"];for(const n of s){let s=e[n];if(s instanceof yt&&(s=s.getType()),s instanceof dt){const e=s.options.props;for(const s in e){const n=e[s];t[s]=s in t&&n instanceof qr?hi.mergeMany([n,t[s]]):n}}}return new dt({props:t})},{a:dt,b:dt},{c:dt,d:dt,e:dt}),isValid:Pa.setTypes(ct.isValid,X,{value:ue}),isEqual:Pa.setTypes(ct.isEqual,X,{value:dt,test:dt}),isNotEqual:Pa.setTypes(ct.isNotEqual,X,{value:dt,test:dt}),isLess:Pa.setTypes(ct.isLess,X,{value:dt,test:dt}),isLessOrEqual:Pa.setTypes(ct.isLessOrEqual,X,{value:dt,test:dt}),isGreater:Pa.setTypes(ct.isGreater,X,{value:dt,test:dt}),isGreaterOrEqual:Pa.setTypes(ct.isGreaterOrEqual,X,{value:dt,test:dt}),asAny:Pa.setTypes(ct.asAny,ue,{value:dt}),asBoolean:Pa.setTypes(ct.asBoolean,X,{value:dt}),asColor:Pa.setTypes(ct.asColor,ni,{value:dt}),asDate:Pa.setTypes(ct.asDate,Ir,{value:dt}),asList:Pa.setTypes(ct.asList,e=>Os.forItem(e.value||dt),{value:dt}),asMap:Pa.setTypes(ct.asMap,e=>Rr.forItem(e.value||dt),{value:dt}),asNumber:Pa.setTypes(ct.asNumber,Rs,{value:dt}),asObject:Pa.setTypes(ct.asObject,e=>e.value||dt,{value:dt}),asText:Pa.setTypes(ct.asText,Re,{value:dt}),asTuple:Pa.setTypes(ct.asTuple,e=>ws.forItem([e.value||dt]),{value:dt}),asSet:Pa.setTypes(ct.asSet,e=>ci.forItem(e.value||dt),{value:dt})},ka=ci.operations,Na=e=>e instanceof ci?e:void 0,La=e=>Na(e.set)||ci,Ra=e=>Na(e.set)?e.set.options.value:ue,Aa={set:La,value:Ra},ja=e=>Na(e.value)||ci,qa=e=>Na(e.value)?e.value.options.value:ue,_a={create:ka.setTypes(oi.create,ci),createLike:ka.setTypes(oi.createLike,La,{set:La}),createFor:ka.setTypes(oi.createFor,e=>Os.forItem(e.value||ue),{value:e=>e.value||ue}),maybe:ka.setTypes(oi.maybe,e=>hi.maybe(e.value,ci),{value:ue}),add:ka.setTypes(oi.add,La,{set:La,value:Ra}),has:ka.setTypes(oi.has,X,{set:La,value:Ra}),delete:ka.setTypes(oi.delete,X,{set:La,value:Ra}),values:ka.setTypes(oi.values,e=>Os.forItem(Ra(e)),{set:La}),clear:ka.setTypes(oi.clear,La,{set:La}),count:ka.setTypes(oi.count,Rs,{set:La}),cmp:ka.setTypes(oi.cmp,Rs,{value:ja,test:ja}),copy:ka.setTypes(oi.copy,La,{set:La},{deepCopy:Ra},Aa),map:ka.setTypes(oi.map,e=>ci.forItem(e.transform||Ra(e)),{set:La},{transform:e=>e.transform||Ra(e)},Aa),isValid:ka.setTypes(oi.isValid,X,{value:ue}),isEqual:ka.setTypes(oi.isEqual,X,{value:ja,test:ja}),isNotEqual:ka.setTypes(oi.isNotEqual,X,{value:ja,test:ja}),isLess:ka.setTypes(oi.isLess,X,{value:ja,test:ja}),isLessOrEqual:ka.setTypes(oi.isLessOrEqual,X,{value:ja,test:ja}),isGreater:ka.setTypes(oi.isGreater,X,{value:ja,test:ja}),isGreaterOrEqual:ka.setTypes(oi.isGreaterOrEqual,X,{value:ja,test:ja}),asAny:ka.setTypes(oi.asAny,ue,{value:ci}),asBoolean:ka.setTypes(oi.asBoolean,X,{value:ci}),asColor:ka.setTypes(oi.asColor,ni,{value:ci}),asDate:ka.setTypes(oi.asDate,Ir,{value:ci}),asList:ka.setTypes(oi.asList,e=>Os.forItem(qa(e)),{value:ci}),asMap:ka.setTypes(oi.asMap,e=>Rr.forItem(qa(e),qa(e)),{value:ci}),asNumber:ka.setTypes(oi.asNumber,e=>Rs,{value:ci}),asObject:ka.setTypes(oi.asObject,dt,{value:ci}),asText:ka.setTypes(oi.asText,Re,{value:ci}),asTuple:ka.setTypes(oi.asTuple,e=>ws.forItem([e.value||ci]),{value:ci}),asSet:ka.setTypes(oi.asSet,e=>e.value||ci,{value:ci})},Va=Re.operations,Fa=Os.forItem(Re),Ya=hi.object({index:Rs,lastIndex:Rs,input:Re,groups:Fa}),Ga={create:Va.setTypes(Ce.create,Re),uuid:Va.setTypes(Ce.uuid,Re),maybe:Va.setTypes(Ce.maybe,e=>hi.maybe(e.value,Re),{value:ue}),append:Va.setTypes(Ce.append,Re,{value:Re,append:Re}),prepend:Va.setTypes(Ce.prepend,Re,{value:Re,prepend:Re}),lower:Va.setTypes(Ce.lower,Re,{value:Re}),upper:Va.setTypes(Ce.upper,Re,{value:Re}),char:Va.setTypes(Ce.char,Re,{value:Re,index:Rs},{outside:Re}),replace:Va.setTypes(Ce.replace,Re,{value:Re,find:Re,replace:Re}),repeat:Va.setTypes(Ce.repeat,Re,{value:Re,times:Rs}),split:Va.setTypes(Ce.split,Fa,{value:Re,by:Re},{limit:Rs}),chars:Va.setTypes(Ce.chars,Fa,{value:Re}),sub:Va.setTypes(Ce.sub,Re,{value:Re},{start:Rs,end:Rs}),indexOf:Va.setTypes(Ce.indexOf,Rs,{value:Re,search:Re},{start:Rs}),lastIndexOf:Va.setTypes(Ce.lastIndexOf,Rs,{value:Re,search:Re},{start:Rs}),trim:Va.setTypes(Ce.trim,Re,{value:Re},{start:X,end:X}),startsWith:Va.setTypes(Ce.startsWith,X,{value:Re,test:Re}),endsWith:Va.setTypes(Ce.endsWith,X,{value:Re,test:Re}),soundex:Va.setTypes(Ce.soundex,Re,{value:Re},{max:Rs,min:Rs}),metaphone:Va.setTypes(Ce.metaphone,Re,{value:Re}),distance:Va.setTypes(Ce.distance,Rs,{value:Re,test:Re}),length:Va.setTypes(Ce.length,Rs,{value:Re}),compare:Va.setTypes(Ce.compare,Rs,{value:Re,test:Re},{ignoreCase:X}),like:Va.setTypes(Ce.like,X,{value:Re,pattern:Re},{ignoreCase:X}),pad:Va.setTypes(Ce.pad,Re,{value:Re,padding:Re,min:Rs},{max:Rs,append:X}),regexTest:Va.setTypes(Ce.regexTest,X,{value:Re,regex:Re},{ignoreCase:X,multiline:X}),regexSplit:Va.setTypes(Ce.regexSplit,Fa,{value:Re,regex:Re},{limit:Rs,ignoreCase:X,multiline:X}),regexMatch:Va.setTypes(Ce.regexMatch,Fa,{value:Re,regex:Re},{ignoreCase:X,multiline:X}),regexMatchAll:Va.setTypes(Ce.regexMatchAll,Os.forItem(Ya),{value:Re,regex:Re},{ignoreCase:X,multiline:X}),regexReplace:Va.setTypes(Ce.regexReplace,Re,{value:Re,regex:Re,replacement:Re},{all:X,ignoreCase:X,multiline:X}),regexReplaceDynamic:Va.setTypes(Ce.regexReplaceDynamic,Re,{value:Re,regex:Re,replace:Re},{all:X,ignoreCase:X,multiline:X},{match:Ya}),regexIndexOf:Va.setTypes(Ce.regexIndexOf,Rs,{value:Re,regex:Re},{ignoreCase:X,multiline:X}),base64:Va.setTypes(Ce.base64,Re,{value:Re}),unbase64:Va.setTypes(Ce.unbase64,Re,{value:Re}),encodeURI:Va.setTypes(Ce.encodeURI,Re,{value:Re}),decodeURI:Va.setTypes(Ce.decodeURI,Re,{value:Re}),encodeURIComponent:Va.setTypes(Ce.encodeURIComponent,Re,{value:Re}),decodeURIComponent:Va.setTypes(Ce.decodeURIComponent,Re,{value:Re}),md5:Va.setTypes(Ce.md5,Re,{value:Re}),encrypt:Va.setTypes(Ce.encrypt,Re,{value:Re,secret:Re}),decrypt:Va.setTypes(Ce.decrypt,Re,{value:Re,secret:Re}),toNumber:Va.setTypes(Ce.toNumber,Rs,{value:Re},{invalidValue:Rs}),isValid:Va.setTypes(Ce.isValid,X,{value:ue}),isEmpty:Va.setTypes(Ce.isEmpty,X,{value:Re}),isNotEmpty:Va.setTypes(Ce.isNotEmpty,X,{value:Re}),isEqual:Va.setTypes(Ce.isEqual,X,{a:Re,b:Re},{ignoreCase:X}),isNotEqual:Va.setTypes(Ce.isNotEqual,X,{a:Re,b:Re},{ignoreCase:X}),isLess:Va.setTypes(Ce.isLess,X,{value:Re,test:Re},{ignoreCase:X}),isLessOrEqual:Va.setTypes(Ce.isLessOrEqual,X,{value:Re,test:Re},{ignoreCase:X}),isGreater:Va.setTypes(Ce.isGreater,X,{value:Re,test:Re},{ignoreCase:X}),isGreaterOrEqual:Va.setTypes(Ce.isGreaterOrEqual,X,{value:Re,test:Re},{ignoreCase:X}),isLower:Va.setTypes(Ce.isLower,X,{value:Re}),isUpper:Va.setTypes(Ce.isUpper,X,{value:Re}),isUuid:Va.setTypes(Ce.isUuid,X,{value:Re}),asAny:Va.setTypes(Ce.asAny,ue,{value:Re}),asBoolean:Va.setTypes(Ce.asBoolean,X,{value:Re}),asColor:Va.setTypes(Ce.asColor,ni,{value:Re}),asDate:Va.setTypes(Ce.asDate,Ir,{value:Re}),asList:Va.setTypes(Ce.asList,e=>Os.forItem(e.value||Re),{value:Re}),asMap:Va.setTypes(Ce.asMap,e=>Rr.forItem(e.value||Re),{value:Re}),asNumber:Va.setTypes(Ce.asNumber,Rs,{value:Re}),asObject:Va.setTypes(Ce.asObject,dt,{value:Re}),asText:Va.setTypes(Ce.asText,e=>e.value||Re,{value:Re}),asTuple:Va.setTypes(Ce.asTuple,e=>ws.forItem([e.value||Re]),{value:Re}),asSet:Va.setTypes(Ce.asSet,e=>ci.forItem(e.value||Re),{value:Re})},Ba=ws.operations,Ua={create:Ba.setTypes(ps.create,ws),maybe:Ba.setTypes(ps.maybe,e=>hi.maybe(e.value,ws),{value:ue}),cmp:Ba.setTypes(ps.cmp,Rs,{value:ws,test:ws}),copy:Ba.setTypes(ps.copy,ws,{value:ws}),build:Ba.setTypes(ps.build,e=>{const t=["a","b","c","d","e"];let s=[],n=!1;for(const r of t){const t=e[r];t&&(t instanceof ws?s=s.concat(t.options):t instanceof Os?(n=!0,s.push(t.options.item)):s.push(t))}return n?Os.forItem(hi.mergeMany(s,ae.baseType)):new ws(s)},{a:ue,b:ue},{c:ue,d:ue,e:ue}),get:Ba.setTypes(ps.get,ue,{value:ws,index:Rs}),set:Ba.setTypes(ps.set,ue,{value:ws,index:Rs,element:ue}),isValid:Ba.setTypes(ps.isValid,X,{value:ue}),isEqual:Ba.setTypes(ps.isEqual,X,{value:ws,test:ws}),isNotEqual:Ba.setTypes(ps.isNotEqual,X,{value:ws,test:ws}),isLess:Ba.setTypes(ps.isLess,X,{value:ws,test:ws}),isLessOrEqual:Ba.setTypes(ps.isLessOrEqual,X,{value:ws,test:ws}),isGreater:Ba.setTypes(ps.isGreater,X,{value:ws,test:ws}),isGreaterOrEqual:Ba.setTypes(ps.isGreaterOrEqual,X,{value:ws,test:ws}),asAny:Ba.setTypes(ps.asAny,ue,{value:ws}),asBoolean:Ba.setTypes(ps.asBoolean,X,{value:ws}),asColor:Ba.setTypes(ps.asColor,ni,{value:ws}),asDate:Ba.setTypes(ps.asDate,Ir,{value:ws}),asList:Ba.setTypes(ps.asList,e=>Os.forItem(e.value||ws),{value:ws}),asMap:Ba.setTypes(ps.asMap,e=>Rr.forItem(e.value||ws),{value:ws}),asNumber:Ba.setTypes(ps.asNumber,Rs,{value:ws}),asObject:Ba.setTypes(ps.asObject,dt,{value:ws}),asText:Ba.setTypes(ps.asText,Re,{value:ws}),asTuple:Ba.setTypes(ps.asTuple,e=>e.value||ws,{value:ws}),asSet:Ba.setTypes(ps.asSet,e=>ci.forItem(e.value||ws),{value:ws})};class Wa{constructor(e,t={}){this.cached={},this.sections=[],this.add(e),this.escapes=t}add(e,t){if(r(e))this.getSection(e.length).formats[e]=t;else for(const t in e)this.getSection(t.length).formats[t]=e[t];return this}getSection(e){const t=this.sections.length-e,s=this.sections[t];if(s&&s.size===e)return s;for(const t of this.sections)if(t.size===e)return t;const n={size:e,formats:{}};return this.sections.push(n),this.sortBySize(),n}sortBySize(){this.sections.sort((e,t)=>t.size-e.size)}getEscaped(e,t){const s=e.charAt(t),n=this.escapes[s];if(!n)return!1;const{start:r,end:i,startEscape:a,endEscape:o}=n;if(e.substring(t,t+r.length)!==r)return!1;const u=t-a.indexOf(r);if(e.substring(u,u+a.length)===a)return!1;t+=r.length;const p=o.indexOf(i);let l=e.indexOf(i,t),c=e.substring(t,l);for(t=l-p;-1!==l&&e.substring(t,t+o.length)===o;)c=c.substring(0,c.length-p),c+=i,t+=o.length,l=e.indexOf(i,t),c+=e.substring(t,l),t=l-p;return-1!==l&&[c,l+i.length]}getFormatter(e,t=!1){if(e in this.cached)return this.cached[e];const s=this.sections,n=[];let r="";for(let t=0;t<e.length;t++){const i=this.getEscaped(e,t);if(!1!==i){const[e,s]=i;r+=e,t=s-1;continue}let a=!1;for(let r=0;r<s.length&&!a;r++){const i=s[r],o=e.substring(t,t+i.size);if(o.length===i.size){const e=i.formats[o];e&&(n.push(e),t+=i.size-1,a=!0)}}if(a){if(r){const e=r;n.splice(n.length-1,0,()=>e),r=""}}else r+=e.charAt(t)}r&&n.push(()=>r);const i=e=>{let t="";for(const s of n)t+=s(e);return t};return t&&(this.cached[e]=i),i}format(e,t,s=!1){return this.getFormatter(e,s)(t)}}const Ha=new Wa({M:([e])=>e.getMonth()+1+"",Mo:([e,t])=>t.suffix(e.getMonth()+1),MM:([e])=>P(e.getMonth()+1,2),MMm:([e,t])=>t.months[3][e.getMonth()],MMM:([e,t])=>t.months[2][e.getMonth()],MMMm:([e,t])=>t.months[1][e.getMonth()],MMMM:([e,t])=>t.months[0][e.getMonth()],Q:([e])=>Yn(e)+1+"",Qo:([e,t])=>t.suffix(Yn(e)+1),D:([e])=>e.getDate()+"",Do:([e,t])=>t.suffix(e.getDate()),DD:([e])=>P(e.getDate(),2),DDD:([e])=>Nn(e)+"",DDDo:([e,t])=>t.suffix(Nn(e)),DDDD:([e])=>P(Nn(e),3),d:([e])=>e.getDay()+"",do:([e,t])=>t.suffix(e.getDay()),dd:([e,t])=>t.weekdays[3][e.getDay()],ddd:([e,t])=>t.weekdays[2][e.getDay()],dddd:([e,t])=>t.weekdays[0][e.getDay()],e:([e])=>kn(e)+"",E:([e])=>kn(e)+1+"",eo:([e,t])=>t.suffix(kn(e)),Eo:([e,t])=>t.suffix(kn(e)+1),w:([e])=>fn(e)+"",wo:([e,t])=>t.suffix(fn(e)),ww:([e])=>P(fn(e),2),W:([e])=>gn(e)+"",Wo:([e,t])=>t.suffix(gn(e)),WW:([e])=>P(gn(e),2),Y:([e])=>e.getFullYear()+"",YY:([e])=>P(e.getFullYear()%100,2),YYYY:([e])=>P(e.getFullYear(),4,10),gg:([e])=>P(e.getFullYear()%100,2),gggg:([e])=>P(e.getFullYear(),4,10),GG:([e])=>P(e.getFullYear()%100,2),GGGG:([e])=>P(e.getFullYear(),4,10),a:([e,t])=>e.getHours()<12?t.am:t.pm,A:([e,t])=>e.getHours()<12?t.am.toUpperCase():t.pm.toUpperCase(),H:([e])=>e.getHours()+"",HH:([e])=>P(e.getHours(),2),h:([e])=>(e.getHours()%12||12)+"",hh:([e])=>P(e.getHours()%12||12,2),k:([e])=>e.getHours()+1+"",kk:([e])=>P(e.getHours()+1,2),m:([e])=>e.getMinutes()+"",mm:([e])=>P(e.getMinutes(),2),s:([e])=>e.getSeconds()+"",ss:([e])=>P(e.getSeconds(),2),S:([e])=>P(e.getMilliseconds(),3,1),SS:([e])=>P(e.getMilliseconds(),3,2),SSS:([e])=>P(e.getMilliseconds(),3),SSSS:([e])=>P(e.getMilliseconds(),3)+"0",SSSSS:([e])=>P(e.getMilliseconds(),3)+"00",SSSSSS:([e])=>P(e.getMilliseconds(),3)+"000",SSSSSSS:([e])=>P(e.getMilliseconds(),3)+"0000",SSSSSSSS:([e])=>P(e.getMilliseconds(),3)+"00000",SSSSSSSSS:([e])=>P(e.getMilliseconds(),3)+"000000",z:([e])=>e.toLocaleTimeString("en-us",{timeZoneName:"short"}).split(" ")[2],zz:([e])=>e.toLocaleTimeString("en-us",{timeZoneName:"long"}).split(" ")[2],Z:([e])=>Ka(e,":"),ZZ:([e])=>Ka(e,""),X:([e])=>Math.floor(e.valueOf()/1e3)+"",x:([e])=>e.valueOf()+"",LT:([e,t])=>Ja.format(t.formatLT,[e,t]),LTS:([e,t])=>Ja.format(t.formatLTS,[e,t]),L:([e,t])=>Ja.format(t.formatL,[e,t]),l:([e,t])=>Ja.format(t.formatl,[e,t]),LL:([e,t])=>Ja.format(t.formatLL,[e,t]),ll:([e,t])=>Ja.format(t.formatll,[e,t]),LLL:([e,t])=>Ja.format(t.formatLLL,[e,t]),lll:([e,t])=>Ja.format(t.formatlll,[e,t]),LLLL:([e,t])=>Ja.format(t.formatLLLL,[e,t]),llll:([e,t])=>Ja.format(t.formatllll,[e,t])},{"[":{start:"[",startEscape:"\\[",end:"]",endEscape:"\\]"},"'":{start:"'",startEscape:"''",end:"'",endEscape:"''"}}),Ja=Ha;function Ka(e,t){const s=Ln(e),n=Math.floor(Math.abs(s)/100),r=Math.abs(s)%100;return(s<0?"-":"+")+P(n,2)+t+P(r,2)}s.d(t,"isNumber",function(){return n}),s.d(t,"isString",function(){return r}),s.d(t,"isArray",function(){return i}),s.d(t,"isDate",function(){return a}),s.d(t,"isMap",function(){return o}),s.d(t,"isSet",function(){return u}),s.d(t,"isBoolean",function(){return p}),s.d(t,"isFunction",function(){return l}),s.d(t,"isObject",function(){return c}),s.d(t,"isUndefined",function(){return h}),s.d(t,"isSameClass",function(){return d}),s.d(t,"isWhole",function(){return m}),s.d(t,"isEmpty",function(){return y}),s.d(t,"clamp",function(){return g}),s.d(t,"toMap",function(){return f}),s.d(t,"reverseMap",function(){return v}),s.d(t,"arraySync",function(){return T}),s.d(t,"objectSync",function(){return b}),s.d(t,"objectMap",function(){return x}),s.d(t,"objectEach",function(){return E}),s.d(t,"objectValues",function(){return O}),s.d(t,"objectReduce",function(){return S}),s.d(t,"objectFromProps",function(){return w}),s.d(t,"objectToArray",function(){return M}),s.d(t,"coalesce",function(){return I}),s.d(t,"padNumber",function(){return P}),s.d(t,"pad",function(){return C}),s.d(t,"toString",function(){return D}),s.d(t,"Definitions",function(){return Pi}),s.d(t,"DataTypeRegistry",function(){return H}),s.d(t,"DataTypes",function(){return J}),s.d(t,"EntityKeyType",function(){return gi}),s.d(t,"EntityPrimaryType",function(){return fi}),s.d(t,"Entity",function(){return bi}),s.d(t,"EventBase",function(){return mi}),s.d(t,"Expression",function(){return q}),s.d(t,"Exprs",function(){return Ds}),s.d(t,"Func",function(){return yi}),s.d(t,"LinkedNode",function(){return di}),s.d(t,"isOperationTypeFunction",function(){return _}),s.d(t,"Operations",function(){return V}),s.d(t,"Computeds",function(){return F}),s.d(t,"Program",function(){return Ei}),s.d(t,"ReferenceData",function(){return Oi}),s.d(t,"RelationKind",function(){return vi}),s.d(t,"RelationCascade",function(){return Ti}),s.d(t,"Relation",function(){return xi}),s.d(t,"Runtime",function(){return Ci}),s.d(t,"Type",function(){return R}),s.d(t,"Types",function(){return hi}),s.d(t,"TraverseRemoveNoop",function(){return k}),s.d(t,"TraverseReplaceNoop",function(){return N}),s.d(t,"Traverser",function(){return L}),s.d(t,"ValidationSeverity",function(){return A}),s.d(t,"ValidationType",function(){return j}),s.d(t,"FastMap",function(){return Mi}),s.d(t,"NamedMap",function(){return Ii}),s.d(t,"ID",function(){return Y}),s.d(t,"EntityType",function(){return yt}),s.d(t,"AnyType",function(){return ue}),s.d(t,"BooleanType",function(){return X}),s.d(t,"ColorType",function(){return ni}),s.d(t,"DateType",function(){return Ir}),s.d(t,"EnumType",function(){return Ge}),s.d(t,"ListType",function(){return Os}),s.d(t,"ManyType",function(){return Cr}),s.d(t,"MapType",function(){return Rr}),s.d(t,"NotType",function(){return Vr}),s.d(t,"NullType",function(){return ae}),s.d(t,"NumberType",function(){return Rs}),s.d(t,"ObjectType",function(){return dt}),s.d(t,"OptionalType",function(){return qr}),s.d(t,"SetType",function(){return ci}),s.d(t,"TextType",function(){return Re}),s.d(t,"TupleType",function(){return ws}),s.d(t,"AndExpression",function(){return ee}),s.d(t,"ChainExpression",function(){return be}),s.d(t,"CommentExpression",function(){return Ee}),s.d(t,"ComputedExpression",function(){return we}),s.d(t,"ConstantExpression",function(){return Ue}),s.d(t,"DefineExpression",function(){return ce}),s.d(t,"DoExpression",function(){return ve}),s.d(t,"ForExpression",function(){return Ze}),s.d(t,"GetExpression",function(){return tt}),s.d(t,"GetDataExpression",function(){return nt}),s.d(t,"GetEntityExpression",function(){return ft}),s.d(t,"GetRelationExpression",function(){return Tt}),s.d(t,"IfExpression",function(){return Et}),s.d(t,"InvokeExpression",function(){return wt}),s.d(t,"NoExpression",function(){return oe}),s.d(t,"NotExpression",function(){return Q}),s.d(t,"ObjectExpression",function(){return Cs}),s.d(t,"OperationExpression",function(){return kt}),s.d(t,"OrExpression",function(){return It}),s.d(t,"ReturnExpression",function(){return Lt}),s.d(t,"SetExpression",function(){return jt}),s.d(t,"SubExpression",function(){return Vt}),s.d(t,"SwitchExpression",function(){return Ut}),s.d(t,"TemplateExpression",function(){return Jt}),s.d(t,"TupleExpression",function(){return Is}),s.d(t,"UpdateExpression",function(){return Qt}),s.d(t,"WhileExpression",function(){return is}),s.d(t,"defs",function(){return Di}),s.d(t,"EntityOperations",function(){return rt}),s.d(t,"EntityComputeds",function(){return it}),s.d(t,"EntityOps",function(){return ot}),s.d(t,"AnyOperations",function(){return te}),s.d(t,"AnyComputeds",function(){return se}),s.d(t,"AnyOps",function(){return ie}),s.d(t,"BooleanOperations",function(){return G}),s.d(t,"BooleanComputeds",function(){return B}),s.d(t,"BooleanOps",function(){return W}),s.d(t,"ColorOperations",function(){return Fr}),s.d(t,"ColorComputeds",function(){return Yr}),s.d(t,"ColorOps",function(){return Br}),s.d(t,"DateOperations",function(){return Er}),s.d(t,"DateComputeds",function(){return Or}),s.d(t,"DateOps",function(){return wr}),s.d(t,"ListOperations",function(){return ms}),s.d(t,"ListComputeds",function(){return ys}),s.d(t,"ListOps",function(){return fs}),s.d(t,"MapOperations",function(){return Ae}),s.d(t,"MapComputeds",function(){return je}),s.d(t,"MapOps",function(){return _e}),s.d(t,"NumberOperations",function(){return ls}),s.d(t,"NumberComputeds",function(){return cs}),s.d(t,"NumberOps",function(){return ds}),s.d(t,"ObjectOperations",function(){return ut}),s.d(t,"ObjectComputeds",function(){return pt}),s.d(t,"ObjectOps",function(){return ct}),s.d(t,"SetOperations",function(){return ri}),s.d(t,"SetComputeds",function(){return ii}),s.d(t,"SetOps",function(){return oi}),s.d(t,"TextOperations",function(){return Me}),s.d(t,"TextComputeds",function(){return Ie}),s.d(t,"TextOps",function(){return Ce}),s.d(t,"TupleOperations",function(){return as}),s.d(t,"TupleComputeds",function(){return os}),s.d(t,"TupleOps",function(){return ps}),s.d(t,"EntityOpsTypes",function(){return _i}),s.d(t,"AnyOpsTypes",function(){return Fi}),s.d(t,"BooleanOpsTypes",function(){return Gi}),s.d(t,"ColorComponentEnum",function(){return Ui}),s.d(t,"ColorOrNumber",function(){return Wi}),s.d(t,"ColorFormats",function(){return Hi}),s.d(t,"ColorNames",function(){return Ji}),s.d(t,"ColorBlendModes",function(){return Ki}),s.d(t,"ColorOpsTypes",function(){return zi}),s.d(t,"DateOpsTypes",function(){return ea}),s.d(t,"ListOpsTypes",function(){return da}),s.d(t,"MapOpsTypes",function(){return Sa}),s.d(t,"NumberOpsTypes",function(){return Ia}),s.d(t,"ObjectOpsTypes",function(){return Da}),s.d(t,"SetOpsTypes",function(){return _a}),s.d(t,"TextOpsTypes",function(){return Ga}),s.d(t,"TupleOpsTypes",function(){return Ua}),s.d(t,"currentLocale",function(){return js}),s.d(t,"COMPONENT_MIN",function(){return Ur}),s.d(t,"COMPONENT_MAX",function(){return Wr}),s.d(t,"isColor",function(){return Hr}),s.d(t,"clampComponent",function(){return Jr}),s.d(t,"ColorSpace",function(){return Kr}),s.d(t,"isColorHSL",function(){return Qr}),s.d(t,"ColorSpaceHSL",function(){return Zr}),s.d(t,"ColorSpaceRGB",function(){return zr}),s.d(t,"MILLIS_IN_SECOND",function(){return qs}),s.d(t,"SECONDS_IN_MINUTE",function(){return 60}),s.d(t,"HOURS_IN_DAY",function(){return 24}),s.d(t,"DAYS_IN_WEEK",function(){return _s}),s.d(t,"MILLIS_IN_MINUTE",function(){return Vs}),s.d(t,"MILLIS_IN_HOUR",function(){return Fs}),s.d(t,"MILLIS_IN_DAY",function(){return Ys}),s.d(t,"MONTHS_IN_QUARTER",function(){return Gs}),s.d(t,"MONTHS_IN_YEAR",function(){return Bs}),s.d(t,"DAY_MIN",function(){return Us}),s.d(t,"DAY_MAX",function(){return Ws}),s.d(t,"HOUR_MAX",function(){return Hs}),s.d(t,"MINUTE_MAX",function(){return Js}),s.d(t,"SECOND_MAX",function(){return Ks}),s.d(t,"MILLIS_MAX",function(){return zs}),s.d(t,"WEEKDAY_MAX",function(){return Xs}),s.d(t,"DateFormat",function(){return Ha}),s.d(t,"adjusters",function(){return $s}),s.d(t,"getters",function(){return Qs}),s.d(t,"setters",function(){return Zs}),s.d(t,"startOf",function(){return en}),s.d(t,"endOf",function(){return tn}),s.d(t,"add",function(){return sn}),s.d(t,"diff",function(){return nn}),s.d(t,"mutate",function(){return rn}),s.d(t,"compareDates",function(){return an}),s.d(t,"DateParsers",function(){return on}),s.d(t,"parse",function(){return un}),s.d(t,"getTimeIdentifier",function(){return pn}),s.d(t,"getDayIdentifier",function(){return ln}),s.d(t,"getWeekIdentifier",function(){return cn}),s.d(t,"getMonthIdentifier",function(){return hn}),s.d(t,"getQuarterIdentifier",function(){return dn}),s.d(t,"getLastDayOfMonth",function(){return mn}),s.d(t,"getLastWeekspanOfYear",function(){return yn}),s.d(t,"getWeekOfYearISO",function(){return gn}),s.d(t,"getWeekOfYear",function(){return fn}),s.d(t,"getWeekspanOfYear",function(){return vn}),s.d(t,"getFullWeekOfYear",function(){return Tn}),s.d(t,"getWeeksInYear",function(){return bn}),s.d(t,"getLastFullWeekOfYear",function(){return xn}),s.d(t,"getWeekspanOfMonth",function(){return En}),s.d(t,"getLastWeekspanOfMonth",function(){return On}),s.d(t,"getFullWeekOfMonth",function(){return Sn}),s.d(t,"getLastFullWeekOfMonth",function(){return wn}),s.d(t,"getWeekOfMonthISO",function(){return Mn}),s.d(t,"getWeekOfMonth",function(){return In}),s.d(t,"getWeekISO",function(){return Pn}),s.d(t,"getWeek",function(){return Cn}),s.d(t,"getFullWeekOf",function(){return Dn}),s.d(t,"getDayOfWeek",function(){return kn}),s.d(t,"getDayOfYear",function(){return Nn}),s.d(t,"getDateOffset",function(){return Ln}),s.d(t,"isDaylightSavingTime",function(){return Rn}),s.d(t,"isLeapYear",function(){return An}),s.d(t,"getDaysInYear",function(){return jn}),s.d(t,"daysInMonth",function(){return qn}),s.d(t,"getDaysInMonth",function(){return _n}),s.d(t,"getAbsoluteTimestamp",function(){return Vn}),s.d(t,"getTimezoneOffsetInMilliseconds",function(){return Fn}),s.d(t,"getQuarter",function(){return Yn}),s.d(t,"startOfSecond",function(){return Gn}),s.d(t,"startOfMinute",function(){return Bn}),s.d(t,"startOfHour",function(){return Un}),s.d(t,"startOfDay",function(){return Wn}),s.d(t,"startOfWeek",function(){return Hn}),s.d(t,"startOfMonth",function(){return Jn}),s.d(t,"startOfQuarter",function(){return Kn}),s.d(t,"startOfYear",function(){return zn}),s.d(t,"endOfSecond",function(){return Xn}),s.d(t,"endOfMinute",function(){return $n}),s.d(t,"endOfHour",function(){return Qn}),s.d(t,"endOfDay",function(){return Zn}),s.d(t,"endOfWeek",function(){return er}),s.d(t,"endOfMonth",function(){return tr}),s.d(t,"endOfQuarter",function(){return sr}),s.d(t,"endOfYear",function(){return nr}),s.d(t,"addMilliseconds",function(){return rr}),s.d(t,"addSeconds",function(){return ir}),s.d(t,"addMinutes",function(){return ar}),s.d(t,"addHours",function(){return or}),s.d(t,"addDays",function(){return ur}),s.d(t,"addWeeks",function(){return pr}),s.d(t,"addMonths",function(){return lr}),s.d(t,"addQuarters",function(){return cr}),s.d(t,"addYears",function(){return hr}),s.d(t,"diffMilliseconds",function(){return dr}),s.d(t,"diffSeconds",function(){return mr}),s.d(t,"diffMinutes",function(){return yr}),s.d(t,"diffHours",function(){return gr}),s.d(t,"diffDays",function(){return fr}),s.d(t,"diffWeeks",function(){return vr}),s.d(t,"diffMonths",function(){return Tr}),s.d(t,"diffQuarters",function(){return br}),s.d(t,"diffYears",function(){return xr}),s.d(t,"Format",function(){return Wa})}])});
//# sourceMappingURL=expangine-runtime.js.map